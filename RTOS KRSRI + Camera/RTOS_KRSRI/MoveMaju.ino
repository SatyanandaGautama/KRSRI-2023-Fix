void rotRightStart(float sdt) { //Default 10 derajat
  movecounter++;
  if (movecounter == 1) {
    IKRot1(55, 55, 25, sdt);
    IKRot1(-55, -55, 25, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, -55, 0, sdt);
    delay(15);

    IKRot1(52.59, 57.41, 22.22, sdt);
    IKRot1(-52.59, -57.41, 22.22, sdt);
    IKRot1(-54.7, 55.3, 0, sdt);
    IKRot1(54.7, -55.3, 0, sdt);
    delay(15);

    IKRot1(50.74, 59.26, 13.89, sdt);
    IKRot1(-50.74, -59.26, 13.89, sdt);
    IKRot1(-54.4, 55.6, 0, sdt);
    IKRot1(54.4, -55.6, 0, sdt);
    delay(15);

    ///////////////////////////////////////////////////
    IKRot1(50.4, 59.6, 8.85, sdt);
    IKRot1(-50.4, -59.6, 8.85, sdt);
    IKRot1(-54.3, 55.7, 0, sdt);
    IKRot1(54.3, -55.7, 0, sdt);
    delay(15);

    IKRot1(50.28, 59.72, 4.3, sdt);
    IKRot1(-50.28, -59.72, 4.3, sdt);
    IKRot1(-54.2, 55.8, 0, sdt);
    IKRot1(54.2, -55.8, 0, sdt);
    delay(15);
    //////////////////////////////////////////////////

    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    IKRot1(-54.1, 55.9, 0, sdt);
    IKRot1(54.1, -55.9, 0, sdt);
    delay(15);
    ///////////////////////////////////////////////////
    IKRot1(50.11, 59.89, 0, sdt);
    IKRot1(-50.11, -59.89, 0, sdt);
    IKRot1(-53.99, 56.01, 0, sdt);
    IKRot1(53.99, -56.01, 0, sdt);
    delay(15);

    //    IKRot1(50.43, 59.57, 0, sdt);
    //    IKRot1(-50.43, -59.57, 0, sdt);
    //    IKRot1(-53.67, 56.33, 0, sdt);
    //    IKRot1(53.67, -56.33, 0, sdt);
    //    delay(15);

    IKRot1(50.89, 59.11, 0, sdt);
    IKRot1(-50.89, -59.11, 0, sdt);
    IKRot1(-53.21, 56.79, 0, sdt);
    IKRot1(53.21, -56.79, 0, sdt);
    delay(15);

    //    IKRot1(51.44, 58.56, 0, sdt);
    //    IKRot1(-51.44, -58.56, 0, sdt);
    //    IKRot1(-52.66, 57.34, 0, sdt);
    //    IKRot1(52.66, -57.34, 0, sdt);
    //    delay(15);

    IKRot1(52.05, 57.95, 0, sdt);
    IKRot1(-52.05, -57.95, 0, sdt);
    IKRot1(-52.05, 57.95, 0, sdt);
    IKRot1(52.05, -57.95, 0, sdt);
    delay(15);

    //    IKRot1(52.66, 57.34, 0, sdt);
    //    IKRot1(-52.66, -57.34, 0, sdt);
    //    IKRot1(-51.44, 58.56, 0, sdt);
    //    IKRot1(51.44, -58.56, 0, sdt);
    //    delay(15);

    IKRot1(53.21, 56.79, 0, sdt);
    IKRot1(-53.21, -56.79, 0, sdt);
    IKRot1(-50.89, 59.11, 0, sdt);
    IKRot1(50.89, -59.11, 0, sdt);
    delay(15);

    //    IKRot1(53.67, 56.33, 0, sdt);
    //    IKRot1(-53.67, -56.33, 0, sdt);
    //    IKRot1(-50.43, 59.57, 0, sdt);
    //    IKRot1(50.43, -59.57, 0, sdt);
    //    delay(15);

    IKRot1(53.99, 56.01, 0, sdt);
    IKRot1(-53.99, -56.01, 0, sdt);
    IKRot1(-50.11, 59.89, 0, sdt);
    IKRot1(50.11, -59.89, 0, sdt);
    delay(15);

    ///////////////////////////////////////////////////////
    IKRot1(54.1, 55.9, 0, sdt);
    IKRot1(-54.1, -55.9, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(50, -60, 0, sdt);
    delay(15);

    IKRot1(54.40, 55.60, 0, sdt);
    IKRot1(-54.40, -55.60, 0, sdt);
    IKRot1(-50.74, 59.26, 13.89, sdt);
    IKRot1(50.74, -59.26, 13.89, sdt);
    delay(15);

    IKRot1(54.7, 55.3, 0, sdt);
    IKRot1(-54.7, -55.3, 0, sdt);
    IKRot1(-52.59, 57.41, 22.22, sdt);
    IKRot1(52.59, -57.41, 22.22, sdt);
    delay(15);
  }
  else if (movecounter == 2) {
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    IKRot1(-55, 55, 25, sdt);
    IKRot1(55, -55, 25, sdt);
    delay(15);

    IKRot1(55.3, 54.7, 0, sdt);
    IKRot1(-55.3, -54.7, 0, sdt);
    IKRot1(-57.41, 52.59, 22.22, sdt);
    IKRot1(57.41, -52.59, 22.22, sdt);
    delay(15);

    IKRot1(55.6, 54.4, 0, sdt);
    IKRot1(-55.6, -54.4, 0, sdt);
    IKRot1(-59.26, 50.74, 13.89, sdt);
    IKRot1(59.26, -50.74, 13.89, sdt);
    delay(15);
    //////////////////////////////////////////

    IKRot1(55.7, 54.3, 0, sdt);
    IKRot1(-55.7, -54.3, 0, sdt);
    IKRot1(-59.6, 50.4, 8.85, sdt);
    IKRot1(59.6, -50.4, 8.85, sdt);
    delay(15);

    IKRot1(55.8, 54.2, 0, sdt);
    IKRot1(-55.8, -54.2, 0, sdt);
    IKRot1(-59.72, 50.28, 4.3, sdt);
    IKRot1(59.72, -50.28, 4.3, sdt);
    delay(15);
    ///////////////////////////////////////////
    IKRot1(55.9, 54.1, 0, sdt);
    IKRot1(-55.9, -54.1, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(60, -50, 0, sdt);
    delay(15);

    ////////////////////////////////////
    //    IKRot1(56.01, 53.99, 0, sdt);
    //    IKRot1(-56.01, -53.99, 0, sdt);
    //    IKRot1(-59.89, 50.11, 0, sdt);
    //    IKRot1(59.89, -50.11, 0, sdt);
    //    delay(15);

    IKRot1(56.33, 53.67, 0, sdt);
    IKRot1(-56.33, -53.67, 0, sdt);
    IKRot1(-59.57, 50.43, 0, sdt);
    IKRot1(59.57, -50.43, 0, sdt);
    delay(15);

    //    IKRot1(56.79, 53.21, 0, sdt);
    //    IKRot1(-56.79, -53.21, 0, sdt);
    //    IKRot1(-59.11, 50.89, 0, sdt);
    //    IKRot1(59.11, -50.89, 0, sdt);
    //    delay(15);

    IKRot1(57.34, 52.66, 0, sdt);
    IKRot1(-57.34, -52.66, 0, sdt);
    IKRot1(-58.56, 51.44, 0, sdt);
    IKRot1(58.56, -51.44, 0, sdt);
    delay(15);

    //    IKRot1(57.95, 52.05, 0, sdt);
    //    IKRot1(-57.95, -52.05, 0, sdt);
    //    IKRot1(-57.95, 52.05, 0, sdt);
    //    IKRot1(57.95, -52.05, 0, sdt);
    //    delay(15);

    IKRot1(58.56, 51.44, 0, sdt);
    IKRot1(-58.56, -51.44, 0, sdt);
    IKRot1(-57.34, 52.66, 0, sdt);
    IKRot1(57.34, -52.66, 0, sdt);
    delay(15);

    //    IKRot1(59.11, 50.89, 0, sdt);
    //    IKRot1(-59.11, -50.89, 0, sdt);
    //    IKRot1(-56.79, 53.21, 0, sdt);
    //    IKRot1(56.79, -53.21, 0, sdt);
    //    delay(15);

    IKRot1(59.57, 50.43, 0, sdt);
    IKRot1(-59.57, -50.43, 0, sdt);
    IKRot1(-56.33, 53.67, 0, sdt);
    IKRot1(56.33, -53.67, 0, sdt);
    delay(15);

    //    IKRot1(59.89, 50.11, 0, sdt);
    //    IKRot1(-59.89, -50.11, 0, sdt);
    //    IKRot1(-56.01, 53.99, 0, sdt);
    //    IKRot1(56.01, -53.99, 0, sdt);
    //    delay(15);

    ///////////////////////////////////////////
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    IKRot1(-55.9, 54.1, 0, sdt);
    IKRot1(55.9, -54.1, 0, sdt);
    delay(15);

    IKRot1(59.26, 50.74, 13.89, sdt);
    IKRot1(-59.26, -50.74, 13.89, sdt);
    IKRot1(-55.6, 54.4, 0, sdt);
    IKRot1(55.6, -54.4, 0, sdt);
    delay(15);

    IKRot1(57.41, 52.59, 22.22, sdt);
    IKRot1(-57.41, -52.59, 22.22, sdt);
    IKRot1(-55.3, 54.7, 0, sdt);
    IKRot1(55.3, -54.7, 0, sdt);
    delay(15);
    movecounter = 0;
  }
}

void rotLeftStart(float sdt) { //Default 10 derajat
  movecounter++;
  if (movecounter == 1) {
    IKRot1(55, -55, 0, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, 55, 25, sdt);
    IKRot1(-55, -55, 25, sdt);
    delay(15);
    /////////////////////Movecounter 1////////////////
    IKRot1(55.3, -54.7, 0, sdt);
    IKRot1(-55.3, 54.7, 0, sdt);
    IKRot1(57.41, 52.59, 22.22, sdt);
    IKRot1(-57.41, -52.59, 22.22, sdt);
    delay(15);

    IKRot1(55.6, -54.4, 0, sdt);
    IKRot1(-55.6, 54.4, 0, sdt);
    IKRot1(59.26, 50.74, 13.89, sdt);
    IKRot1(-59.26, -50.74, 13.89, sdt);
    delay(15);

    IKRot1(55.7, -54.3, 0, sdt);
    IKRot1(-55.7, 54.3, 0, sdt);
    IKRot1(59.6, 50.4, 8.85, sdt);
    IKRot1(-59.6, -50.4, 8.85, sdt);
    delay(15);

    IKRot1(55.8, -54.2, 0, sdt);
    IKRot1(-55.8, 54.2, 0, sdt);
    IKRot1(59.72, 50.28, 4.3, sdt);
    IKRot1(-59.72, -50.28, 4.3, sdt);
    delay(15);

    IKRot1(55.9, -54.1, 0, sdt);
    IKRot1(-55.9, 54.1, 0, sdt);
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    delay(15);

    //    IKRot1(56.01, -53.99, 0, sdt);
    //    IKRot1(-56.01, 53.99, 0, sdt);
    //    IKRot1(59.89, 50.11, 0, sdt);
    //    IKRot1(-59.89, -50.11, 0, sdt);
    //    delay(15);

    IKRot1(56.33, -53.67, 0, sdt);
    IKRot1(-56.33, 53.67, 0, sdt);
    IKRot1(59.57, 50.43, 0, sdt);
    IKRot1(-59.57, -50.43, 0, sdt);
    delay(15);

    //    IKRot1(56.79, -53.21, 0, sdt);
    //    IKRot1(-56.79, 53.21, 0, sdt);
    //    IKRot1(59.11, 50.89, 0, sdt);
    //    IKRot1(-59.11, -50.89, 0, sdt);
    //    delay(15);

    IKRot1(57.34, -52.66, 0, sdt);
    IKRot1(-57.34, 52.66, 0, sdt);
    IKRot1(58.56, 51.44, 0, sdt);
    IKRot1(-58.56, -51.44, 0, sdt);
    delay(15);

    //    IKRot1(57.95, -52.05, 0, sdt);
    //    IKRot1(-57.95, 52.05, 0, sdt);
    //    IKRot1(57.95, 52.05, 0, sdt);
    //    IKRot1(-57.95, -52.05, 0, sdt);
    //    delay(15);

    IKRot1(58.56, -51.44, 0, sdt);
    IKRot1(-58.56, 51.44, 0, sdt);
    IKRot1(57.34, 52.66, 0, sdt);
    IKRot1(-57.34, -52.66, 0, sdt);
    delay(15);

    //    IKRot1(59.11, -50.89, 0, sdt);
    //    IKRot1(-59.11, 50.89, 0, sdt);
    //    IKRot1(56.79, 53.21, 0, sdt);
    //    IKRot1(-56.79, -53.21, 0, sdt);
    //    delay(15);

    IKRot1(59.57, -50.43, 0, sdt);
    IKRot1(-59.57, 50.43, 0, sdt);
    IKRot1(56.33, 53.67, 0, sdt);
    IKRot1(-56.33, -53.67, 0, sdt);
    delay(15);

    //    IKRot1(59.89, -50.11, 0, sdt);
    //    IKRot1(-59.89, 50.11, 0, sdt);
    //    IKRot1(56.01, 53.99, 0, sdt);
    //    IKRot1(-56.01, -53.99, 0, sdt);
    //    delay(15);

    IKRot1(60, -50, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(55.9, 54.1, 0, sdt);
    IKRot1(-55.9, -54.1, 0, sdt);
    delay(15);

    IKRot1(59.26, -50.74, 13.89, sdt);
    IKRot1(-59.26, 50.74, 13.89, sdt);
    IKRot1(55.6, 54.4, 0, sdt);
    IKRot1(-55.6, -54.4, 0, sdt);
    delay(15);

    IKRot1(57.41, -52.59, 22.22, sdt);
    IKRot1(-57.41, 52.59, 22.22, sdt);
    IKRot1(55.3, 54.7, 0, sdt);
    IKRot1(-55.3, -54.7, 0, sdt);
    delay(15);
    //////////////////////////////////////////////
  }
  else if (movecounter == 2) {
    IKRot1(55, -55, 25, sdt);
    IKRot1(-55, 55, 25, sdt);
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    delay(15);
    //////////////////Movecounter 2////////////////////
    IKRot1(52.59, -57.41, 22.22, sdt);
    IKRot1(-52.59, 57.41, 22.22, sdt);
    IKRot1(54.7, 55.3, 0, sdt);
    IKRot1(-54.7, -55.3, 0, sdt);
    delay(15);

    IKRot1(50.74, -59.26, 13.89, sdt);
    IKRot1(-50.74, 59.26, 13.89, sdt);
    IKRot1(54.4, 55.6, 0, sdt);
    IKRot1(-54.4, -55.6, 0, sdt);
    delay(15);

    IKRot1(50.4, -59.6, 8.85, sdt);
    IKRot1(-50.4, 59.6, 8.85, sdt);
    IKRot1(54.3, 55.7, 0, sdt);
    IKRot1(-54.3, -55.7, 0, sdt);
    delay(15);

    IKRot1(50.28, -59.72, 4.3, sdt);
    IKRot1(-50.28, 59.72, 4.3, sdt);
    IKRot1(54.2, 55.8, 0, sdt);
    IKRot1(-54.2, -55.8, 0, sdt);
    delay(15);

    IKRot1(50, -60, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(54.1, 55.9, 0, sdt);
    IKRot1(-54.1, -55.9, 0, sdt);
    delay(15);

    //    IKRot1(50.11, -59.89, 0, sdt);
    //    IKRot1(-50.11, 59.89, 0, sdt);
    //    IKRot1(53.99, 56.01, 0, sdt);
    //    IKRot1(-53.99, -56.01, 0, sdt);
    //    delay(15);

    IKRot1(50.43, -59.57, 0, sdt);
    IKRot1(-50.43, 59.57, 0, sdt);
    IKRot1(53.67, 56.33, 0, sdt);
    IKRot1(-53.67, -56.33, 0, sdt);
    delay(15);

    //    IKRot1(50.89, -59.11, 0, sdt);
    //    IKRot1(-50.89, 59.11, 0, sdt);
    //    IKRot1(53.21, 56.79, 0, sdt);
    //    IKRot1(-53.21, -56.79, 0, sdt);
    //    delay(15);

    IKRot1(51.44, -58.56, 0, sdt);
    IKRot1(-51.44, 58.56, 0, sdt);
    IKRot1(52.66, 57.34, 0, sdt);
    IKRot1(-52.66, -57.34, 0, sdt);
    delay(15);

    //    IKRot1(52.05, -57.95, 0, sdt);
    //    IKRot1(-52.05, 57.95, 0, sdt);
    //    IKRot1(52.05, 57.95, 0, sdt);
    //    IKRot1(-52.05, -57.95, 0, sdt);
    //    delay(15);

    IKRot1(52.66, -57.34, 0, sdt);
    IKRot1(-52.66, 57.34, 0, sdt);
    IKRot1(51.44, 58.56, 0, sdt);
    IKRot1(-51.44, -58.56, 0, sdt);
    delay(15);

    //    IKRot1(53.21, -56.79, 0, sdt);
    //    IKRot1(-53.21, 56.79, 0, sdt);
    //    IKRot1(50.89, 59.11, 0, sdt);
    //    IKRot1(-50.89, -59.11, 0, sdt);
    //    delay(15);

    IKRot1(53.67, -56.33, 0, sdt);
    IKRot1(-53.67, 56.33, 0, sdt);
    IKRot1(50.43, 59.57, 0, sdt);
    IKRot1(-50.43, -59.57, 0, sdt);
    delay(15);

    //    IKRot1(53.99, -56.01, 0, sdt);
    //    IKRot1(-53.99, 56.01, 0, sdt);
    //    IKRot1(50.11, 59.89, 0, sdt);
    //    IKRot1(-50.11, -59.89, 0, sdt);
    //    delay(15);

    IKRot1(54.1, -55.9, 0, sdt);
    IKRot1(-54.1, 55.9, 0, sdt);
    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    delay(15);

    IKRot1(54.40, -55.60, 0, sdt);
    IKRot1(-54.40, 55.60, 0, sdt);
    IKRot1(50.74, 59.26, 13.89, sdt);
    IKRot1(-50.74, -59.26, 13.89, sdt);
    delay(15);

    IKRot1(54.7, -55.3, 0, sdt);
    IKRot1(-54.7, 55.3, 0, sdt);
    IKRot1(52.59, 57.41, 22.22, sdt);
    IKRot1(-52.59, -57.41, 22.22, sdt);
    delay(15);
    movecounter = 0;
  }
}

void kananStart(float lbr) {
  arahgerak = false;
  movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 15, lbr);
    BL(-55, -55, 15, lbr);
    FL(-55, 55, 0, lbr);
    BR(55, -55, 0, lbr);
    delay(tp);

    FR(55, 69.44, 13.33, lbr);
    BL(-55, -40.56, 13.33, lbr);
    FL(-55, 59.98, 0, lbr);
    BR(55, -50, 0, lbr);
    delay(tp);

    FR(55, 80.56, 8.3, lbr);
    BL(-55, -29.44, 8.3, lbr);
    FL(-55, 64.84, 0, lbr);
    BR(55, -45.16, 0, lbr);
    delay(tp);

    FR(55, 85, 0, lbr);
    BL(-55, -25, 0, lbr);
    FL(-55, 69.44, 0, lbr);
    BR(55, -40.56, 0, lbr);
    delay(tp);

    FR(55, 84.47, 0, lbr);
    BL(-55, -25.53, 0, lbr);
    FL(-55, 73.68, 0, lbr);
    BR(55, -36.32, 0, lbr);
    delay(tp);

    FR(55, 82.84, 0, lbr);
    BL(-55, -27.06, 0, lbr);
    FL(-55, 77.43, 0, lbr);
    BR(55, -32.57, 0, lbr);
    delay(tp);

    FR(55, 80.56, 0, lbr);
    BL(-55, -29.44, 0, lbr);
    FL(-55, 80.56, 0, lbr);
    BR(55, -29.44, 0, lbr);
    delay(tp);

    FR(55, 77.43, 0, lbr);
    BL(-55, -32.57, 0, lbr);
    FL(-55, 82.94, 0, lbr);
    BR(55, -27.06, 0, lbr);
    delay(tp);

    FR(55, 73.68, 0, lbr);
    BL(-55, -36.32, 0, lbr);
    FL(-55, 84.47, 0, lbr);
    BR(55, -25.53, 0, lbr);
    delay(tp);

    FR(55, 69.44, 0, lbr);
    BL(-55, -40.56, 0, lbr);
    FL(-55, 85, 0, lbr);
    BR(55, -25, 0, lbr);
    delay(tp);

    FR(55, 64.84, 0,  lbr);
    BL(-55, -45.16, 0, lbr);
    FL(-55, 80.56, 8.33, lbr);
    BR(55, -29.44, 8.33, lbr);
    delay(tp);

    FR(55, 59.98, 0, lbr);
    BL(-55, -50, 0, lbr);
    FL(-55, 69.44, 13.33, lbr);
    BR(55, -40.56, 13.33, lbr);
    delay(tp);
  }
  else if (movecounter == 2) {
    FR(55, 55, 0, lbr);
    BL(-55, -55, 0, lbr);
    FL(-55, 55, 15, lbr);
    BR(55, -55, 15, lbr);
    delay(tp);

    FR(55, 50, 0, lbr);
    BL(-55, -59.98, 0, lbr);
    FL(-55, 40.56, 13.33, lbr);
    BR(55, -69.44, 13.33, lbr);
    delay(tp);

    FR(55, 45.16, 0, lbr);
    BL(-55, -64.84, 0, lbr);
    FL(-55, 29.44, 8.33, lbr);
    BR(55, -80.56, 8.33, lbr);
    delay(tp);

    FR(55, 40.56, 0, lbr);
    BL(-55, -69.44, 0, lbr);
    FL(-55, 25, 0, lbr);
    BR(55, -85, 0, lbr);
    delay(tp);

    FR(55, 36.32, 0, lbr);
    BL(-55, -73.68, 0, lbr);
    FL(-55, 25.53, 0, lbr);
    BR(55, -84.47, 0, lbr);
    delay(tp);

    FR(55, 32.57, 0, lbr);
    BL(-55, -77.43, 0, lbr);
    FL(-55, 27.06, 0, lbr);
    BR(55, -82.94, 0, lbr);
    delay(tp);

    FR(55, 29.44, 0, lbr);
    BL(-55, -80.56, 0, lbr);
    FL(-55, 29.44, 0, lbr);
    BR(55, -80.56, 0, lbr);
    delay(tp);

    FR(55, 27.06, 0, lbr);
    BL(-55, -82.94, 0, lbr);
    FL(-55, 32.57, 0, lbr);
    BR(55, -77.43, 0, lbr);
    delay(tp);

    FR(55, 25.53, 0, lbr);
    BL(-55, -84.47, 0, lbr);
    FL(-55, 36.32, 0, lbr);
    BR(55, -73.68, 0, lbr);
    delay(tp);

    FR(55, 25, 0, lbr);
    BL(-55, -85, 0, lbr);
    FL(-55, 40.56, 0, lbr);
    BR(55, -69.44, 0, lbr);
    delay(tp);

    FR(55, 29.44, 8.33, lbr);
    BL(-55, -80.56, 8.33, lbr);
    FL(-55, 45.16, 0, lbr);
    BR(55, -64.48, 0, lbr);
    delay(tp);

    FR(55, 40.56, 13.33, lbr);
    BL(-55, -69.44, 13.33, lbr);
    FL(-55, 50, 0, lbr);
    BR(55, -59.98, 0, lbr);
    delay(tp);
    movecounter = 0;
  }
}

/////////////////lebih turun////
void mundurpecah(float lbr) {
  arahgerak = false;
  height = -75;
  height2 = -75;
  movecounter++;
  if (movecounter == 1) {
    FR(55.00, 55.00, 15.00, lbr);
    BL(-55.00, -55.00, 15.00, lbr);
    FL(-55.00, 55.00, 0.00, lbr);
    BR(55.00, -55.00, 0.00, lbr);
    delay(tp);


    FR(43.98, 55.00, 32.81, lbr);
    BL(-66.02, -55.00, 32.81, lbr);
    FL(-58.30, 55.00, 0.00, lbr);
    BR(51.70, -55.00, 0.00, lbr);
    delay(tp);


    FR(34.38, 55.00, 26.25, lbr);
    BL(-75.63, -55.00, 26.25, lbr);
    FL(-61.19, 55.00, 0.00, lbr);
    BR(48.81, -55.00, 0.00, lbr);
    delay(tp);


    FR(27.58, 55.00, 15.31, lbr);
    BL(-82.42, -55.00, 15.31, lbr);
    FL(-63.23, 55.00, 0.00, lbr);
    BR(46.77, -55.00, 0.00, lbr);
    delay(tp);
    ////////////////////////////////////////
    FR(25.00, 55.00, 0.00, lbr);
    BL(-85.00, -55.00, 0.00, lbr);
    FL(-64.00, 55.00, 0.00, lbr);
    BR(46.00, -55.00, 0.00, lbr);
    delay(tp);


    FR(25.27, 55.00, 0.00, lbr);
    BL(-84.73, -55.00, 0.00, lbr);
    FL(-64.27, 55.00, 0.00, lbr);
    BR(45.73, -55.00, 0.00, lbr);
    delay(tp);


    FR(26.02, 55.00, 0.00, lbr);
    BL(-83.98, -55.00, 0.00, lbr);
    FL(-65.02, 55.00, 0.00, lbr);
    BR(44.98, -55.00, 0.00, lbr);
    delay(tp);


    FR(27.18, 55.00, 0.00, lbr);
    BL(-82.82, -55.00, 0.00, lbr);
    FL(-66.18, 55.00, 0.00, lbr);
    BR(43.82, -55.00, 0.00, lbr);
    delay(tp);


    FR(28.68, 55.00, 0.00, lbr);
    BL(-81.32, -55.00, 0.00, lbr);
    FL(-67.68, 55.00, 0.00, lbr);
    BR(42.32, -55.00, 0.00, lbr);
    delay(tp);


    FR(30.44, 55.00, 0.00, lbr);
    BL(-79.56, -55.00, 0.00, lbr);
    FL(-69.44, 55.00, 0.00, lbr);
    BR(40.56, -55.00, 0.00, lbr);
    delay(tp);


    FR(32.39, 55.00, 0.00, lbr);
    BL(-77.61, -55.00, 0.00, lbr);
    FL(-71.39, 55.00, 0.00, lbr);
    BR(38.61, -55.00, 0.00, lbr);
    delay(tp);


    FR(34.45, 55.00, 0.00, lbr);
    BL(-75.55, -55.00, 0.00, lbr);
    FL(-73.45, 55.00, 0.00, lbr);
    BR(36.55, -55.00, 0.00, lbr);
    delay(tp);


    FR(36.55, 55.00, 0.00, lbr);
    BL(-73.45, -55.00, 0.00, lbr);
    FL(-75.55, 55.00, 0.00, lbr);
    BR(34.45, -55.00, 0.00, lbr);
    delay(tp);


    FR(38.61, 55.00, 0.00, lbr);
    BL(-71.39, -55.00, 0.00, lbr);
    FL(-77.61, 55.00, 0.00, lbr);
    BR(32.39, -55.00, 0.00, lbr);
    delay(tp);


    FR(40.56, 55.00, 0.00, lbr);
    BL(-69.44, -55.00, 0.00, lbr);
    FL(-79.56, 55.00, 0.00, lbr);
    BR(30.44, -55.00, 0.00, lbr);
    delay(tp);


    FR(42.32, 55.00, 0.00, lbr);
    BL(-67.68, -55.00, 0.00, lbr);
    FL(-81.32, 55.00, 0.00, lbr);
    BR(28.68, -55.00, 0.00, lbr);
    delay(tp);


    FR(43.82, 55.00, 0.00, lbr);
    BL(-66.18, -55.00, 0.00, lbr);
    FL(-82.82, 55.00, 0.00, lbr);
    BR(27.18, -55.00, 0.00, lbr);
    delay(tp);


    FR(44.98, 55.00, 0.00, lbr);
    BL(-65.02, -55.00, 0.00, lbr);
    FL(-83.98, 55.00, 0.00, lbr);
    BR(26.02, -55.00, 0.00, lbr);
    delay(tp);


    FR(45.73, 55.00, 0.00, lbr);
    BL(-64.27, -55.00, 0.00, lbr);
    FL(-84.73, 55.00, 0.00, lbr);
    BR(25.27, -55.00, 0.00, lbr);
    delay(tp);


    FR(46.00, 55.00, 0.00, lbr);
    BL(-64.00, -55.00, 0.00, lbr);
    FL(-85.00, 55.00, 0.00, lbr);
    BR(25.00, -55.00, 0.00, lbr);
    delay(tp);
    //////////////////////////////////////////////

    FR(46.77, 55.00, 0.00, lbr);
    BL(-63.23, -55.00, 0.00, lbr);
    FL(-82.42, 55.00, 15.31, lbr);
    BR(27.58, -55.00, 15.31, lbr);
    delay(tp);


    FR(48.81, 55.00, 0.00, lbr);
    BL(-61.19, -55.00, 0.00, lbr);
    FL(-75.63, 55.00, 26.25, lbr);
    BR(34.38, -55.00, 26.25, lbr);
    delay(tp);


    FR(51.70, 55.00, 0.00, lbr);
    BL(-58.30, -55.00, 0.00, lbr);
    FL(-66.02, 55.00, 32.81, lbr);
    BR(43.98, -55.00, 32.81, lbr);
    delay(tp);
  }
  else if (movecounter == 2) {
    FR(55.00, 55.00, 0.00, lbr);
    BL(-55.00, -55.00, 0.00, lbr);
    FL(-55.00, 55.00, 35.00, lbr);
    BR(55.00, -55.00, 35.00, lbr);
    delay(tp);


    FR(58.30, 55.00, 0.00, lbr);
    BL(-51.70, -55.00, 0.00, lbr);
    FL(-43.98, 55.00, 32.81, lbr);
    BR(66.02, -55.00, 32.81, lbr);
    delay(tp);


    FR(61.19, 55.00, 0.00, lbr);
    BL(-48.81, -55.00, 0.00, lbr);
    FL(-34.38, 55.00, 26.25, lbr);
    BR(75.63, -55.00, 26.25, lbr);
    delay(tp);


    FR(63.23, 55.00, 0.00, lbr);
    BL(-46.77, -55.00, 0.00, lbr);
    FL(-27.58, 55.00, 15.31, lbr);
    BR(82.42, -55.00, 15.31, lbr);
    delay(tp);

    ///////////////////////////////////////
    FR(64.00, 55.00, 0.00, lbr);
    BL(-46.00, -55.00, 0.00, lbr);
    FL(-25.00, 55.00, 0.00, lbr);
    BR(85.00, -55.00, 0.00, lbr);
    delay(tp);


    FR(64.27, 55.00, 0.00, lbr);
    BL(-45.73, -55.00, 0.00, lbr);
    FL(-25.27, 55.00, 0.00, lbr);
    BR(84.73, -55.00, 0.00, lbr);
    delay(tp);


    FR(65.02, 55.00, 0.00, lbr);
    BL(-44.98, -55.00, 0.00, lbr);
    FL(-26.02, 55.00, 0.00, lbr);
    BR(83.98, -55.00, 0.00, lbr);
    delay(tp);


    FR(66.18, 55.00, 0.00, lbr);
    BL(-43.82, -55.00, 0.00, lbr);
    FL(-27.18, 55.00, 0.00, lbr);
    BR(82.82, -55.00, 0.00, lbr);
    delay(tp);


    FR(67.68, 55.00, 0.00, lbr);
    BL(-42.32, -55.00, 0.00, lbr);
    FL(-28.68, 55.00, 0.00, lbr);
    BR(81.32, -55.00, 0.00, lbr);
    delay(tp);


    FR(69.44, 55.00, 0.00, lbr);
    BL(-40.56, -55.00, 0.00, lbr);
    FL(-30.44, 55.00, 0.00, lbr);
    BR(79.56, -55.00, 0.00, lbr);
    delay(tp);


    FR(71.39, 55.00, 0.00, lbr);
    BL(-38.61, -55.00, 0.00, lbr);
    FL(-32.39, 55.00, 0.00, lbr);
    BR(77.61, -55.00, 0.00, lbr);
    delay(tp);


    FR(73.45, 55.00, 0.00, lbr);
    BL(-36.55, -55.00, 0.00, lbr);
    FL(-34.45, 55.00, 0.00, lbr);
    BR(75.55, -55.00, 0.00, lbr);
    delay(tp);


    FR(75.55, 55.00, 0.00, lbr);
    BL(-34.45, -55.00, 0.00, lbr);
    FL(-36.55, 55.00, 0.00, lbr);
    BR(73.45, -55.00, 0.00, lbr);
    delay(tp);


    FR(77.61, 55.00, 0.00, lbr);
    BL(-32.39, -55.00, 0.00, lbr);
    FL(-38.61, 55.00, 0.00, lbr);
    BR(71.39, -55.00, 0.00, lbr);
    delay(tp);


    FR(79.56, 55.00, 0.00, lbr);
    BL(-30.44, -55.00, 0.00, lbr);
    FL(-40.56, 55.00, 0.00, lbr);
    BR(69.44, -55.00, 0.00, lbr);
    delay(tp);


    FR(81.32, 55.00, 0.00, lbr);
    BL(-28.68, -55.00, 0.00, lbr);
    FL(-42.32, 55.00, 0.00, lbr);
    BR(67.68, -55.00, 0.00, lbr);
    delay(tp);


    FR(82.82, 55.00, 0.00, lbr);
    BL(-27.18, -55.00, 0.00, lbr);
    FL(-43.82, 55.00, 0.00, lbr);
    BR(66.18, -55.00, 0.00, lbr);
    delay(tp);


    FR(83.98, 55.00, 0.00, lbr);
    BL(-26.02, -55.00, 0.00, lbr);
    FL(-44.98, 55.00, 0.00, lbr);
    BR(65.02, -55.00, 0.00, lbr);
    delay(tp);


    FR(84.73, 55.00, 0.00, lbr);
    BL(-25.27, -55.00, 0.00, lbr);
    FL(-45.73, 55.00, 0.00, lbr);
    BR(64.27, -55.00, 0.00, lbr);
    delay(tp);


    FR(85.00, 55.00, 0.00, lbr);
    BL(-25.00, -55.00, 0.00, lbr);
    FL(-46.00, 55.00, 0.00, lbr);
    BR(64.00, -55.00, 0.00, lbr);
    delay(tp);
    /////////////////////////////////////////////////
    FR(82.42, 55.00, 15.31, lbr);
    BL(-27.58, -55.00, 15.31, lbr);
    FL(-46.77, 55.00, 0.00, lbr);
    BR(63.23, -55.00, 0.00, lbr);
    delay(tp);


    FR(75.63, 55.00, 26.25, lbr);
    BL(-34.38, -55.00, 26.25, lbr);
    FL(-48.81, 55.00, 0.00, lbr);
    BR(61.19, -55.00, 0.00, lbr);
    delay(tp);


    FR(66.02, 55.00, 32.81, lbr);
    BL(-43.98, -55.00, 32.81, lbr);
    FL(-51.70, 55.00, 0.00, lbr);
    BR(58.30, -55.00, 0.00, lbr);
    delay(tp);
    movecounter = 0;
  }
}
void jalanpecah1(float lbr) { //Gerakan lambat, Sudut Belok = 5
  arahgerak = true;
  movecounter++;
  if (movecounter == 1) {
    FR(55.00, 55.00, 35.00, lbr);
    BL(-55.00, -55.00, 35.00, lbr);
    FL(-55.00, 55.00, 0.00, lbr);
    BR(55.00, -55.00, 0.00, lbr);
    delay(tp);


    FR(66.02, 55.00, 32.81, lbr);
    BL(-43.98, -55.00, 32.81, lbr);
    FL(-51.70, 55.00, 0.00, lbr);
    BR(58.30, -55.00, 0.00, lbr);
    delay(tp);


    FR(75.63, 55.00, 26.25, lbr);
    BL(-34.38, -55.00, 26.25, lbr);
    FL(-48.81, 55.00, 0.00, lbr);
    BR(61.19, -55.00, 0.00, lbr);
    delay(tp);


    FR(82.42, 55.00, 15.31, lbr);
    BL(-27.58, -55.00, 15.31, lbr);
    FL(-46.77, 55.00, 0.00, lbr);
    BR(63.23, -55.00, 0.00, lbr);
    delay(tp);
    ///////////////////////////////////////////////////////
    FR(85.00, 55.00, 0.00, lbr);
    BL(-25.00, -55.00, 0.00, lbr);
    FL(-46.00, 55.00, 0.00, lbr);
    BR(64.00, -55.00, 0.00, lbr);
    delay(tp);


    FR(84.73, 55.00, 0.00, lbr);
    BL(-25.27, -55.00, 0.00, lbr);
    FL(-45.73, 55.00, 0.00, lbr);
    BR(64.27, -55.00, 0.00, lbr);
    delay(tp);


    FR(83.98, 55.00, 0.00, lbr);
    BL(-26.02, -55.00, 0.00, lbr);
    FL(-44.98, 55.00, 0.00, lbr);
    BR(65.02, -55.00, 0.00, lbr);
    delay(tp);


    FR(82.82, 55.00, 0.00, lbr);
    BL(-27.18, -55.00, 0.00, lbr);
    FL(-43.82, 55.00, 0.00, lbr);
    BR(66.18, -55.00, 0.00, lbr);
    delay(tp);


    FR(81.32, 55.00, 0.00, lbr);
    BL(-28.68, -55.00, 0.00, lbr);
    FL(-42.32, 55.00, 0.00, lbr);
    BR(67.68, -55.00, 0.00, lbr);
    delay(tp);


    FR(79.56, 55.00, 0.00, lbr);
    BL(-30.44, -55.00, 0.00, lbr);
    FL(-40.56, 55.00, 0.00, lbr);
    BR(69.44, -55.00, 0.00, lbr);
    delay(tp);


    FR(77.61, 55.00, 0.00, lbr);
    BL(-32.39, -55.00, 0.00, lbr);
    FL(-38.61, 55.00, 0.00, lbr);
    BR(71.39, -55.00, 0.00, lbr);
    delay(tp);


    FR(75.55, 55.00, 0.00, lbr);
    BL(-34.45, -55.00, 0.00, lbr);
    FL(-36.55, 55.00, 0.00, lbr);
    BR(73.45, -55.00, 0.00, lbr);
    delay(tp);


    FR(73.45, 55.00, 0.00, lbr);
    BL(-36.55, -55.00, 0.00, lbr);
    FL(-34.45, 55.00, 0.00, lbr);
    BR(75.55, -55.00, 0.00, lbr);
    delay(tp);


    FR(71.39, 55.00, 0.00, lbr);
    BL(-38.61, -55.00, 0.00, lbr);
    FL(-32.39, 55.00, 0.00, lbr);
    BR(77.61, -55.00, 0.00, lbr);
    delay(tp);


    FR(69.44, 55.00, 0.00, lbr);
    BL(-40.56, -55.00, 0.00, lbr);
    FL(-30.44, 55.00, 0.00, lbr);
    BR(79.56, -55.00, 0.00, lbr);
    delay(tp);


    FR(67.68, 55.00, 0.00, lbr);
    BL(-42.32, -55.00, 0.00, lbr);
    FL(-28.68, 55.00, 0.00, lbr);
    BR(81.32, -55.00, 0.00, lbr);
    delay(tp);


    FR(66.18, 55.00, 0.00, lbr);
    BL(-43.82, -55.00, 0.00, lbr);
    FL(-27.18, 55.00, 0.00, lbr);
    BR(82.82, -55.00, 0.00, lbr);
    delay(tp);


    FR(65.02, 55.00, 0.00, lbr);
    BL(-44.98, -55.00, 0.00, lbr);
    FL(-26.02, 55.00, 0.00, lbr);
    BR(83.98, -55.00, 0.00, lbr);
    delay(tp);


    FR(64.27, 55.00, 0.00, lbr);
    BL(-45.73, -55.00, 0.00, lbr);
    FL(-25.27, 55.00, 0.00, lbr);
    BR(84.73, -55.00, 0.00, lbr);
    delay(tp);


    FR(64.00, 55.00, 0.00, lbr);
    BL(-46.00, -55.00, 0.00, lbr);
    FL(-25.00, 55.00, 0.00, lbr);
    BR(85.00, -55.00, 0.00, lbr);
    delay(tp);
    //////////////////////////////////////////////////
    FR(63.23, 55.00, 0.00, lbr);
    BL(-46.77, -55.00, 0.00, lbr);
    FL(-27.58, 55.00, 15.31, lbr);
    BR(82.42, -55.00, 15.31, lbr);
    delay(tp);


    FR(61.19, 55.00, 0.00, lbr);
    BL(-48.81, -55.00, 0.00, lbr);
    FL(-34.38, 55.00, 26.25, lbr);
    BR(75.63, -55.00, 26.25, lbr);
    delay(tp);


    FR(58.30, 55.00, 0.00, lbr);
    BL(-51.70, -55.00, 0.00, lbr);
    FL(-43.98, 55.00, 32.81, lbr);
    BR(66.02, -55.00, 32.81, lbr);
    delay(tp);
  }
  else if (movecounter == 2) {
    FR(55.00, 55.00, 0.00, lbr);
    BL(-55.00, -55.00, 0.00, lbr);
    FL(-55.00, 55.00, 35.00, lbr);
    BR(55.00, -55.00, 35.00, lbr);
    delay(tp);


    FR(51.70, 55.00, 0.00, lbr);
    BL(-58.30, -55.00, 0.00, lbr);
    FL(-66.02, 55.00, 32.81, lbr);
    BR(43.98, -55.00, 32.81, lbr);
    delay(tp);


    FR(48.81, 55.00, 0.00, lbr);
    BL(-61.19, -55.00, 0.00, lbr);
    FL(-75.63, 55.00, 26.25, lbr);
    BR(34.38, -55.00, 26.25, lbr);
    delay(tp);


    FR(46.77, 55.00, 0.00, lbr);
    BL(-63.23, -55.00, 0.00, lbr);
    FL(-82.42, 55.00, 15.31, lbr);
    BR(27.58, -55.00, 15.31, lbr);
    delay(tp);

    //////////////////////////////////////////////////////////
    FR(46.00, 55.00, 0.00, lbr);
    BL(-64.00, -55.00, 0.00, lbr);
    FL(-85.00, 55.00, 0.00, lbr);
    BR(25.00, -55.00, 0.00, lbr);
    delay(tp);


    FR(45.73, 55.00, 0.00, lbr);
    BL(-64.27, -55.00, 0.00, lbr);
    FL(-84.73, 55.00, 0.00, lbr);
    BR(25.27, -55.00, 0.00, lbr);
    delay(tp);


    FR(44.98, 55.00, 0.00, lbr);
    BL(-65.02, -55.00, 0.00, lbr);
    FL(-83.98, 55.00, 0.00, lbr);
    BR(26.02, -55.00, 0.00, lbr);
    delay(tp);


    FR(43.82, 55.00, 0.00, lbr);
    BL(-66.18, -55.00, 0.00, lbr);
    FL(-82.82, 55.00, 0.00, lbr);
    BR(27.18, -55.00, 0.00, lbr);
    delay(tp);


    FR(42.32, 55.00, 0.00, lbr);
    BL(-67.68, -55.00, 0.00, lbr);
    FL(-81.32, 55.00, 0.00, lbr);
    BR(28.68, -55.00, 0.00, lbr);
    delay(tp);


    FR(40.56, 55.00, 0.00, lbr);
    BL(-69.44, -55.00, 0.00, lbr);
    FL(-79.56, 55.00, 0.00, lbr);
    BR(30.44, -55.00, 0.00, lbr);
    delay(tp);


    FR(38.61, 55.00, 0.00, lbr);
    BL(-71.39, -55.00, 0.00, lbr);
    FL(-77.61, 55.00, 0.00, lbr);
    BR(32.39, -55.00, 0.00, lbr);
    delay(tp);


    FR(36.55, 55.00, 0.00, lbr);
    BL(-73.45, -55.00, 0.00, lbr);
    FL(-75.55, 55.00, 0.00, lbr);
    BR(34.45, -55.00, 0.00, lbr);
    delay(tp);


    FR(34.45, 55.00, 0.00, lbr);
    BL(-75.55, -55.00, 0.00, lbr);
    FL(-73.45, 55.00, 0.00, lbr);
    BR(36.55, -55.00, 0.00, lbr);
    delay(tp);


    FR(32.39, 55.00, 0.00, lbr);
    BL(-77.61, -55.00, 0.00, lbr);
    FL(-71.39, 55.00, 0.00, lbr);
    BR(38.61, -55.00, 0.00, lbr);
    delay(tp);


    FR(30.44, 55.00, 0.00, lbr);
    BL(-79.56, -55.00, 0.00, lbr);
    FL(-69.44, 55.00, 0.00, lbr);
    BR(40.56, -55.00, 0.00, lbr);
    delay(tp);


    FR(28.68, 55.00, 0.00, lbr);
    BL(-81.32, -55.00, 0.00, lbr);
    FL(-67.68, 55.00, 0.00, lbr);
    BR(42.32, -55.00, 0.00, lbr);
    delay(tp);


    FR(27.18, 55.00, 0.00, lbr);
    BL(-82.82, -55.00, 0.00, lbr);
    FL(-66.18, 55.00, 0.00, lbr);
    BR(43.82, -55.00, 0.00, lbr);
    delay(tp);


    FR(26.02, 55.00, 0.00, lbr);
    BL(-83.98, -55.00, 0.00, lbr);
    FL(-65.02, 55.00, 0.00, lbr);
    BR(44.98, -55.00, 0.00, lbr);
    delay(tp);


    FR(25.27, 55.00, 0.00, lbr);
    BL(-84.73, -55.00, 0.00, lbr);
    FL(-64.27, 55.00, 0.00, lbr);
    BR(45.73, -55.00, 0.00, lbr);
    delay(tp);


    FR(25.00, 55.00, 0.00, lbr);
    BL(-85.00, -55.00, 0.00, lbr);
    FL(-64.00, 55.00, 0.00, lbr);
    BR(46.00, -55.00, 0.00, lbr);
    delay(tp);
    /////////////////////////////////////////////////
    FR(27.58, 55.00, 15.31, lbr);
    BL(-82.42, -55.00, 15.31, lbr);
    FL(-63.23, 55.00, 0.00, lbr);
    BR(46.77, -55.00, 0.00, lbr);
    delay(tp);


    FR(34.38, 55.00, 26.25, lbr);
    BL(-75.63, -55.00, 26.25, lbr);
    FL(-61.19, 55.00, 0.00, lbr);
    BR(48.81, -55.00, 0.00, lbr);
    delay(tp);


    FR(43.98, 55.00, 32.81, lbr);
    BL(-66.02, -55.00, 32.81, lbr);
    FL(-58.30, 55.00, 0.00, lbr);
    BR(51.70, -55.00, 0.00, lbr);
    delay(tp);
    movecounter = 0;
  }
}

void jalanbatu1(float lbr) { //Gerakan lambat naik 3.5 cm
  arahgerak = true;
  height = -95;
  height2 = -75;
  movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 35, lbr);
    BL(-55, -55, 35, lbr);
    FL(-55, 55, 0, lbr);
    BR(55, -55, 0, lbr);
    delay(tb1);

    FR(69.44, 55, 31.11, lbr);
    BL(-40.56, -55, 31.11, lbr);
    FL(-50, 55, 0, lbr);
    BR(59.98, -55, 0, lbr);
    delay(tb1);

    FR(80.56, 55, 19.44, lbr);
    BL(-29.44, -55, 19.44, lbr);
    FL(-45.16, 55, 0, lbr);
    BR(64.84, -55, 0, lbr);
    delay(tb1);

    FR(85, 55, 0, lbr);
    BL(-25, -55, 0, lbr);
    FL(-40.56, 55, 0, lbr);
    BR(69.44, -55, 0, lbr);
    delay(tb1);

    FR(80.97, 55, 0, lbr);
    BL(-29.03, -55, 0, lbr);
    FL(-36.53, 55, 0, lbr);
    BR(73.47, -55, 0, lbr);
    delay(tb1);

    FR(73.47, 55, 0, lbr);
    BL(-36.53, -55, 0, lbr);
    FL(-29.03, 55, 0, lbr);
    BR(80.97, -55, 0, lbr);
    delay(tb1);

    FR(69.44, 55, 0, lbr);
    BL(-40.56, -55, 0, lbr);
    FL(-25, 55, 0, lbr);
    BR(85, -55, 0, lbr);
    delay(tb1);

    FR(64.84, 55, 0, lbr);
    BL(-45.16, -55, 0, lbr);
    FL(-29.44, 55, 19.44, lbr);
    BR(80.56, -55, 19.44, lbr);
    delay(tb1);

    FR(59.98, 55, 0, lbr);
    BL(-50, -55, 0, lbr);
    FL(-40.56, 55, 31.11, lbr);
    BR(69.44, -55, 31.11, lbr);
    delay(tb1);
  }
  else if (movecounter == 2) {
    FR(55, 55, 0, lbr);
    BL(-55, -55, 0, lbr);
    FL(-55, 55, 35, lbr);
    BR(55, -55, 35, lbr);
    delay(tb1);

    FR(50, 55, 0, lbr);
    BL(-59.98, -55, 0, lbr);
    FL(-69.44, 55, 31.11, lbr);
    BR(40.56, -55, 31.11, lbr);
    delay(tb1);

    FR(45.16, 55, 0, lbr);
    BL(-64.84, -55, 0, lbr);
    FL(-80.56, 55, 19.44, lbr);
    BR(29.44, -55, 19.44, lbr);
    delay(tb1);

    FR(40.56, 55, 0, lbr);
    BL(-69.44, -55, 0, lbr);
    FL(-85, 55, 0, lbr);
    BR(25, -55, 0, lbr);
    delay(tb1);

    FR(36.53, 55, 0, lbr);
    BL(-73.47, -55, 0, lbr);
    FL(-80.97, 55, 0, lbr);
    BR(29.03, -55, 0, lbr);
    delay(tb1);

    FR(29.03, 55, 0, lbr);
    BL(-80.97, -55, 0, lbr);
    FL(-73.47, 55, 0, lbr);
    BR(36.53, -55, 0, lbr);
    delay(tb1);

    FR(25, 55, 0, lbr);
    BL(-85, -55, 0, lbr);
    FL(-69.44, 55, 0, lbr);
    BR(40.56, -55, 0, lbr);
    delay(tb1);

    FR(29.44, 55, 19.44, lbr);
    BL(-80.56, -55, 19.44, lbr);
    FL(-64.48, 55, 0, lbr);
    BR(45.16, -55, 0, lbr);
    delay(tb1);

    FR(40.56, 55, 31.11, lbr);
    BL(-69.44, -55, 31.11, lbr);
    FL(-59.98, 55, 0, lbr);
    BR(50, -55, 0, lbr);
    delay(tb1);
    movecounter = 0;
  }
}

//void majustabil(float lbr) { //Gerakan lambat naik 3.5 cm
//  arahgerak = true;
//  height = -75;
//  height2 = -75;
//  movecounter++;
//  if (movecounter == 1) {
//    FR(55, 55, 30, lbr);
//    BL(-55, -55, 30, lbr);
//    FL(-55, 55, 0, lbr);
//    BR(55, -55, 0, lbr);
//    delay(tb1);
//
//    FR(69.44, 55, 26.67, lbr);
//    BL(-40.56, -55, 26.67, lbr);
//    FL(-50, 55, 0, lbr);
//    BR(59.98, -55, 0, lbr);
//    delay(tb1);
//
//    FR(80.56, 55, 16.67, lbr);
//    BL(-29.44, -55, 16.67, lbr);
//    FL(-45.16, 55, 0, lbr);
//    BR(64.84, -55, 0, lbr);
//    delay(tb1);
//
//    FR(85, 55, 0, lbr);
//    BL(-25, -55, 0, lbr);
//    FL(-40.56, 55, 0, lbr);
//    BR(69.44, -55, 0, lbr);
//    delay(tb1);
//
//    FR(80.97, 55, 0, lbr);
//    BL(-29.03, -55, 0, lbr);
//    FL(-36.53, 55, 0, lbr);
//    BR(73.47, -55, 0, lbr);
//    delay(tb1);
//
//    FR(73.47, 55, 0, lbr);
//    BL(-36.53, -55, 0, lbr);
//    FL(-29.03, 55, 0, lbr);
//    BR(80.97, -55, 0, lbr);
//    delay(tb1);
//
//    FR(69.44, 55, 0, lbr);
//    BL(-40.56, -55, 0, lbr);
//    FL(-25, 55, 0, lbr);
//    BR(85, -55, 0, lbr);
//    delay(tb1);
//
//    FR(64.84, 55, 0, lbr);
//    BL(-45.16, -55, 0, lbr);
//    FL(-29.44, 55, 16.67, lbr);
//    BR(80.56, -55, 16.67, lbr);
//    delay(tb1);
//
//    FR(59.98, 55, 0, lbr);
//    BL(-50, -55, 0, lbr);
//    FL(-40.56, 55, 26.67, lbr);
//    BR(69.44, -55, 26.67, lbr);
//    delay(tb1);
//  }
//  else if (movecounter == 2) {
//    FR(55, 55, 0, lbr);
//    BL(-55, -55, 0, lbr);
//    FL(-55, 55, 30, lbr);
//    BR(55, -55, 30, lbr);
//    delay(tb1);
//
//    FR(50, 55, 0, lbr);
//    BL(-59.98, -55, 0, lbr);
//    FL(-69.44, 55, 26.67, lbr);
//    BR(40.56, -55, 26.67, lbr);
//    delay(tb1);
//
//    FR(45.16, 55, 0, lbr);
//    BL(-64.84, -55, 0, lbr);
//    FL(-80.56, 55, 16.67, lbr);
//    BR(29.44, -55, 16.67, lbr);
//    delay(tb1);
//
//    FR(40.56, 55, 0, lbr);
//    BL(-69.44, -55, 0, lbr);
//    FL(-85, 55, 0, lbr);
//    BR(25, -55, 0, lbr);
//    delay(tb1);
//
//    FR(36.53, 55, 0, lbr);
//    BL(-73.47, -55, 0, lbr);
//    FL(-80.97, 55, 0, lbr);
//    BR(29.03, -55, 0, lbr);
//    delay(tb1);
//
//    FR(29.03, 55, 0, lbr);
//    BL(-80.97, -55, 0, lbr);
//    FL(-73.47, 55, 0, lbr);
//    BR(36.53, -55, 0, lbr);
//    delay(tb1);
//
//    FR(25, 55, 0, lbr);
//    BL(-85, -55, 0, lbr);
//    FL(-69.44, 55, 0, lbr);
//    BR(40.56, -55, 0, lbr);
//    delay(tb1);
//
//    FR(29.44, 55, 16.67, lbr);
//    BL(-80.56, -55, 16.67, lbr);
//    FL(-64.48, 55, 0, lbr);
//    BR(45.16, -55, 0, lbr);
//    delay(tb1);
//
//    FR(40.56, 55, 26.67, lbr);
//    BL(-69.44, -55, 26.67, lbr);
//    FL(-59.98, 55, 0, lbr);
//    BR(50, -55, 0, lbr);
//    delay(tb1);
//    movecounter = 0;
//  }
//}

void jalanturunan(float lbr) { //Gerakan lambat, Sudut Belok = 5
  arahgerak = true;
  movecounter++;
  if (movecounter == 1) {
    FR(55.00, 55.00, 45.00, lbr);
    BL(-55.00, -55.00, 28.00, lbr);
    FL(-55.00, 55.00, 0.00, lbr);
    BR(55.00, -55.00, 0.00, lbr);
    delay(tb1);


    FR(66.02, 55.00, 42.19, lbr);
    BL(-43.98, -55.00, 26.25, lbr);
    FL(-51.70, 55.00, 0.00, lbr);
    BR(58.30, -55.00, 0.00, lbr);
    delay(tb1);


    FR(75.63, 55.00, 33.75, lbr);
    BL(-34.38, -55.00, 21, lbr);
    FL(-48.81, 55.00, 0.00, lbr);
    BR(61.19, -55.00, 0.00, lbr);
    delay(tb1);


    FR(82.42, 55.00, 19.69, lbr);
    BL(-27.58, -55.00, 12.25, lbr);
    FL(-46.77, 55.00, 0.00, lbr);
    BR(63.23, -55.00, 0.00, lbr);
    delay(tb1);
    ///////////////////////////////////////////////////////
    FR(85.00, 55.00, 0.00, lbr);
    BL(-25.00, -55.00, 0.00, lbr);
    FL(-46.00, 55.00, 0.00, lbr);
    BR(64.00, -55.00, 0.00, lbr);
    delay(tb1);


    FR(84.73, 55.00, 0.00, lbr);
    BL(-25.27, -55.00, 0.00, lbr);
    FL(-45.73, 55.00, 0.00, lbr);
    BR(64.27, -55.00, 0.00, lbr);
    delay(tb1);


    FR(83.98, 55.00, 0.00, lbr);
    BL(-26.02, -55.00, 0.00, lbr);
    FL(-44.98, 55.00, 0.00, lbr);
    BR(65.02, -55.00, 0.00, lbr);
    delay(tb1);


    FR(82.82, 55.00, 0.00, lbr);
    BL(-27.18, -55.00, 0.00, lbr);
    FL(-43.82, 55.00, 0.00, lbr);
    BR(66.18, -55.00, 0.00, lbr);
    delay(tb1);


    FR(81.32, 55.00, 0.00, lbr);
    BL(-28.68, -55.00, 0.00, lbr);
    FL(-42.32, 55.00, 0.00, lbr);
    BR(67.68, -55.00, 0.00, lbr);
    delay(tb1);


    FR(79.56, 55.00, 0.00, lbr);
    BL(-30.44, -55.00, 0.00, lbr);
    FL(-40.56, 55.00, 0.00, lbr);
    BR(69.44, -55.00, 0.00, lbr);
    delay(tb1);


    FR(77.61, 55.00, 0.00, lbr);
    BL(-32.39, -55.00, 0.00, lbr);
    FL(-38.61, 55.00, 0.00, lbr);
    BR(71.39, -55.00, 0.00, lbr);
    delay(tb1);


    FR(75.55, 55.00, 0.00, lbr);
    BL(-34.45, -55.00, 0.00, lbr);
    FL(-36.55, 55.00, 0.00, lbr);
    BR(73.45, -55.00, 0.00, lbr);
    delay(tb1);


    FR(73.45, 55.00, 0.00, lbr);
    BL(-36.55, -55.00, 0.00, lbr);
    FL(-34.45, 55.00, 0.00, lbr);
    BR(75.55, -55.00, 0.00, lbr);
    delay(tb1);


    FR(71.39, 55.00, 0.00, lbr);
    BL(-38.61, -55.00, 0.00, lbr);
    FL(-32.39, 55.00, 0.00, lbr);
    BR(77.61, -55.00, 0.00, lbr);
    delay(tb1);


    FR(69.44, 55.00, 0.00, lbr);
    BL(-40.56, -55.00, 0.00, lbr);
    FL(-30.44, 55.00, 0.00, lbr);
    BR(79.56, -55.00, 0.00, lbr);
    delay(tb1);


    FR(67.68, 55.00, 0.00, lbr);
    BL(-42.32, -55.00, 0.00, lbr);
    FL(-28.68, 55.00, 0.00, lbr);
    BR(81.32, -55.00, 0.00, lbr);
    delay(tb1);


    FR(66.18, 55.00, 0.00, lbr);
    BL(-43.82, -55.00, 0.00, lbr);
    FL(-27.18, 55.00, 0.00, lbr);
    BR(82.82, -55.00, 0.00, lbr);
    delay(tb1);


    FR(65.02, 55.00, 0.00, lbr);
    BL(-44.98, -55.00, 0.00, lbr);
    FL(-26.02, 55.00, 0.00, lbr);
    BR(83.98, -55.00, 0.00, lbr);
    delay(tb1);


    FR(64.27, 55.00, 0.00, lbr);
    BL(-45.73, -55.00, 0.00, lbr);
    FL(-25.27, 55.00, 0.00, lbr);
    BR(84.73, -55.00, 0.00, lbr);
    delay(tb1);


    FR(64.00, 55.00, 0.00, lbr);
    BL(-46.00, -55.00, 0.00, lbr);
    FL(-25.00, 55.00, 0.00, lbr);
    BR(85.00, -55.00, 0.00, lbr);
    delay(tb1);
    //////////////////////////////////////////////////
    FR(63.23, 55.00, 0.00, lbr);
    BL(-46.77, -55.00, 0.00, lbr);
    FL(-27.58, 55.00, 19.69, lbr);
    BR(82.42, -55.00, 12.25, lbr);
    delay(tb1);


    FR(61.19, 55.00, 0.00, lbr);
    BL(-48.81, -55.00, 0.00, lbr);
    FL(-34.38, 55.00, 33.75, lbr);
    BR(75.63, -55.00, 21, lbr);
    delay(tb1);


    FR(58.30, 55.00, 0.00, lbr);
    BL(-51.70, -55.00, 0.00, lbr);
    FL(-43.98, 55.00, 42.19, lbr);
    BR(66.02, -55.00, 26.25, lbr);
    delay(tb1);
  }
  else if (movecounter == 2) {
    FR(55.00, 55.00, 0.00, lbr);
    BL(-55.00, -55.00, 0.00, lbr);
    FL(-55.00, 55.00, 45.00, lbr);
    BR(55.00, -55.00, 28, lbr);
    delay(tb1);


    FR(51.70, 55.00, 0.00, lbr);
    BL(-58.30, -55.00, 0.00, lbr);
    FL(-66.02, 55.00, 42.19, lbr);
    BR(43.98, -55.00, 26.25, lbr);
    delay(tb1);


    FR(48.81, 55.00, 0.00, lbr);
    BL(-61.19, -55.00, 0.00, lbr);
    FL(-75.63, 55.00, 33.75, lbr);
    BR(34.38, -55.00, 21, lbr);
    delay(tb1);


    FR(46.77, 55.00, 0.00, lbr);
    BL(-63.23, -55.00, 0.00, lbr);
    FL(-82.42, 55.00, 19.69, lbr);
    BR(27.58, -55.00, 12.25, lbr);
    delay(tb1);

    //////////////////////////////////////////////////////////
    FR(46.00, 55.00, 0.00, lbr);
    BL(-64.00, -55.00, 0.00, lbr);
    FL(-85.00, 55.00, 0.00, lbr);
    BR(25.00, -55.00, 0.00, lbr);
    delay(tb1);


    FR(45.73, 55.00, 0.00, lbr);
    BL(-64.27, -55.00, 0.00, lbr);
    FL(-84.73, 55.00, 0.00, lbr);
    BR(25.27, -55.00, 0.00, lbr);
    delay(tb1);


    FR(44.98, 55.00, 0.00, lbr);
    BL(-65.02, -55.00, 0.00, lbr);
    FL(-83.98, 55.00, 0.00, lbr);
    BR(26.02, -55.00, 0.00, lbr);
    delay(tb1);


    FR(43.82, 55.00, 0.00, lbr);
    BL(-66.18, -55.00, 0.00, lbr);
    FL(-82.82, 55.00, 0.00, lbr);
    BR(27.18, -55.00, 0.00, lbr);
    delay(tb1);


    FR(42.32, 55.00, 0.00, lbr);
    BL(-67.68, -55.00, 0.00, lbr);
    FL(-81.32, 55.00, 0.00, lbr);
    BR(28.68, -55.00, 0.00, lbr);
    delay(tb1);


    FR(40.56, 55.00, 0.00, lbr);
    BL(-69.44, -55.00, 0.00, lbr);
    FL(-79.56, 55.00, 0.00, lbr);
    BR(30.44, -55.00, 0.00, lbr);
    delay(tb1);


    FR(38.61, 55.00, 0.00, lbr);
    BL(-71.39, -55.00, 0.00, lbr);
    FL(-77.61, 55.00, 0.00, lbr);
    BR(32.39, -55.00, 0.00, lbr);
    delay(tb1);


    FR(36.55, 55.00, 0.00, lbr);
    BL(-73.45, -55.00, 0.00, lbr);
    FL(-75.55, 55.00, 0.00, lbr);
    BR(34.45, -55.00, 0.00, lbr);
    delay(tb1);


    FR(34.45, 55.00, 0.00, lbr);
    BL(-75.55, -55.00, 0.00, lbr);
    FL(-73.45, 55.00, 0.00, lbr);
    BR(36.55, -55.00, 0.00, lbr);
    delay(tb1);


    FR(32.39, 55.00, 0.00, lbr);
    BL(-77.61, -55.00, 0.00, lbr);
    FL(-71.39, 55.00, 0.00, lbr);
    BR(38.61, -55.00, 0.00, lbr);
    delay(tb1);


    FR(30.44, 55.00, 0.00, lbr);
    BL(-79.56, -55.00, 0.00, lbr);
    FL(-69.44, 55.00, 0.00, lbr);
    BR(40.56, -55.00, 0.00, lbr);
    delay(tb1);


    FR(28.68, 55.00, 0.00, lbr);
    BL(-81.32, -55.00, 0.00, lbr);
    FL(-67.68, 55.00, 0.00, lbr);
    BR(42.32, -55.00, 0.00, lbr);
    delay(tb1);


    FR(27.18, 55.00, 0.00, lbr);
    BL(-82.82, -55.00, 0.00, lbr);
    FL(-66.18, 55.00, 0.00, lbr);
    BR(43.82, -55.00, 0.00, lbr);
    delay(tb1);


    FR(26.02, 55.00, 0.00, lbr);
    BL(-83.98, -55.00, 0.00, lbr);
    FL(-65.02, 55.00, 0.00, lbr);
    BR(44.98, -55.00, 0.00, lbr);
    delay(tb1);


    FR(25.27, 55.00, 0.00, lbr);
    BL(-84.73, -55.00, 0.00, lbr);
    FL(-64.27, 55.00, 0.00, lbr);
    BR(45.73, -55.00, 0.00, lbr);
    delay(tb1);


    FR(25.00, 55.00, 0.00, lbr);
    BL(-85.00, -55.00, 0.00, lbr);
    FL(-64.00, 55.00, 0.00, lbr);
    BR(46.00, -55.00, 0.00, lbr);
    delay(tb1);
    /////////////////////////////////////////////////
    FR(27.58, 55.00, 19.89, lbr);
    BL(-82.42, -55.00, 12.25, lbr);
    FL(-63.23, 55.00, 0.00, lbr);
    BR(46.77, -55.00, 0.00, lbr);
    delay(tb1);


    FR(34.38, 55.00, 33.75, lbr);
    BL(-75.63, -55.00, 21, lbr);
    FL(-61.19, 55.00, 0.00, lbr);
    BR(48.81, -55.00, 0.00, lbr);
    delay(tb1);


    FR(43.98, 55.00, 42.19, lbr);
    BL(-66.02, -55.00, 26.25, lbr);
    FL(-58.30, 55.00, 0.00, lbr);
    BR(51.70, -55.00, 0.00, lbr);
    delay(tb1);
    movecounter = 0;
  }
}

void rotRight(float sdt) { //Default 10 derajat, delay = 27
  movecounter ++;
  if (movecounter == 1) {
    IKRot1(55, 55, 15, sdt);
    IKRot1(-55, -55, 15, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, -55, 0, sdt);
    delay(td1);

    IKRot1(52.59, 57.41, 11.25, sdt);
    IKRot1(-52.59, -57.41, 11.25, sdt);
    IKRot1(-54.17, 55.83, 0, sdt);
    IKRot1(54.17, -55.83, 0, sdt);
    delay(td1);

    IKRot1(50.74, 59.26, 6.56, sdt);
    IKRot1(-50.74, -59.26, 6.56, sdt);
    IKRot1(-53.36, 56.64, 0, sdt);
    IKRot1(53.36, -56.64, 0, sdt);
    delay(td1);

    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    IKRot1(-52.59, 57.41, 0, sdt);
    IKRot1(52.59, -57.41, 0, sdt);
    delay(td1);

    IKRot1(50.09, 59.91, 0, sdt);
    IKRot1(-50.09, -59.91, 0, sdt);
    IKRot1(-51.89, 58.11, 0, sdt);
    IKRot1(51.89, -58.11, 0, sdt);
    delay(td1);

    IKRot1(50.34, 59.66, 0, sdt);
    IKRot1(-50.34, -59.66, 0, sdt);
    IKRot1(-51.26, 58.74, 0, sdt);
    IKRot1(51.26, -58.74, 0, sdt);
    delay(td1);

    IKRot1(50.74, 59.26, 0, sdt);
    IKRot1(-50.74, -59.26, 0, sdt);
    IKRot1(-50.74, 59.26, 0, sdt);
    IKRot1(50.74, -59.26, 0, sdt);
    delay(td1);

    IKRot1(51.26, 58.74, 0, sdt);
    IKRot1(-51.26, -58.74, 0, sdt);
    IKRot1(-50.34, 59.66, 0, sdt);
    IKRot1(50.34, -59.66, 0, sdt);
    delay(td1);

    IKRot1(51.89, 58.11, 0, sdt);
    IKRot1(-51.89, -58.11, 0, sdt);
    IKRot1(-50.09, 59.91, 0, sdt);
    IKRot1(50.09, -59.91, 0, sdt);
    delay(td1);

    IKRot1(52.59, 57.41, 0, sdt);
    IKRot1(-52.59, -57.41, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(50, -60, 0, sdt);
    delay(td1);

    IKRot1(53.36, 56.64, 0, sdt);
    IKRot1(-53.36, -56.64, 0, sdt);
    IKRot1(-50.74, 59.26, 6.56, sdt);
    IKRot1(50.74, -59.26, 6.56, sdt);
    delay(td1);

    IKRot1(54.17, 55.83, 0, sdt);
    IKRot1(-54.17, -55.83, 0, sdt);
    IKRot1(-52.59, 57.41, 11.25, sdt);
    IKRot1(52.59, -57.41, 11.25, sdt);
    delay(td1);
    ////////////////////////////////////////////
  }
  else if (movecounter == 2) {
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    IKRot1(-55, 55, 15, sdt);
    IKRot1(55, -55, 15, sdt);
    delay(td1);

    IKRot1(55.83, 54.17, 0, sdt);
    IKRot1(-55.83, -54.17, 0, sdt);
    IKRot1(-57.41, 52.59, 11.25, sdt);
    IKRot1(57.41, -52.59, 11.25, sdt);
    delay(td1);

    IKRot1(56.64, 53.36, 0, sdt);
    IKRot1(-56.64, -53.36, 0, sdt);
    IKRot1(-59.26, 50.74, 6.56, sdt);
    IKRot1(59.26, -50.74, 6.56, sdt);
    delay(td1);

    IKRot1(57.41, 52.59, 0, sdt);
    IKRot1(-57.41, -52.59, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(60, -50, 0, sdt);
    delay(td1);

    IKRot1(58.11, 51.89, 0, sdt);
    IKRot1(-58.11, -51.89, 0, sdt);
    IKRot1(-59.91, 50.09, 0, sdt);
    IKRot1(59.91, -50.09, 0, sdt);
    delay(td1);

    IKRot1(58.74, 51.26, 0, sdt);
    IKRot1(-58.74, -51.26, 0, sdt);
    IKRot1(-59.66, 50.34, 0, sdt);
    IKRot1(59.66, -50.34, 0, sdt);
    delay(td1);

    IKRot1(59.26, 50.74, 0, sdt);
    IKRot1(-59.26, -50.74, 0, sdt);
    IKRot1(-59.26, 50.74, 0, sdt);
    IKRot1(59.26, -50.74, 0, sdt);
    delay(td1);

    IKRot1(59.66, 50.34, 0, sdt);
    IKRot1(-59.66, -50.34, 0, sdt);
    IKRot1(-58.74, 51.26, 0, sdt);
    IKRot1(58.74, -51.26, 0, sdt);
    delay(td1);

    IKRot1(59.91, 50.09, 0, sdt);
    IKRot1(-59.91, -50.09, 0, sdt);
    IKRot1(-58.11, 51.89, 0, sdt);
    IKRot1(58.11, -51.89, 0, sdt);
    delay(td1);

    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    IKRot1(-57.41, 52.59, 0, sdt);
    IKRot1(57.41, -52.59, 0, sdt);
    delay(td1);

    IKRot1(59.26, 50.74, 6.56, sdt);
    IKRot1(-59.26, -50.74, 6.56, sdt);
    IKRot1(-56.64, 53.36, 0, sdt);
    IKRot1(56.64, -53.36, 0, sdt);
    delay(td1);

    IKRot1(57.41, 52.59, 11.25, sdt);
    IKRot1(-57.41, -52.59, 11.25, sdt);
    IKRot1(-55.83, 54.17, 0, sdt);
    IKRot1(55.83, -54.17, 0, sdt);
    delay(td1);

    movecounter = 0;
  }
}

void rotLeft(float sdt) { //Default 10 derajat, delay = 27
  movecounter ++;
  if (movecounter == 1) {
    IKRot1(55, -55, 0, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, 55, 15, sdt);
    IKRot1(-55, -55, 15, sdt);
    delay(td1);

    IKRot1(55.83, -54.17, 0, sdt);
    IKRot1(-55.83, 54.17, 0, sdt);
    IKRot1(57.41, 52.59, 11.25, sdt);
    IKRot1(-57.41, -52.59, 11.25, sdt);
    delay(td1);

    IKRot1(56.64, -53.36, 0, sdt);
    IKRot1(-56.64, 53.36, 0, sdt);
    IKRot1(59.26, 50.74, 6.56, sdt);
    IKRot1(-59.26, -50.74, 6.56, sdt);
    delay(td1);

    IKRot1(57.41, -52.59, 0, sdt);
    IKRot1(-57.41, 52.59, 0, sdt);
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    delay(td1);

    IKRot1(58.11, -51.89, 0, sdt);
    IKRot1(-58.11, 51.89, 0, sdt);
    IKRot1(59.91, 50.09, 0, sdt);
    IKRot1(-59.91, -50.09, 0, sdt);
    delay(td1);

    IKRot1(58.74, -51.26, 0, sdt);
    IKRot1(-58.74, 51.26, 0, sdt);
    IKRot1(59.66, 50.34, 0, sdt);
    IKRot1(-59.66, -50.34, 0, sdt);
    delay(td1);

    IKRot1(59.26, -50.74, 0, sdt);
    IKRot1(-59.26, 50.74, 0, sdt);
    IKRot1(59.26, 50.74, 0, sdt);
    IKRot1(-59.26, -50.74, 0, sdt);
    delay(td1);

    IKRot1(59.66, -50.34, 0, sdt);
    IKRot1(-59.66, 50.34, 0, sdt);
    IKRot1(58.74, 51.26, 0, sdt);
    IKRot1(-58.74, -51.26, 0, sdt);
    delay(td1);

    IKRot1(59.91, -50.09, 0, sdt);
    IKRot1(-59.91, 50.09, 0, sdt);
    IKRot1(58.11, 51.89, 0, sdt);
    IKRot1(-58.11, -51.89, 0, sdt);
    delay(td1);

    IKRot1(60, -50, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(57.41, 52.59, 0, sdt);
    IKRot1(-57.41, -52.59, 0, sdt);
    delay(td1);

    IKRot1(59.26, -50.74, 6.56, sdt);
    IKRot1(-59.26, 50.74, 6.56, sdt);
    IKRot1(56.64, 53.36, 0, sdt);
    IKRot1(-56.64, -53.36, 0, sdt);
    delay(td1);

    IKRot1(57.41, -52.59, 11.25, sdt);
    IKRot1(-57.41, 52.59, 11.25, sdt);
    IKRot1(55.83, 54.17, 0, sdt);
    IKRot1(-55.83, -54.17, 0, sdt);
    delay(td1);
  }
  else if (movecounter == 2) {
    IKRot1(55, -55, 15, sdt);
    IKRot1(-55, 55, 15, sdt);
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    delay(td1);

    IKRot1(52.59, -57.41, 11.25, sdt);
    IKRot1(-52.59, 57.41, 11.25, sdt);
    IKRot1(54.17, 55.83, 0, sdt);
    IKRot1(-54.17, -55.83, 0, sdt);
    delay(td1);

    IKRot1(50.74, -59.26, 6.56, sdt);
    IKRot1(-50.74, 59.26, 6.56, sdt);
    IKRot1(53.36, 56.64, 0, sdt);
    IKRot1(-53.36, -56.64, 0, sdt);
    delay(td1);

    IKRot1(50, -60, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(52.59, 57.41, 0, sdt);
    IKRot1(-52.59, -57.41, 0, sdt);
    delay(td1);

    IKRot1(50.09, -59.91, 0, sdt);
    IKRot1(-50.09, 59.91, 0, sdt);
    IKRot1(51.89, 58.11, 0, sdt);
    IKRot1(-51.89, -58.11, 0, sdt);
    delay(td1);

    IKRot1(50.34, -59.66, 0, sdt);
    IKRot1(-50.34, 59.66, 0, sdt);
    IKRot1(51.26, 58.74, 0, sdt);
    IKRot1(-51.26, -58.74, 0, sdt);
    delay(td1);

    IKRot1(50.74, -59.26, 0, sdt);
    IKRot1(-50.74, 59.26, 0, sdt);
    IKRot1(50.74, 59.26, 0, sdt);
    IKRot1(-50.74, -59.26, 0, sdt);
    delay(td1);

    IKRot1(51.26, -58.74, 0, sdt);
    IKRot1(-51.26, 58.74, 0, sdt);
    IKRot1(50.34, 59.66, 0, sdt);
    IKRot1(-50.34, -59.66, 0, sdt);
    delay(td1);

    IKRot1(51.89, -58.11, 0, sdt);
    IKRot1(-51.89, 58.11, 0, sdt);
    IKRot1(50.09, 59.91, 0, sdt);
    IKRot1(-50.09, -59.91, 0, sdt);
    delay(td1);

    IKRot1(52.59, -57.41, 0, sdt);
    IKRot1(-52.59, 57.41, 0, sdt);
    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    delay(td1);

    IKRot1(53.36, -56.64, 0, sdt);
    IKRot1(-53.36, 56.64, 0, sdt);
    IKRot1(50.74, 59.26, 6.56, sdt);
    IKRot1(-50.74, -59.26, 6.56, sdt);
    delay(td1);

    IKRot1(54.17, -55.83, 0, sdt);
    IKRot1(-54.17, 55.83, 0, sdt);
    IKRot1(52.59, 57.41, 11.25, sdt);
    IKRot1(-52.59, -57.41, 11.25, sdt);
    delay(td1);
    movecounter = 0;
  }
}

void rotRightBatu(float sdt) { //Default 10 derajat
  movecounter++;
  if (movecounter == 1) {
    IKRot1(55, 55, 35, sdt);
    IKRot1(-55, -55, 35, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, -55, 0, sdt);
    delay(trb);

    IKRot1(52.59, 57.41, 31.11, sdt);
    IKRot1(-52.59, -57.41, 31.11, sdt);
    IKRot1(-54.7, 55.3, 0, sdt);
    IKRot1(54.7, -55.3, 0, sdt);
    delay(trb);

    IKRot1(50.74, 59.26, 19.44, sdt);
    IKRot1(-50.74, -59.26, 19.44, sdt);
    IKRot1(-54.4, 55.6, 0, sdt);
    IKRot1(54.4, -55.6, 0, sdt);
    delay(trb);

    ///////////////////////////////////////////////////
    IKRot1(50.4, 59.6, 10.85, sdt);
    IKRot1(-50.4, -59.6, 10.85, sdt);
    IKRot1(-54.3, 55.7, 0, sdt);
    IKRot1(54.3, -55.7, 0, sdt);
    delay(trb);

    IKRot1(50.28, 59.72, 7.3, sdt);
    IKRot1(-50.28, -59.72, 7.3, sdt);
    IKRot1(-54.2, 55.8, 0, sdt);
    IKRot1(54.2, -55.8, 0, sdt);
    delay(trb);
    //////////////////////////////////////////////////

    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    IKRot1(-54.1, 55.9, 0, sdt);
    IKRot1(54.1, -55.9, 0, sdt);
    delay(trb);
    ///////////////////////////////////////////////////
    IKRot1(50.11, 59.89, 0, sdt);
    IKRot1(-50.11, -59.89, 0, sdt);
    IKRot1(-53.99, 56.01, 0, sdt);
    IKRot1(53.99, -56.01, 0, sdt);
    delay(trb);

    IKRot1(50.43, 59.57, 0, sdt);
    IKRot1(-50.43, -59.57, 0, sdt);
    IKRot1(-53.67, 56.33, 0, sdt);
    IKRot1(53.67, -56.33, 0, sdt);
    delay(trb);

    IKRot1(50.89, 59.11, 0, sdt);
    IKRot1(-50.89, -59.11, 0, sdt);
    IKRot1(-53.21, 56.79, 0, sdt);
    IKRot1(53.21, -56.79, 0, sdt);
    delay(trb);

    IKRot1(51.44, 58.56, 0, sdt);
    IKRot1(-51.44, -58.56, 0, sdt);
    IKRot1(-52.66, 57.34, 0, sdt);
    IKRot1(52.66, -57.34, 0, sdt);
    delay(trb);

    IKRot1(52.05, 57.95, 0, sdt);
    IKRot1(-52.05, -57.95, 0, sdt);
    IKRot1(-52.05, 57.95, 0, sdt);
    IKRot1(52.05, -57.95, 0, sdt);
    delay(trb);

    IKRot1(52.66, 57.34, 0, sdt);
    IKRot1(-52.66, -57.34, 0, sdt);
    IKRot1(-51.44, 58.56, 0, sdt);
    IKRot1(51.44, -58.56, 0, sdt);
    delay(trb);

    IKRot1(53.21, 56.79, 0, sdt);
    IKRot1(-53.21, -56.79, 0, sdt);
    IKRot1(-50.89, 59.11, 0, sdt);
    IKRot1(50.89, -59.11, 0, sdt);
    delay(trb);

    IKRot1(53.67, 56.33, 0, sdt);
    IKRot1(-53.67, -56.33, 0, sdt);
    IKRot1(-50.43, 59.57, 0, sdt);
    IKRot1(50.43, -59.57, 0, sdt);
    delay(trb);

    IKRot1(53.99, 56.01, 0, sdt);
    IKRot1(-53.99, -56.01, 0, sdt);
    IKRot1(-50.11, 59.89, 0, sdt);
    IKRot1(50.11, -59.89, 0, sdt);
    delay(trb);

    ///////////////////////////////////////////////////////
    IKRot1(54.1, 55.9, 0, sdt);
    IKRot1(-54.1, -55.9, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(50, -60, 0, sdt);
    delay(trb);

    IKRot1(54.40, 55.60, 0, sdt);
    IKRot1(-54.40, -55.60, 0, sdt);
    IKRot1(-50.74, 59.26, 19.44, sdt);
    IKRot1(50.74, -59.26, 19.44, sdt);
    delay(trb);

    IKRot1(54.7, 55.3, 0, sdt);
    IKRot1(-54.7, -55.3, 0, sdt);
    IKRot1(-52.59, 57.41, 31.11, sdt);
    IKRot1(52.59, -57.41, 31.11, sdt);
    delay(trb);
  }
  else if (movecounter == 2) {
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    IKRot1(-55, 55, 35, sdt);
    IKRot1(55, -55, 35, sdt);
    delay(trb);

    IKRot1(55.3, 54.7, 0, sdt);
    IKRot1(-55.3, -54.7, 0, sdt);
    IKRot1(-57.41, 52.59, 31.11, sdt);
    IKRot1(57.41, -52.59, 31.11, sdt);
    delay(trb);

    IKRot1(55.6, 54.4, 0, sdt);
    IKRot1(-55.6, -54.4, 0, sdt);
    IKRot1(-59.26, 50.74, 19.44, sdt);
    IKRot1(59.26, -50.74, 19.44, sdt);
    delay(trb);
    //////////////////////////////////////////

    IKRot1(55.7, 54.3, 0, sdt);
    IKRot1(-55.7, -54.3, 0, sdt);
    IKRot1(-59.6, 50.4, 10.85, sdt);
    IKRot1(59.6, -50.4, 10.85, sdt);
    delay(trb);

    IKRot1(55.8, 54.2, 0, sdt);
    IKRot1(-55.8, -54.2, 0, sdt);
    IKRot1(-59.72, 50.28, 7.3, sdt);
    IKRot1(59.72, -50.28, 7.3, sdt);
    delay(trb);
    ///////////////////////////////////////////
    IKRot1(55.9, 54.1, 0, sdt);
    IKRot1(-55.9, -54.1, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(60, -50, 0, sdt);
    delay(trb);

    ////////////////////////////////////
    IKRot1(56.01, 53.99, 0, sdt);
    IKRot1(-56.01, -53.99, 0, sdt);
    IKRot1(-59.89, 50.11, 0, sdt);
    IKRot1(59.89, -50.11, 0, sdt);
    delay(trb);

    IKRot1(56.33, 53.67, 0, sdt);
    IKRot1(-56.33, -53.67, 0, sdt);
    IKRot1(-59.57, 50.43, 0, sdt);
    IKRot1(59.57, -50.43, 0, sdt);
    delay(trb);

    IKRot1(56.79, 53.21, 0, sdt);
    IKRot1(-56.79, -53.21, 0, sdt);
    IKRot1(-59.11, 50.89, 0, sdt);
    IKRot1(59.11, -50.89, 0, sdt);
    delay(trb);

    IKRot1(57.34, 52.66, 0, sdt);
    IKRot1(-57.34, -52.66, 0, sdt);
    IKRot1(-58.56, 51.44, 0, sdt);
    IKRot1(58.56, -51.44, 0, sdt);
    delay(trb);

    IKRot1(57.95, 52.05, 0, sdt);
    IKRot1(-57.95, -52.05, 0, sdt);
    IKRot1(-57.95, 52.05, 0, sdt);
    IKRot1(57.95, -52.05, 0, sdt);
    delay(trb);

    IKRot1(58.56, 51.44, 0, sdt);
    IKRot1(-58.56, -51.44, 0, sdt);
    IKRot1(-57.34, 52.66, 0, sdt);
    IKRot1(57.34, -52.66, 0, sdt);
    delay(trb);

    IKRot1(59.11, 50.89, 0, sdt);
    IKRot1(-59.11, -50.89, 0, sdt);
    IKRot1(-56.79, 53.21, 0, sdt);
    IKRot1(56.79, -53.21, 0, sdt);
    delay(trb);

    IKRot1(59.57, 50.43, 0, sdt);
    IKRot1(-59.57, -50.43, 0, sdt);
    IKRot1(-56.33, 53.67, 0, sdt);
    IKRot1(56.33, -53.67, 0, sdt);
    delay(trb);

    IKRot1(59.89, 50.11, 0, sdt);
    IKRot1(-59.89, -50.11, 0, sdt);
    IKRot1(-56.01, 53.99, 0, sdt);
    IKRot1(56.01, -53.99, 0, sdt);
    delay(trb);

    ///////////////////////////////////////////
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    IKRot1(-55.9, 54.1, 0, sdt);
    IKRot1(55.9, -54.1, 0, sdt);
    delay(trb);

    IKRot1(59.26, 50.74, 19.44, sdt);
    IKRot1(-59.26, -50.74, 19.44, sdt);
    IKRot1(-55.6, 54.4, 0, sdt);
    IKRot1(55.6, -54.4, 0, sdt);
    delay(trb);

    IKRot1(57.41, 52.59, 31.11, sdt);
    IKRot1(-57.41, -52.59, 31.11, sdt);
    IKRot1(-55.3, 54.7, 0, sdt);
    IKRot1(55.3, -54.7, 0, sdt);
    delay(trb);
    movecounter = 0;
  }
}


void rotLeftBatu(float sdt) { //Default 10 derajat, delay = 27
  movecounter++;
  if (movecounter == 1) {
    IKRot1(55, -55, 0, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, 55, 35, sdt);
    IKRot1(-55, -55, 35, sdt);
    delay(trb);
    /////////////////////Movecounter 1////////////////
    IKRot1(55.3, -54.7, 0, sdt);
    IKRot1(-55.3, 54.7, 0, sdt);
    IKRot1(57.41, 52.59, 31.11, sdt);
    IKRot1(-57.41, -52.59, 31.11, sdt);
    delay(trb);

    IKRot1(55.6, -54.4, 0, sdt);
    IKRot1(-55.6, 54.4, 0, sdt);
    IKRot1(59.26, 50.74, 19.44, sdt);
    IKRot1(-59.26, -50.74, 19.44, sdt);
    delay(trb);

    IKRot1(55.7, -54.3, 0, sdt);
    IKRot1(-55.7, 54.3, 0, sdt);
    IKRot1(59.6, 50.4, 10.85, sdt);
    IKRot1(-59.6, -50.4, 10.85, sdt);
    delay(trb);

    IKRot1(55.8, -54.2, 0, sdt);
    IKRot1(-55.8, 54.2, 0, sdt);
    IKRot1(59.72, 50.28, 6.3, sdt);
    IKRot1(-59.72, -50.28, 6.3, sdt);
    delay(trb);

    IKRot1(55.9, -54.1, 0, sdt);
    IKRot1(-55.9, 54.1, 0, sdt);
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    delay(trb);

    IKRot1(56.01, -53.99, 0, sdt);
    IKRot1(-56.01, 53.99, 0, sdt);
    IKRot1(59.89, 50.11, 0, sdt);
    IKRot1(-59.89, -50.11, 0, sdt);
    delay(trb);

    IKRot1(56.33, -53.67, 0, sdt);
    IKRot1(-56.33, 53.67, 0, sdt);
    IKRot1(59.57, 50.43, 0, sdt);
    IKRot1(-59.57, -50.43, 0, sdt);
    delay(trb);

    IKRot1(56.79, -53.21, 0, sdt);
    IKRot1(-56.79, 53.21, 0, sdt);
    IKRot1(59.11, 50.89, 0, sdt);
    IKRot1(-59.11, -50.89, 0, sdt);
    delay(trb);

    IKRot1(57.34, -52.66, 0, sdt);
    IKRot1(-57.34, 52.66, 0, sdt);
    IKRot1(58.56, 51.44, 0, sdt);
    IKRot1(-58.56, -51.44, 0, sdt);
    delay(trb);

    IKRot1(57.95, -52.05, 0, sdt);
    IKRot1(-57.95, 52.05, 0, sdt);
    IKRot1(57.95, 52.05, 0, sdt);
    IKRot1(-57.95, -52.05, 0, sdt);
    delay(trb);

    IKRot1(58.56, -51.44, 0, sdt);
    IKRot1(-58.56, 51.44, 0, sdt);
    IKRot1(57.34, 52.66, 0, sdt);
    IKRot1(-57.34, -52.66, 0, sdt);
    delay(trb);

    IKRot1(59.11, -50.89, 0, sdt);
    IKRot1(-59.11, 50.89, 0, sdt);
    IKRot1(56.79, 53.21, 0, sdt);
    IKRot1(-56.79, -53.21, 0, sdt);
    delay(trb);

    IKRot1(59.57, -50.43, 0, sdt);
    IKRot1(-59.57, 50.43, 0, sdt);
    IKRot1(56.33, 53.67, 0, sdt);
    IKRot1(-56.33, -53.67, 0, sdt);
    delay(trb);

    IKRot1(59.89, -50.11, 0, sdt);
    IKRot1(-59.89, 50.11, 0, sdt);
    IKRot1(56.01, 53.99, 0, sdt);
    IKRot1(-56.01, -53.99, 0, sdt);
    delay(trb);

    IKRot1(60, -50, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(55.9, 54.1, 0, sdt);
    IKRot1(-55.9, -54.1, 0, sdt);
    delay(trb);

    IKRot1(59.26, -50.74, 19.44, sdt);
    IKRot1(-59.26, 50.74, 19.44, sdt);
    IKRot1(55.6, 54.4, 0, sdt);
    IKRot1(-55.6, -54.4, 0, sdt);
    delay(trb);

    IKRot1(57.41, -52.59, 31.11, sdt);
    IKRot1(-57.41, 52.59, 31.11, sdt);
    IKRot1(55.3, 54.7, 0, sdt);
    IKRot1(-55.3, -54.7, 0, sdt);
    delay(trb);
    //////////////////////////////////////////////
  }
  else if (movecounter == 2) {
    IKRot1(55, -55, 35, sdt);
    IKRot1(-55, 55, 35, sdt);
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    delay(trb);
    //////////////////Movecounter 2////////////////////
    IKRot1(52.59, -57.41, 31.11, sdt);
    IKRot1(-52.59, 57.41, 31.11, sdt);
    IKRot1(54.7, 55.3, 0, sdt);
    IKRot1(-54.7, -55.3, 0, sdt);
    delay(trb);

    IKRot1(50.74, -59.26, 19.44, sdt);
    IKRot1(-50.74, 59.26, 19.44, sdt);
    IKRot1(54.4, 55.6, 0, sdt);
    IKRot1(-54.4, -55.6, 0, sdt);
    delay(trb);

    IKRot1(50.4, -59.6, 10.85, sdt);
    IKRot1(-50.4, 59.6, 10.85, sdt);
    IKRot1(54.3, 55.7, 0, sdt);
    IKRot1(-54.3, -55.7, 0, sdt);
    delay(trb);

    IKRot1(50.28, -59.72, 7.3, sdt);
    IKRot1(-50.28, 59.72, 7.3, sdt);
    IKRot1(54.2, 55.8, 0, sdt);
    IKRot1(-54.2, -55.8, 0, sdt);
    delay(trb);

    IKRot1(50, -60, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(54.1, 55.9, 0, sdt);
    IKRot1(-54.1, -55.9, 0, sdt);
    delay(trb);

    IKRot1(50.11, -59.89, 0, sdt);
    IKRot1(-50.11, 59.89, 0, sdt);
    IKRot1(53.99, 56.01, 0, sdt);
    IKRot1(-53.99, -56.01, 0, sdt);
    delay(trb);

    IKRot1(50.43, -59.57, 0, sdt);
    IKRot1(-50.43, 59.57, 0, sdt);
    IKRot1(53.67, 56.33, 0, sdt);
    IKRot1(-53.67, -56.33, 0, sdt);
    delay(trb);

    IKRot1(50.89, -59.11, 0, sdt);
    IKRot1(-50.89, 59.11, 0, sdt);
    IKRot1(53.21, 56.79, 0, sdt);
    IKRot1(-53.21, -56.79, 0, sdt);
    delay(trb);

    IKRot1(51.44, -58.56, 0, sdt);
    IKRot1(-51.44, 58.56, 0, sdt);
    IKRot1(52.66, 57.34, 0, sdt);
    IKRot1(-52.66, -57.34, 0, sdt);
    delay(trb);

    IKRot1(52.05, -57.95, 0, sdt);
    IKRot1(-52.05, 57.95, 0, sdt);
    IKRot1(52.05, 57.95, 0, sdt);
    IKRot1(-52.05, -57.95, 0, sdt);
    delay(trb);

    IKRot1(52.66, -57.34, 0, sdt);
    IKRot1(-52.66, 57.34, 0, sdt);
    IKRot1(51.44, 58.56, 0, sdt);
    IKRot1(-51.44, -58.56, 0, sdt);
    delay(trb);

    IKRot1(53.21, -56.79, 0, sdt);
    IKRot1(-53.21, 56.79, 0, sdt);
    IKRot1(50.89, 59.11, 0, sdt);
    IKRot1(-50.89, -59.11, 0, sdt);
    delay(trb);

    IKRot1(53.67, -56.33, 0, sdt);
    IKRot1(-53.67, 56.33, 0, sdt);
    IKRot1(50.43, 59.57, 0, sdt);
    IKRot1(-50.43, -59.57, 0, sdt);
    delay(trb);

    IKRot1(53.99, -56.01, 0, sdt);
    IKRot1(-53.99, 56.01, 0, sdt);
    IKRot1(50.11, 59.89, 0, sdt);
    IKRot1(-50.11, -59.89, 0, sdt);
    delay(trb);

    IKRot1(54.1, -55.9, 0, sdt);
    IKRot1(-54.1, 55.9, 0, sdt);
    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    delay(trb);

    IKRot1(54.40, -55.60, 0, sdt);
    IKRot1(-54.40, 55.60, 0, sdt);
    IKRot1(50.74, 59.26, 19.44, sdt);
    IKRot1(-50.74, -59.26, 19.44, sdt);
    delay(trb);

    IKRot1(54.7, -55.3, 0, sdt);
    IKRot1(-54.7, 55.3, 0, sdt);
    IKRot1(52.59, 57.41, 31.11, sdt);
    IKRot1(-52.59, -57.41, 31.11, sdt);
    delay(trb);
    movecounter = 0;
  }
}

void rotRightKelereng(float sdt) { //Default 10 derajat
  movecounter++;
  if (movecounter == 1) {
    IKRot1(55, 55, 30, sdt);
    IKRot1(-55, -55, 30, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, -55, 0, sdt);
    delay(tr2);

    IKRot1(52.59, 57.41, 26.67, sdt);
    IKRot1(-52.59, -57.41, 26.67, sdt);
    IKRot1(-54.7, 55.3, 0, sdt);
    IKRot1(54.7, -55.3, 0, sdt);
    delay(tr2);

    IKRot1(50.74, 59.26, 16.67, sdt);
    IKRot1(-50.74, -59.26, 16.67, sdt);
    IKRot1(-54.4, 55.6, 0, sdt);
    IKRot1(54.4, -55.6, 0, sdt);
    delay(tr2);

    ///////////////////////////////////////////////////
    IKRot1(50.4, 59.6, 10.85, sdt);
    IKRot1(-50.4, -59.6, 10.85, sdt);
    IKRot1(-54.3, 55.7, 0, sdt);
    IKRot1(54.3, -55.7, 0, sdt);
    delay(tr2);

    IKRot1(50.28, 59.72, 6.3, sdt);
    IKRot1(-50.28, -59.72, 6.3, sdt);
    IKRot1(-54.2, 55.8, 0, sdt);
    IKRot1(54.2, -55.8, 0, sdt);
    delay(tr2);
    //////////////////////////////////////////////////

    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    IKRot1(-54.1, 55.9, 0, sdt);
    IKRot1(54.1, -55.9, 0, sdt);
    delay(tr2);
    ///////////////////////////////////////////////////
    IKRot1(50.11, 59.89, 0, sdt);
    IKRot1(-50.11, -59.89, 0, sdt);
    IKRot1(-53.99, 56.01, 0, sdt);
    IKRot1(53.99, -56.01, 0, sdt);
    delay(tr2);

    IKRot1(50.43, 59.57, 0, sdt);
    IKRot1(-50.43, -59.57, 0, sdt);
    IKRot1(-53.67, 56.33, 0, sdt);
    IKRot1(53.67, -56.33, 0, sdt);
    delay(tr2);

    IKRot1(50.89, 59.11, 0, sdt);
    IKRot1(-50.89, -59.11, 0, sdt);
    IKRot1(-53.21, 56.79, 0, sdt);
    IKRot1(53.21, -56.79, 0, sdt);
    delay(tr2);

    IKRot1(51.44, 58.56, 0, sdt);
    IKRot1(-51.44, -58.56, 0, sdt);
    IKRot1(-52.66, 57.34, 0, sdt);
    IKRot1(52.66, -57.34, 0, sdt);
    delay(tr2);

    IKRot1(52.05, 57.95, 0, sdt);
    IKRot1(-52.05, -57.95, 0, sdt);
    IKRot1(-52.05, 57.95, 0, sdt);
    IKRot1(52.05, -57.95, 0, sdt);
    delay(tr2);

    IKRot1(52.66, 57.34, 0, sdt);
    IKRot1(-52.66, -57.34, 0, sdt);
    IKRot1(-51.44, 58.56, 0, sdt);
    IKRot1(51.44, -58.56, 0, sdt);
    delay(tr2);

    IKRot1(53.21, 56.79, 0, sdt);
    IKRot1(-53.21, -56.79, 0, sdt);
    IKRot1(-50.89, 59.11, 0, sdt);
    IKRot1(50.89, -59.11, 0, sdt);
    delay(tr2);

    IKRot1(53.67, 56.33, 0, sdt);
    IKRot1(-53.67, -56.33, 0, sdt);
    IKRot1(-50.43, 59.57, 0, sdt);
    IKRot1(50.43, -59.57, 0, sdt);
    delay(tr2);

    IKRot1(53.99, 56.01, 0, sdt);
    IKRot1(-53.99, -56.01, 0, sdt);
    IKRot1(-50.11, 59.89, 0, sdt);
    IKRot1(50.11, -59.89, 0, sdt);
    delay(tr2);

    ///////////////////////////////////////////////////////
    IKRot1(54.1, 55.9, 0, sdt);
    IKRot1(-54.1, -55.9, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(50, -60, 0, sdt);
    delay(tr2);

    IKRot1(54.40, 55.60, 0, sdt);
    IKRot1(-54.40, -55.60, 0, sdt);
    IKRot1(-50.74, 59.26, 16.67, sdt);
    IKRot1(50.74, -59.26, 16.67, sdt);
    delay(tr2);

    IKRot1(54.7, 55.3, 0, sdt);
    IKRot1(-54.7, -55.3, 0, sdt);
    IKRot1(-52.59, 57.41, 26.67, sdt);
    IKRot1(52.59, -57.41, 26.67, sdt);
    delay(tr2);
  }
  else if (movecounter == 2) {
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    IKRot1(-55, 55, 30, sdt);
    IKRot1(55, -55, 30, sdt);
    delay(tr2);

    IKRot1(55.3, 54.7, 0, sdt);
    IKRot1(-55.3, -54.7, 0, sdt);
    IKRot1(-57.41, 52.59, 26.67, sdt);
    IKRot1(57.41, -52.59, 26.67, sdt);
    delay(tr2);

    IKRot1(55.6, 54.4, 0, sdt);
    IKRot1(-55.6, -54.4, 0, sdt);
    IKRot1(-59.26, 50.74, 16.67, sdt);
    IKRot1(59.26, -50.74, 16.67, sdt);
    delay(tr2);
    //////////////////////////////////////////

    IKRot1(55.7, 54.3, 0, sdt);
    IKRot1(-55.7, -54.3, 0, sdt);
    IKRot1(-59.6, 50.4, 10.85, sdt);
    IKRot1(59.6, -50.4, 10.85, sdt);
    delay(tr2);

    IKRot1(55.8, 54.2, 0, sdt);
    IKRot1(-55.8, -54.2, 0, sdt);
    IKRot1(-59.72, 50.28, 6.3, sdt);
    IKRot1(59.72, -50.28, 6.3, sdt);
    delay(tr2);
    ///////////////////////////////////////////
    IKRot1(55.9, 54.1, 0, sdt);
    IKRot1(-55.9, -54.1, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(60, -50, 0, sdt);
    delay(tr2);

    ////////////////////////////////////
    IKRot1(56.01, 53.99, 0, sdt);
    IKRot1(-56.01, -53.99, 0, sdt);
    IKRot1(-59.89, 50.11, 0, sdt);
    IKRot1(59.89, -50.11, 0, sdt);
    delay(tr2);

    IKRot1(56.33, 53.67, 0, sdt);
    IKRot1(-56.33, -53.67, 0, sdt);
    IKRot1(-59.57, 50.43, 0, sdt);
    IKRot1(59.57, -50.43, 0, sdt);
    delay(tr2);

    IKRot1(56.79, 53.21, 0, sdt);
    IKRot1(-56.79, -53.21, 0, sdt);
    IKRot1(-59.11, 50.89, 0, sdt);
    IKRot1(59.11, -50.89, 0, sdt);
    delay(tr2);

    IKRot1(57.34, 52.66, 0, sdt);
    IKRot1(-57.34, -52.66, 0, sdt);
    IKRot1(-58.56, 51.44, 0, sdt);
    IKRot1(58.56, -51.44, 0, sdt);
    delay(tr2);

    IKRot1(57.95, 52.05, 0, sdt);
    IKRot1(-57.95, -52.05, 0, sdt);
    IKRot1(-57.95, 52.05, 0, sdt);
    IKRot1(57.95, -52.05, 0, sdt);
    delay(tr2);

    IKRot1(58.56, 51.44, 0, sdt);
    IKRot1(-58.56, -51.44, 0, sdt);
    IKRot1(-57.34, 52.66, 0, sdt);
    IKRot1(57.34, -52.66, 0, sdt);
    delay(tr2);

    IKRot1(59.11, 50.89, 0, sdt);
    IKRot1(-59.11, -50.89, 0, sdt);
    IKRot1(-56.79, 53.21, 0, sdt);
    IKRot1(56.79, -53.21, 0, sdt);
    delay(tr2);

    IKRot1(59.57, 50.43, 0, sdt);
    IKRot1(-59.57, -50.43, 0, sdt);
    IKRot1(-56.33, 53.67, 0, sdt);
    IKRot1(56.33, -53.67, 0, sdt);
    delay(tr2);

    IKRot1(59.89, 50.11, 0, sdt);
    IKRot1(-59.89, -50.11, 0, sdt);
    IKRot1(-56.01, 53.99, 0, sdt);
    IKRot1(56.01, -53.99, 0, sdt);
    delay(tr2);

    ///////////////////////////////////////////
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    IKRot1(-55.9, 54.1, 0, sdt);
    IKRot1(55.9, -54.1, 0, sdt);
    delay(tr2);

    IKRot1(59.26, 50.74, 16.67, sdt);
    IKRot1(-59.26, -50.74, 16.67, sdt);
    IKRot1(-55.6, 54.4, 0, sdt);
    IKRot1(55.6, -54.4, 0, sdt);
    delay(tr2);

    IKRot1(57.41, 52.59, 26.67, sdt);
    IKRot1(-57.41, -52.59, 26.67, sdt);
    IKRot1(-55.3, 54.7, 0, sdt);
    IKRot1(55.3, -54.7, 0, sdt);
    delay(tr2);
    movecounter = 0;
  }
}

void rotLeftKelereng(float sdt) { //Default 10 derajat
  movecounter++;
  if (movecounter == 1) {
    IKRot1(55, -55, 0, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, 55, 30, sdt);
    IKRot1(-55, -55, 30, sdt);
    delay(tr2);
    /////////////////////Movecounter 1////////////////
    IKRot1(55.3, -54.7, 0, sdt);
    IKRot1(-55.3, 54.7, 0, sdt);
    IKRot1(57.41, 52.59, 26.67, sdt);
    IKRot1(-57.41, -52.59, 26.67, sdt);
    delay(tr2);

    IKRot1(55.6, -54.4, 0, sdt);
    IKRot1(-55.6, 54.4, 0, sdt);
    IKRot1(59.26, 50.74, 16.67, sdt);
    IKRot1(-59.26, -50.74, 16.67, sdt);
    delay(tr2);

    IKRot1(55.7, -54.3, 0, sdt);
    IKRot1(-55.7, 54.3, 0, sdt);
    IKRot1(59.6, 50.4, 10.85, sdt);
    IKRot1(-59.6, -50.4, 10.85, sdt);
    delay(tr2);

    IKRot1(55.8, -54.2, 0, sdt);
    IKRot1(-55.8, 54.2, 0, sdt);
    IKRot1(59.72, 50.28, 6.3, sdt);
    IKRot1(-59.72, -50.28, 6.3, sdt);
    delay(tr2);

    IKRot1(55.9, -54.1, 0, sdt);
    IKRot1(-55.9, 54.1, 0, sdt);
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    delay(tr2);

    IKRot1(56.01, -53.99, 0, sdt);
    IKRot1(-56.01, 53.99, 0, sdt);
    IKRot1(59.89, 50.11, 0, sdt);
    IKRot1(-59.89, -50.11, 0, sdt);
    delay(tr2);

    IKRot1(56.33, -53.67, 0, sdt);
    IKRot1(-56.33, 53.67, 0, sdt);
    IKRot1(59.57, 50.43, 0, sdt);
    IKRot1(-59.57, -50.43, 0, sdt);
    delay(tr2);

    IKRot1(56.79, -53.21, 0, sdt);
    IKRot1(-56.79, 53.21, 0, sdt);
    IKRot1(59.11, 50.89, 0, sdt);
    IKRot1(-59.11, -50.89, 0, sdt);
    delay(tr2);

    IKRot1(57.34, -52.66, 0, sdt);
    IKRot1(-57.34, 52.66, 0, sdt);
    IKRot1(58.56, 51.44, 0, sdt);
    IKRot1(-58.56, -51.44, 0, sdt);
    delay(tr2);

    IKRot1(57.95, -52.05, 0, sdt);
    IKRot1(-57.95, 52.05, 0, sdt);
    IKRot1(57.95, 52.05, 0, sdt);
    IKRot1(-57.95, -52.05, 0, sdt);
    delay(tr2);

    IKRot1(58.56, -51.44, 0, sdt);
    IKRot1(-58.56, 51.44, 0, sdt);
    IKRot1(57.34, 52.66, 0, sdt);
    IKRot1(-57.34, -52.66, 0, sdt);
    delay(tr2);

    IKRot1(59.11, -50.89, 0, sdt);
    IKRot1(-59.11, 50.89, 0, sdt);
    IKRot1(56.79, 53.21, 0, sdt);
    IKRot1(-56.79, -53.21, 0, sdt);
    delay(tr2);

    IKRot1(59.57, -50.43, 0, sdt);
    IKRot1(-59.57, 50.43, 0, sdt);
    IKRot1(56.33, 53.67, 0, sdt);
    IKRot1(-56.33, -53.67, 0, sdt);
    delay(tr2);

    IKRot1(59.89, -50.11, 0, sdt);
    IKRot1(-59.89, 50.11, 0, sdt);
    IKRot1(56.01, 53.99, 0, sdt);
    IKRot1(-56.01, -53.99, 0, sdt);
    delay(tr2);

    IKRot1(60, -50, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(55.9, 54.1, 0, sdt);
    IKRot1(-55.9, -54.1, 0, sdt);
    delay(tr2);

    IKRot1(59.26, -50.74, 16.67, sdt);
    IKRot1(-59.26, 50.74, 16.67, sdt);
    IKRot1(55.6, 54.4, 0, sdt);
    IKRot1(-55.6, -54.4, 0, sdt);
    delay(tr2);

    IKRot1(57.41, -52.59, 26.67, sdt);
    IKRot1(-57.41, 52.59, 26.67, sdt);
    IKRot1(55.3, 54.7, 0, sdt);
    IKRot1(-55.3, -54.7, 0, sdt);
    delay(tr2);
    //////////////////////////////////////////////
  }
  else if (movecounter == 2) {
    IKRot1(55, -55, 30, sdt);
    IKRot1(-55, 55, 30, sdt);
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    delay(tr2);
    //////////////////Movecounter 2////////////////////
    IKRot1(52.59, -57.41, 26.67, sdt);
    IKRot1(-52.59, 57.41, 26.67, sdt);
    IKRot1(54.7, 55.3, 0, sdt);
    IKRot1(-54.7, -55.3, 0, sdt);
    delay(tr2);

    IKRot1(50.74, -59.26, 16.67, sdt);
    IKRot1(-50.74, 59.26, 16.67, sdt);
    IKRot1(54.4, 55.6, 0, sdt);
    IKRot1(-54.4, -55.6, 0, sdt);
    delay(tr2);

    IKRot1(50.4, -59.6, 10.85, sdt);
    IKRot1(-50.4, 59.6, 10.85, sdt);
    IKRot1(54.3, 55.7, 0, sdt);
    IKRot1(-54.3, -55.7, 0, sdt);
    delay(tr2);

    IKRot1(50.28, -59.72, 6.3, sdt);
    IKRot1(-50.28, 59.72, 6.3, sdt);
    IKRot1(54.2, 55.8, 0, sdt);
    IKRot1(-54.2, -55.8, 0, sdt);
    delay(tr2);

    IKRot1(50, -60, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(54.1, 55.9, 0, sdt);
    IKRot1(-54.1, -55.9, 0, sdt);
    delay(tr2);

    IKRot1(50.11, -59.89, 0, sdt);
    IKRot1(-50.11, 59.89, 0, sdt);
    IKRot1(53.99, 56.01, 0, sdt);
    IKRot1(-53.99, -56.01, 0, sdt);
    delay(tr2);

    IKRot1(50.43, -59.57, 0, sdt);
    IKRot1(-50.43, 59.57, 0, sdt);
    IKRot1(53.67, 56.33, 0, sdt);
    IKRot1(-53.67, -56.33, 0, sdt);
    delay(tr2);

    IKRot1(50.89, -59.11, 0, sdt);
    IKRot1(-50.89, 59.11, 0, sdt);
    IKRot1(53.21, 56.79, 0, sdt);
    IKRot1(-53.21, -56.79, 0, sdt);
    delay(tr2);

    IKRot1(51.44, -58.56, 0, sdt);
    IKRot1(-51.44, 58.56, 0, sdt);
    IKRot1(52.66, 57.34, 0, sdt);
    IKRot1(-52.66, -57.34, 0, sdt);
    delay(tr2);

    IKRot1(52.05, -57.95, 0, sdt);
    IKRot1(-52.05, 57.95, 0, sdt);
    IKRot1(52.05, 57.95, 0, sdt);
    IKRot1(-52.05, -57.95, 0, sdt);
    delay(tr2);

    IKRot1(52.66, -57.34, 0, sdt);
    IKRot1(-52.66, 57.34, 0, sdt);
    IKRot1(51.44, 58.56, 0, sdt);
    IKRot1(-51.44, -58.56, 0, sdt);
    delay(tr2);

    IKRot1(53.21, -56.79, 0, sdt);
    IKRot1(-53.21, 56.79, 0, sdt);
    IKRot1(50.89, 59.11, 0, sdt);
    IKRot1(-50.89, -59.11, 0, sdt);
    delay(tr2);

    IKRot1(53.67, -56.33, 0, sdt);
    IKRot1(-53.67, 56.33, 0, sdt);
    IKRot1(50.43, 59.57, 0, sdt);
    IKRot1(-50.43, -59.57, 0, sdt);
    delay(tr2);

    IKRot1(53.99, -56.01, 0, sdt);
    IKRot1(-53.99, 56.01, 0, sdt);
    IKRot1(50.11, 59.89, 0, sdt);
    IKRot1(-50.11, -59.89, 0, sdt);
    delay(tr2);

    IKRot1(54.1, -55.9, 0, sdt);
    IKRot1(-54.1, 55.9, 0, sdt);
    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    delay(tr2);

    IKRot1(54.40, -55.60, 0, sdt);
    IKRot1(-54.40, 55.60, 0, sdt);
    IKRot1(50.74, 59.26, 16.67, sdt);
    IKRot1(-50.74, -59.26, 16.67, sdt);
    delay(tr2);

    IKRot1(54.7, -55.3, 0, sdt);
    IKRot1(-54.7, 55.3, 0, sdt);
    IKRot1(52.59, 57.41, 26.67, sdt);
    IKRot1(-52.59, -57.41, 26.67, sdt);
    delay(tr2);
    movecounter = 0;
  }
}

void rotRightPecah(float sdt) { //Default 10 derajat
  movecounter++;
  if (movecounter == 1) {
    IKRot1(55, 55, 35, sdt);
    IKRot1(-55, -55, 35, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, -55, 0, sdt);
    delay(tr3);

    IKRot1(52.59, 57.41, 31.11, sdt);
    IKRot1(-52.59, -57.41, 31.11, sdt);
    IKRot1(-54.7, 55.3, 0, sdt);
    IKRot1(54.7, -55.3, 0, sdt);
    delay(tr3);

    IKRot1(50.74, 59.26, 19.44, sdt);
    IKRot1(-50.74, -59.26, 19.44, sdt);
    IKRot1(-54.4, 55.6, 0, sdt);
    IKRot1(54.4, -55.6, 0, sdt);
    delay(tr3);

    ///////////////////////////////////////////////////
    IKRot1(50.4, 59.6, 11.85, sdt);
    IKRot1(-50.4, -59.6, 11.85, sdt);
    IKRot1(-54.3, 55.7, 0, sdt);
    IKRot1(54.3, -55.7, 0, sdt);
    delay(tr3);

    IKRot1(50.28, 59.72, 7.3, sdt);
    IKRot1(-50.28, -59.72, 7.3, sdt);
    IKRot1(-54.2, 55.8, 0, sdt);
    IKRot1(54.2, -55.8, 0, sdt);
    delay(tr3);
    //////////////////////////////////////////////////

    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    IKRot1(-54.1, 55.9, 0, sdt);
    IKRot1(54.1, -55.9, 0, sdt);
    delay(tr3);
    ///////////////////////////////////////////////////
    IKRot1(50.11, 59.89, 0, sdt);
    IKRot1(-50.11, -59.89, 0, sdt);
    IKRot1(-53.99, 56.01, 0, sdt);
    IKRot1(53.99, -56.01, 0, sdt);
    delay(tr3);

    IKRot1(50.43, 59.57, 0, sdt);
    IKRot1(-50.43, -59.57, 0, sdt);
    IKRot1(-53.67, 56.33, 0, sdt);
    IKRot1(53.67, -56.33, 0, sdt);
    delay(tr3);

    IKRot1(50.89, 59.11, 0, sdt);
    IKRot1(-50.89, -59.11, 0, sdt);
    IKRot1(-53.21, 56.79, 0, sdt);
    IKRot1(53.21, -56.79, 0, sdt);
    delay(tr3);

    IKRot1(51.44, 58.56, 0, sdt);
    IKRot1(-51.44, -58.56, 0, sdt);
    IKRot1(-52.66, 57.34, 0, sdt);
    IKRot1(52.66, -57.34, 0, sdt);
    delay(tr3);

    IKRot1(52.05, 57.95, 0, sdt);
    IKRot1(-52.05, -57.95, 0, sdt);
    IKRot1(-52.05, 57.95, 0, sdt);
    IKRot1(52.05, -57.95, 0, sdt);
    delay(tr3);

    IKRot1(52.66, 57.34, 0, sdt);
    IKRot1(-52.66, -57.34, 0, sdt);
    IKRot1(-51.44, 58.56, 0, sdt);
    IKRot1(51.44, -58.56, 0, sdt);
    delay(tr3);

    IKRot1(53.21, 56.79, 0, sdt);
    IKRot1(-53.21, -56.79, 0, sdt);
    IKRot1(-50.89, 59.11, 0, sdt);
    IKRot1(50.89, -59.11, 0, sdt);
    delay(tr3);

    IKRot1(53.67, 56.33, 0, sdt);
    IKRot1(-53.67, -56.33, 0, sdt);
    IKRot1(-50.43, 59.57, 0, sdt);
    IKRot1(50.43, -59.57, 0, sdt);
    delay(tr3);

    IKRot1(53.99, 56.01, 0, sdt);
    IKRot1(-53.99, -56.01, 0, sdt);
    IKRot1(-50.11, 59.89, 0, sdt);
    IKRot1(50.11, -59.89, 0, sdt);
    delay(tr3);

    ///////////////////////////////////////////////////////
    IKRot1(54.1, 55.9, 0, sdt);
    IKRot1(-54.1, -55.9, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(50, -60, 0, sdt);
    delay(tr3);

    IKRot1(54.40, 55.60, 0, sdt);
    IKRot1(-54.40, -55.60, 0, sdt);
    IKRot1(-50.74, 59.26, 19.44, sdt);
    IKRot1(50.74, -59.26, 19.44, sdt);
    delay(tr3);

    IKRot1(54.7, 55.3, 0, sdt);
    IKRot1(-54.7, -55.3, 0, sdt);
    IKRot1(-52.59, 57.41, 31.11, sdt);
    IKRot1(52.59, -57.41, 31.11, sdt);
    delay(tr3);
  }
  else if (movecounter == 2) {
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    IKRot1(-55, 55, 35, sdt);
    IKRot1(55, -55, 35, sdt);
    delay(tr3);

    IKRot1(55.3, 54.7, 0, sdt);
    IKRot1(-55.3, -54.7, 0, sdt);
    IKRot1(-57.41, 52.59, 31.11, sdt);
    IKRot1(57.41, -52.59, 31.11, sdt);
    delay(tr3);

    IKRot1(55.6, 54.4, 0, sdt);
    IKRot1(-55.6, -54.4, 0, sdt);
    IKRot1(-59.26, 50.74, 19.44, sdt);
    IKRot1(59.26, -50.74, 19.44, sdt);
    delay(tr3);
    //////////////////////////////////////////

    IKRot1(55.7, 54.3, 0, sdt);
    IKRot1(-55.7, -54.3, 0, sdt);
    IKRot1(-59.6, 50.4, 11.85, sdt);
    IKRot1(59.6, -50.4, 11.85, sdt);
    delay(tr3);

    IKRot1(55.8, 54.2, 0, sdt);
    IKRot1(-55.8, -54.2, 0, sdt);
    IKRot1(-59.72, 50.28, 7.3, sdt);
    IKRot1(59.72, -50.28, 7.3, sdt);
    delay(tr3);
    ///////////////////////////////////////////
    IKRot1(55.9, 54.1, 0, sdt);
    IKRot1(-55.9, -54.1, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(60, -50, 0, sdt);
    delay(tr3);

    ////////////////////////////////////
    IKRot1(56.01, 53.99, 0, sdt);
    IKRot1(-56.01, -53.99, 0, sdt);
    IKRot1(-59.89, 50.11, 0, sdt);
    IKRot1(59.89, -50.11, 0, sdt);
    delay(tr3);

    IKRot1(56.33, 53.67, 0, sdt);
    IKRot1(-56.33, -53.67, 0, sdt);
    IKRot1(-59.57, 50.43, 0, sdt);
    IKRot1(59.57, -50.43, 0, sdt);
    delay(tr3);

    IKRot1(56.79, 53.21, 0, sdt);
    IKRot1(-56.79, -53.21, 0, sdt);
    IKRot1(-59.11, 50.89, 0, sdt);
    IKRot1(59.11, -50.89, 0, sdt);
    delay(tr3);

    IKRot1(57.34, 52.66, 0, sdt);
    IKRot1(-57.34, -52.66, 0, sdt);
    IKRot1(-58.56, 51.44, 0, sdt);
    IKRot1(58.56, -51.44, 0, sdt);
    delay(tr3);

    IKRot1(57.95, 52.05, 0, sdt);
    IKRot1(-57.95, -52.05, 0, sdt);
    IKRot1(-57.95, 52.05, 0, sdt);
    IKRot1(57.95, -52.05, 0, sdt);
    delay(tr3);

    IKRot1(58.56, 51.44, 0, sdt);
    IKRot1(-58.56, -51.44, 0, sdt);
    IKRot1(-57.34, 52.66, 0, sdt);
    IKRot1(57.34, -52.66, 0, sdt);
    delay(tr3);

    IKRot1(59.11, 50.89, 0, sdt);
    IKRot1(-59.11, -50.89, 0, sdt);
    IKRot1(-56.79, 53.21, 0, sdt);
    IKRot1(56.79, -53.21, 0, sdt);
    delay(tr3);

    IKRot1(59.57, 50.43, 0, sdt);
    IKRot1(-59.57, -50.43, 0, sdt);
    IKRot1(-56.33, 53.67, 0, sdt);
    IKRot1(56.33, -53.67, 0, sdt);
    delay(tr3);

    IKRot1(59.89, 50.11, 0, sdt);
    IKRot1(-59.89, -50.11, 0, sdt);
    IKRot1(-56.01, 53.99, 0, sdt);
    IKRot1(56.01, -53.99, 0, sdt);
    delay(tr3);

    ///////////////////////////////////////////
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    IKRot1(-55.9, 54.1, 0, sdt);
    IKRot1(55.9, -54.1, 0, sdt);
    delay(tr3);

    IKRot1(59.26, 50.74, 19.44, sdt);
    IKRot1(-59.26, -50.74, 19.44, sdt);
    IKRot1(-55.6, 54.4, 0, sdt);
    IKRot1(55.6, -54.4, 0, sdt);
    delay(tr3);

    IKRot1(57.41, 52.59, 31.11, sdt);
    IKRot1(-57.41, -52.59, 31.11, sdt);
    IKRot1(-55.3, 54.7, 0, sdt);
    IKRot1(55.3, -54.7, 0, sdt);
    delay(tr3);
    movecounter = 0;
  }
}

void rotLeftPecah(float sdt) { //Default 10 derajat
  movecounter++;
  if (movecounter == 1) {
    IKRot1(55, -55, 0, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, 55, 35, sdt);
    IKRot1(-55, -55, 35, sdt);
    delay(tr3);
    /////////////////////Movecounter 1////////////////
    IKRot1(55.3, -54.7, 0, sdt);
    IKRot1(-55.3, 54.7, 0, sdt);
    IKRot1(57.41, 52.59, 31.11, sdt);
    IKRot1(-57.41, -52.59, 31.11, sdt);
    delay(tr3);

    IKRot1(55.6, -54.4, 0, sdt);
    IKRot1(-55.6, 54.4, 0, sdt);
    IKRot1(59.26, 50.74, 19.44, sdt);
    IKRot1(-59.26, -50.74, 19.44, sdt);
    delay(tr3);

    IKRot1(55.7, -54.3, 0, sdt);
    IKRot1(-55.7, 54.3, 0, sdt);
    IKRot1(59.6, 50.4, 11.85, sdt);
    IKRot1(-59.6, -50.4, 11.85, sdt);
    delay(tr3);

    IKRot1(55.8, -54.2, 0, sdt);
    IKRot1(-55.8, 54.2, 0, sdt);
    IKRot1(59.72, 50.28, 7.3, sdt);
    IKRot1(-59.72, -50.28, 7.3, sdt);
    delay(tr3);

    IKRot1(55.9, -54.1, 0, sdt);
    IKRot1(-55.9, 54.1, 0, sdt);
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    delay(tr3);

    IKRot1(56.01, -53.99, 0, sdt);
    IKRot1(-56.01, 53.99, 0, sdt);
    IKRot1(59.89, 50.11, 0, sdt);
    IKRot1(-59.89, -50.11, 0, sdt);
    delay(tr3);

    IKRot1(56.33, -53.67, 0, sdt);
    IKRot1(-56.33, 53.67, 0, sdt);
    IKRot1(59.57, 50.43, 0, sdt);
    IKRot1(-59.57, -50.43, 0, sdt);
    delay(tr3);

    IKRot1(56.79, -53.21, 0, sdt);
    IKRot1(-56.79, 53.21, 0, sdt);
    IKRot1(59.11, 50.89, 0, sdt);
    IKRot1(-59.11, -50.89, 0, sdt);
    delay(tr3);

    IKRot1(57.34, -52.66, 0, sdt);
    IKRot1(-57.34, 52.66, 0, sdt);
    IKRot1(58.56, 51.44, 0, sdt);
    IKRot1(-58.56, -51.44, 0, sdt);
    delay(tr3);

    IKRot1(57.95, -52.05, 0, sdt);
    IKRot1(-57.95, 52.05, 0, sdt);
    IKRot1(57.95, 52.05, 0, sdt);
    IKRot1(-57.95, -52.05, 0, sdt);
    delay(tr3);

    IKRot1(58.56, -51.44, 0, sdt);
    IKRot1(-58.56, 51.44, 0, sdt);
    IKRot1(57.34, 52.66, 0, sdt);
    IKRot1(-57.34, -52.66, 0, sdt);
    delay(tr3);

    IKRot1(59.11, -50.89, 0, sdt);
    IKRot1(-59.11, 50.89, 0, sdt);
    IKRot1(56.79, 53.21, 0, sdt);
    IKRot1(-56.79, -53.21, 0, sdt);
    delay(tr3);

    IKRot1(59.57, -50.43, 0, sdt);
    IKRot1(-59.57, 50.43, 0, sdt);
    IKRot1(56.33, 53.67, 0, sdt);
    IKRot1(-56.33, -53.67, 0, sdt);
    delay(tr3);

    IKRot1(59.89, -50.11, 0, sdt);
    IKRot1(-59.89, 50.11, 0, sdt);
    IKRot1(56.01, 53.99, 0, sdt);
    IKRot1(-56.01, -53.99, 0, sdt);
    delay(tr3);

    IKRot1(60, -50, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(55.9, 54.1, 0, sdt);
    IKRot1(-55.9, -54.1, 0, sdt);
    delay(tr3);

    IKRot1(59.26, -50.74, 19.44, sdt);
    IKRot1(-59.26, 50.74, 19.44, sdt);
    IKRot1(55.6, 54.4, 0, sdt);
    IKRot1(-55.6, -54.4, 0, sdt);
    delay(tr3);

    IKRot1(57.41, -52.59, 31.11, sdt);
    IKRot1(-57.41, 52.59, 31.11, sdt);
    IKRot1(55.3, 54.7, 0, sdt);
    IKRot1(-55.3, -54.7, 0, sdt);
    delay(tr3);
    //////////////////////////////////////////////
  }
  else if (movecounter == 2) {
    IKRot1(55, -55, 35, sdt);
    IKRot1(-55, 55, 35, sdt);
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    delay(tr3);
    //////////////////Movecounter 2////////////////////
    IKRot1(52.59, -57.41, 31.11, sdt);
    IKRot1(-52.59, 57.41, 31.11, sdt);
    IKRot1(54.7, 55.3, 0, sdt);
    IKRot1(-54.7, -55.3, 0, sdt);
    delay(tr3);

    IKRot1(50.74, -59.26, 19.44, sdt);
    IKRot1(-50.74, 59.26, 19.44, sdt);
    IKRot1(54.4, 55.6, 0, sdt);
    IKRot1(-54.4, -55.6, 0, sdt);
    delay(tr3);

    IKRot1(50.4, -59.6, 11.85, sdt);
    IKRot1(-50.4, 59.6, 11.85, sdt);
    IKRot1(54.3, 55.7, 0, sdt);
    IKRot1(-54.3, -55.7, 0, sdt);
    delay(tr3);

    IKRot1(50.28, -59.72, 7.3, sdt);
    IKRot1(-50.28, 59.72, 7.3, sdt);
    IKRot1(54.2, 55.8, 0, sdt);
    IKRot1(-54.2, -55.8, 0, sdt);
    delay(tr3);

    IKRot1(50, -60, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(54.1, 55.9, 0, sdt);
    IKRot1(-54.1, -55.9, 0, sdt);
    delay(tr3);

    IKRot1(50.11, -59.89, 0, sdt);
    IKRot1(-50.11, 59.89, 0, sdt);
    IKRot1(53.99, 56.01, 0, sdt);
    IKRot1(-53.99, -56.01, 0, sdt);
    delay(tr3);

    IKRot1(50.43, -59.57, 0, sdt);
    IKRot1(-50.43, 59.57, 0, sdt);
    IKRot1(53.67, 56.33, 0, sdt);
    IKRot1(-53.67, -56.33, 0, sdt);
    delay(tr3);

    IKRot1(50.89, -59.11, 0, sdt);
    IKRot1(-50.89, 59.11, 0, sdt);
    IKRot1(53.21, 56.79, 0, sdt);
    IKRot1(-53.21, -56.79, 0, sdt);
    delay(tr3);

    IKRot1(51.44, -58.56, 0, sdt);
    IKRot1(-51.44, 58.56, 0, sdt);
    IKRot1(52.66, 57.34, 0, sdt);
    IKRot1(-52.66, -57.34, 0, sdt);
    delay(tr3);

    IKRot1(52.05, -57.95, 0, sdt);
    IKRot1(-52.05, 57.95, 0, sdt);
    IKRot1(52.05, 57.95, 0, sdt);
    IKRot1(-52.05, -57.95, 0, sdt);
    delay(tr3);

    IKRot1(52.66, -57.34, 0, sdt);
    IKRot1(-52.66, 57.34, 0, sdt);
    IKRot1(51.44, 58.56, 0, sdt);
    IKRot1(-51.44, -58.56, 0, sdt);
    delay(tr3);

    IKRot1(53.21, -56.79, 0, sdt);
    IKRot1(-53.21, 56.79, 0, sdt);
    IKRot1(50.89, 59.11, 0, sdt);
    IKRot1(-50.89, -59.11, 0, sdt);
    delay(tr3);

    IKRot1(53.67, -56.33, 0, sdt);
    IKRot1(-53.67, 56.33, 0, sdt);
    IKRot1(50.43, 59.57, 0, sdt);
    IKRot1(-50.43, -59.57, 0, sdt);
    delay(tr3);

    IKRot1(53.99, -56.01, 0, sdt);
    IKRot1(-53.99, 56.01, 0, sdt);
    IKRot1(50.11, 59.89, 0, sdt);
    IKRot1(-50.11, -59.89, 0, sdt);
    delay(tr3);

    IKRot1(54.1, -55.9, 0, sdt);
    IKRot1(-54.1, 55.9, 0, sdt);
    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    delay(tr3);

    IKRot1(54.40, -55.60, 0, sdt);
    IKRot1(-54.40, 55.60, 0, sdt);
    IKRot1(50.74, 59.26, 19.44, sdt);
    IKRot1(-50.74, -59.26, 19.44, sdt);
    delay(tr3);

    IKRot1(54.7, -55.3, 0, sdt);
    IKRot1(-54.7, 55.3, 0, sdt);
    IKRot1(52.59, 57.41, 31.11, sdt);
    IKRot1(-52.59, -57.41, 31.11, sdt);
    delay(tr3);
    movecounter = 0;
  }
}

void kiricepat(float lbr) { //Gerakan lambat naik 3.5 cm
  arahgerak = false;
  height = -80;
  height2 = -80;
  movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 10, lbr);
    BL(-55, -55, 10, lbr);
    FL(-55, 55, 0, lbr);
    BR(55, -55, 0, lbr);
    delay(tb1);

    FR(55, 40.56, 8.89, lbr);
    BL(-55, -69.44, 8.89, lbr);
    FL(-55, 50, 0, lbr);
    BR(55, -59.98, 0, lbr);
    delay(tb1);

    FR(55, 29.44, 5.56, lbr);
    BL(-55, -80.56, 5.56, lbr);
    FL(-55, 45.16, 0, lbr);
    BR(55, -64.84, 0, lbr);
    delay(tb1);

    FR(55, 25, 0, lbr);
    BL(-55, -85, 0, lbr);
    FL(-55, 40.56, 0, lbr);
    BR(55, -69.44, 0, lbr);
    delay(tb1);

    FR(55, 29.03, 0, lbr);
    BL(-55, -80.97, 0, lbr);
    FL(-55, 36.53, 0, lbr);
    BR(55, -73.47, 0, lbr);
    delay(tb1);

    FR(55, 36.53, 0, lbr);
    BL(-55, -73.47, 0, lbr);
    FL(-55, 29.03, 0, lbr);
    BR(55, -80.97, 0, lbr);
    delay(tb1);

    FR(55, 40.56, 0, lbr);
    BL(-55, -69.44, 0, lbr);
    FL(-55, 25, 0, lbr);
    BR(55, -85, 0, lbr);
    delay(tb1);

    FR(55, 45.16, 0, lbr);
    BL(-55, -64.84, 0, lbr);
    FL(-55, 29.44, 5.56, lbr);
    BR(55, -80.56, 5.56, lbr);
    delay(tb1);

    FR(55, 50, 0, lbr);
    BL(-55, -59.98, 0, lbr);
    FL(-55, 40.56, 8.89, lbr);
    BR(55, -69.44, 8.89, lbr);
    delay(tb1);
  }
  else if (movecounter == 2) {
    FR(55, 55, 0, lbr);
    BL(-55, -55, 0, lbr);
    FL(-55, 55, 10, lbr);
    BR(55, -55, 10, lbr);
    delay(tb1);

    FR(55, 59.98, 0, lbr);
    BL(-55, -50, 0, lbr);
    FL(-55, 69.44, 8.89, lbr);
    BR(55, -40.56, 8.89, lbr);
    delay(tb1);

    FR(55, 64.84, 0, lbr);
    BL(-55, -45.16, 0, lbr);
    FL(-55, 80.56, 5.56, lbr);
    BR(55, -29.44, 5.56, lbr);
    delay(tb1);

    FR(55, 69.84, 0, lbr);
    BL(-55, -40.56, 0, lbr);
    FL(-55, 85, 0, lbr);
    BR(55, -25, 0, lbr);
    delay(tb1);

    FR(55, 73.47, 0, lbr);
    BL(-55, -36.53, 0, lbr);
    FL(-55, 80.97, 0, lbr);
    BR(55, -29.03, 0, lbr);
    delay(tb1);

    FR(55, 80.97, 0, lbr);
    BL(-55, -29.03, 0, lbr);
    FL(-55, 73.47, 0, lbr);
    BR(55, -36.53, 0, lbr);
    delay(tb1);

    FR(55, 85, 0, lbr);
    BL(-55, -25, 0, lbr);
    FL(-55, 69.44, 0, lbr);
    BR(55, -40.56, 0, lbr);
    delay(tb1);

    FR(55, 80.56, 5.56, lbr);
    BL(-55, -29.44, 5.56, lbr);
    FL(-55, 64.48, 0, lbr);
    BR(55, -45.16, 0, lbr);
    delay(tb1);

    FR(55, 69.44, 8.89, lbr);
    BL(-55, -40.56, 8.89, lbr);
    FL(-55, 59.98, 0, lbr);
    BR(55, -50, 0, lbr);
    delay(tb1);
    movecounter = 0;
  }
}

void rotRightK1(float sdt) { //Default 10 derajat
  movecounter++;
  if (movecounter == 1) {
    IKRot1(55, 55, 15, sdt);
    IKRot1(-55, -55, 15, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, -55, 0, sdt);
    delay(tr2);

    IKRot1(52.59, 57.41, 13.33, sdt);
    IKRot1(-52.59, -57.41, 13.33, sdt);
    IKRot1(-54.7, 55.3, 0, sdt);
    IKRot1(54.7, -55.3, 0, sdt);
    delay(tr2);

    IKRot1(50.74, 59.26, 8.33, sdt);
    IKRot1(-50.74, -59.26, 8.33, sdt);
    IKRot1(-54.4, 55.6, 0, sdt);
    IKRot1(54.4, -55.6, 0, sdt);
    delay(tr2);

    ///////////////////////////////////////////////////
    IKRot1(50.4, 59.6, 4.85, sdt);
    IKRot1(-50.4, -59.6, 4.85, sdt);
    IKRot1(-54.3, 55.7, 0, sdt);
    IKRot1(54.3, -55.7, 0, sdt);
    delay(tr2);

    IKRot1(50.28, 59.72, 2.3, sdt);
    IKRot1(-50.28, -59.72, 2.3, sdt);
    IKRot1(-54.2, 55.8, 0, sdt);
    IKRot1(54.2, -55.8, 0, sdt);
    delay(tr2);
    //////////////////////////////////////////////////

    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    IKRot1(-54.1, 55.9, 0, sdt);
    IKRot1(54.1, -55.9, 0, sdt);
    delay(tr2);
    ///////////////////////////////////////////////////
    IKRot1(50.11, 59.89, 0, sdt);
    IKRot1(-50.11, -59.89, 0, sdt);
    IKRot1(-53.99, 56.01, 0, sdt);
    IKRot1(53.99, -56.01, 0, sdt);
    delay(tr2);

    IKRot1(50.43, 59.57, 0, sdt);
    IKRot1(-50.43, -59.57, 0, sdt);
    IKRot1(-53.67, 56.33, 0, sdt);
    IKRot1(53.67, -56.33, 0, sdt);
    delay(tr2);

    IKRot1(50.89, 59.11, 0, sdt);
    IKRot1(-50.89, -59.11, 0, sdt);
    IKRot1(-53.21, 56.79, 0, sdt);
    IKRot1(53.21, -56.79, 0, sdt);
    delay(tr2);

    IKRot1(51.44, 58.56, 0, sdt);
    IKRot1(-51.44, -58.56, 0, sdt);
    IKRot1(-52.66, 57.34, 0, sdt);
    IKRot1(52.66, -57.34, 0, sdt);
    delay(tr2);

    IKRot1(52.05, 57.95, 0, sdt);
    IKRot1(-52.05, -57.95, 0, sdt);
    IKRot1(-52.05, 57.95, 0, sdt);
    IKRot1(52.05, -57.95, 0, sdt);
    delay(tr2);

    IKRot1(52.66, 57.34, 0, sdt);
    IKRot1(-52.66, -57.34, 0, sdt);
    IKRot1(-51.44, 58.56, 0, sdt);
    IKRot1(51.44, -58.56, 0, sdt);
    delay(tr2);

    IKRot1(53.21, 56.79, 0, sdt);
    IKRot1(-53.21, -56.79, 0, sdt);
    IKRot1(-50.89, 59.11, 0, sdt);
    IKRot1(50.89, -59.11, 0, sdt);
    delay(tr2);

    IKRot1(53.67, 56.33, 0, sdt);
    IKRot1(-53.67, -56.33, 0, sdt);
    IKRot1(-50.43, 59.57, 0, sdt);
    IKRot1(50.43, -59.57, 0, sdt);
    delay(tr2);

    IKRot1(53.99, 56.01, 0, sdt);
    IKRot1(-53.99, -56.01, 0, sdt);
    IKRot1(-50.11, 59.89, 0, sdt);
    IKRot1(50.11, -59.89, 0, sdt);
    delay(tr2);

    ///////////////////////////////////////////////////////
    IKRot1(54.1, 55.9, 0, sdt);
    IKRot1(-54.1, -55.9, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(50, -60, 0, sdt);
    delay(tr2);

    IKRot1(54.40, 55.60, 0, sdt);
    IKRot1(-54.40, -55.60, 0, sdt);
    IKRot1(-50.74, 59.26, 8.33, sdt);
    IKRot1(50.74, -59.26, 8.33, sdt);
    delay(tr2);

    IKRot1(54.7, 55.3, 0, sdt);
    IKRot1(-54.7, -55.3, 0, sdt);
    IKRot1(-52.59, 57.41, 13.33, sdt);
    IKRot1(52.59, -57.41, 13.33, sdt);
    delay(tr2);
  }
  else if (movecounter == 2) {
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    IKRot1(-55, 55, 15, sdt);
    IKRot1(55, -55, 15, sdt);
    delay(tr2);

    IKRot1(55.3, 54.7, 0, sdt);
    IKRot1(-55.3, -54.7, 0, sdt);
    IKRot1(-57.41, 52.59, 13.33, sdt);
    IKRot1(57.41, -52.59, 13.33, sdt);
    delay(tr2);

    IKRot1(55.6, 54.4, 0, sdt);
    IKRot1(-55.6, -54.4, 0, sdt);
    IKRot1(-59.26, 50.74, 8.33, sdt);
    IKRot1(59.26, -50.74, 8.33, sdt);
    delay(tr2);
    //////////////////////////////////////////

    IKRot1(55.7, 54.3, 0, sdt);
    IKRot1(-55.7, -54.3, 0, sdt);
    IKRot1(-59.6, 50.4, 4.85, sdt);
    IKRot1(59.6, -50.4, 4.85, sdt);
    delay(tr2);

    IKRot1(55.8, 54.2, 0, sdt);
    IKRot1(-55.8, -54.2, 0, sdt);
    IKRot1(-59.72, 50.28, 2.3, sdt);
    IKRot1(59.72, -50.28, 2.3, sdt);
    delay(tr2);
    ///////////////////////////////////////////
    IKRot1(55.9, 54.1, 0, sdt);
    IKRot1(-55.9, -54.1, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(60, -50, 0, sdt);
    delay(tr2);

    ////////////////////////////////////
    IKRot1(56.01, 53.99, 0, sdt);
    IKRot1(-56.01, -53.99, 0, sdt);
    IKRot1(-59.89, 50.11, 0, sdt);
    IKRot1(59.89, -50.11, 0, sdt);
    delay(tr2);

    IKRot1(56.33, 53.67, 0, sdt);
    IKRot1(-56.33, -53.67, 0, sdt);
    IKRot1(-59.57, 50.43, 0, sdt);
    IKRot1(59.57, -50.43, 0, sdt);
    delay(tr2);

    IKRot1(56.79, 53.21, 0, sdt);
    IKRot1(-56.79, -53.21, 0, sdt);
    IKRot1(-59.11, 50.89, 0, sdt);
    IKRot1(59.11, -50.89, 0, sdt);
    delay(tr2);

    IKRot1(57.34, 52.66, 0, sdt);
    IKRot1(-57.34, -52.66, 0, sdt);
    IKRot1(-58.56, 51.44, 0, sdt);
    IKRot1(58.56, -51.44, 0, sdt);
    delay(tr2);

    IKRot1(57.95, 52.05, 0, sdt);
    IKRot1(-57.95, -52.05, 0, sdt);
    IKRot1(-57.95, 52.05, 0, sdt);
    IKRot1(57.95, -52.05, 0, sdt);
    delay(tr2);

    IKRot1(58.56, 51.44, 0, sdt);
    IKRot1(-58.56, -51.44, 0, sdt);
    IKRot1(-57.34, 52.66, 0, sdt);
    IKRot1(57.34, -52.66, 0, sdt);
    delay(tr2);

    IKRot1(59.11, 50.89, 0, sdt);
    IKRot1(-59.11, -50.89, 0, sdt);
    IKRot1(-56.79, 53.21, 0, sdt);
    IKRot1(56.79, -53.21, 0, sdt);
    delay(tr2);

    IKRot1(59.57, 50.43, 0, sdt);
    IKRot1(-59.57, -50.43, 0, sdt);
    IKRot1(-56.33, 53.67, 0, sdt);
    IKRot1(56.33, -53.67, 0, sdt);
    delay(tr2);

    IKRot1(59.89, 50.11, 0, sdt);
    IKRot1(-59.89, -50.11, 0, sdt);
    IKRot1(-56.01, 53.99, 0, sdt);
    IKRot1(56.01, -53.99, 0, sdt);
    delay(tr2);

    ///////////////////////////////////////////
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    IKRot1(-55.9, 54.1, 0, sdt);
    IKRot1(55.9, -54.1, 0, sdt);
    delay(tr2);

    IKRot1(59.26, 50.74, 8.33, sdt);
    IKRot1(-59.26, -50.74, 8.33, sdt);
    IKRot1(-55.6, 54.4, 0, sdt);
    IKRot1(55.6, -54.4, 0, sdt);
    delay(tr2);

    IKRot1(57.41, 52.59, 13.33, sdt);
    IKRot1(-57.41, -52.59, 13.33, sdt);
    IKRot1(-55.3, 54.7, 0, sdt);
    IKRot1(55.3, -54.7, 0, sdt);
    delay(tr2);
    movecounter = 0;
  }
}

void rotLeftK1(float sdt) { //Default 10 derajat
  movecounter++;
  if (movecounter == 1) {
    IKRot1(55, -55, 0, sdt);
    IKRot1(-55, 55, 0, sdt);
    IKRot1(55, 55, 15, sdt);
    IKRot1(-55, -55, 15, sdt);
    delay(tr2);
    /////////////////////Movecounter 1////////////////
    IKRot1(55.3, -54.7, 0, sdt);
    IKRot1(-55.3, 54.7, 0, sdt);
    IKRot1(57.41, 52.59, 13.33, sdt);
    IKRot1(-57.41, -52.59, 13.33, sdt);
    delay(tr2);

    IKRot1(55.6, -54.4, 0, sdt);
    IKRot1(-55.6, 54.4, 0, sdt);
    IKRot1(59.26, 50.74, 8.33, sdt);
    IKRot1(-59.26, -50.74, 8.33, sdt);
    delay(tr2);

    IKRot1(55.7, -54.3, 0, sdt);
    IKRot1(-55.7, 54.3, 0, sdt);
    IKRot1(59.6, 50.4, 4.85, sdt);
    IKRot1(-59.6, -50.4, 4.85, sdt);
    delay(tr2);

    IKRot1(55.8, -54.2, 0, sdt);
    IKRot1(-55.8, 54.2, 0, sdt);
    IKRot1(59.72, 50.28, 2.3, sdt);
    IKRot1(-59.72, -50.28, 2.3, sdt);
    delay(tr2);

    IKRot1(55.9, -54.1, 0, sdt);
    IKRot1(-55.9, 54.1, 0, sdt);
    IKRot1(60, 50, 0, sdt);
    IKRot1(-60, -50, 0, sdt);
    delay(tr2);

    IKRot1(56.01, -53.99, 0, sdt);
    IKRot1(-56.01, 53.99, 0, sdt);
    IKRot1(59.89, 50.11, 0, sdt);
    IKRot1(-59.89, -50.11, 0, sdt);
    delay(tr2);

    IKRot1(56.33, -53.67, 0, sdt);
    IKRot1(-56.33, 53.67, 0, sdt);
    IKRot1(59.57, 50.43, 0, sdt);
    IKRot1(-59.57, -50.43, 0, sdt);
    delay(tr2);

    IKRot1(56.79, -53.21, 0, sdt);
    IKRot1(-56.79, 53.21, 0, sdt);
    IKRot1(59.11, 50.89, 0, sdt);
    IKRot1(-59.11, -50.89, 0, sdt);
    delay(tr2);

    IKRot1(57.34, -52.66, 0, sdt);
    IKRot1(-57.34, 52.66, 0, sdt);
    IKRot1(58.56, 51.44, 0, sdt);
    IKRot1(-58.56, -51.44, 0, sdt);
    delay(tr2);

    IKRot1(57.95, -52.05, 0, sdt);
    IKRot1(-57.95, 52.05, 0, sdt);
    IKRot1(57.95, 52.05, 0, sdt);
    IKRot1(-57.95, -52.05, 0, sdt);
    delay(tr2);

    IKRot1(58.56, -51.44, 0, sdt);
    IKRot1(-58.56, 51.44, 0, sdt);
    IKRot1(57.34, 52.66, 0, sdt);
    IKRot1(-57.34, -52.66, 0, sdt);
    delay(tr2);

    IKRot1(59.11, -50.89, 0, sdt);
    IKRot1(-59.11, 50.89, 0, sdt);
    IKRot1(56.79, 53.21, 0, sdt);
    IKRot1(-56.79, -53.21, 0, sdt);
    delay(tr2);

    IKRot1(59.57, -50.43, 0, sdt);
    IKRot1(-59.57, 50.43, 0, sdt);
    IKRot1(56.33, 53.67, 0, sdt);
    IKRot1(-56.33, -53.67, 0, sdt);
    delay(tr2);

    IKRot1(59.89, -50.11, 0, sdt);
    IKRot1(-59.89, 50.11, 0, sdt);
    IKRot1(56.01, 53.99, 0, sdt);
    IKRot1(-56.01, -53.99, 0, sdt);
    delay(tr2);

    IKRot1(60, -50, 0, sdt);
    IKRot1(-60, 50, 0, sdt);
    IKRot1(55.9, 54.1, 0, sdt);
    IKRot1(-55.9, -54.1, 0, sdt);
    delay(tr2);

    IKRot1(59.26, -50.74, 8.33, sdt);
    IKRot1(-59.26, 50.74, 8.33, sdt);
    IKRot1(55.6, 54.4, 0, sdt);
    IKRot1(-55.6, -54.4, 0, sdt);
    delay(tr2);

    IKRot1(57.41, -52.59, 13.33, sdt);
    IKRot1(-57.41, 52.59, 13.33, sdt);
    IKRot1(55.3, 54.7, 0, sdt);
    IKRot1(-55.3, -54.7, 0, sdt);
    delay(tr2);
    //////////////////////////////////////////////
  }
  else if (movecounter == 2) {
    IKRot1(55, -55, 15, sdt);
    IKRot1(-55, 55, 15, sdt);
    IKRot1(55, 55, 0, sdt);
    IKRot1(-55, -55, 0, sdt);
    delay(tr2);
    //////////////////Movecounter 2////////////////////
    IKRot1(52.59, -57.41, 13.33, sdt);
    IKRot1(-52.59, 57.41, 13.33, sdt);
    IKRot1(54.7, 55.3, 0, sdt);
    IKRot1(-54.7, -55.3, 0, sdt);
    delay(tr2);

    IKRot1(50.74, -59.26, 8.33, sdt);
    IKRot1(-50.74, 59.26, 8.33, sdt);
    IKRot1(54.4, 55.6, 0, sdt);
    IKRot1(-54.4, -55.6, 0, sdt);
    delay(tr2);

    IKRot1(50.4, -59.6, 4.85, sdt);
    IKRot1(-50.4, 59.6, 4.85, sdt);
    IKRot1(54.3, 55.7, 0, sdt);
    IKRot1(-54.3, -55.7, 0, sdt);
    delay(tr2);

    IKRot1(50.28, -59.72, 2.3, sdt);
    IKRot1(-50.28, 59.72, 2.3, sdt);
    IKRot1(54.2, 55.8, 0, sdt);
    IKRot1(-54.2, -55.8, 0, sdt);
    delay(tr2);

    IKRot1(50, -60, 0, sdt);
    IKRot1(-50, 60, 0, sdt);
    IKRot1(54.1, 55.9, 0, sdt);
    IKRot1(-54.1, -55.9, 0, sdt);
    delay(tr2);

    IKRot1(50.11, -59.89, 0, sdt);
    IKRot1(-50.11, 59.89, 0, sdt);
    IKRot1(53.99, 56.01, 0, sdt);
    IKRot1(-53.99, -56.01, 0, sdt);
    delay(tr2);

    IKRot1(50.43, -59.57, 0, sdt);
    IKRot1(-50.43, 59.57, 0, sdt);
    IKRot1(53.67, 56.33, 0, sdt);
    IKRot1(-53.67, -56.33, 0, sdt);
    delay(tr2);

    IKRot1(50.89, -59.11, 0, sdt);
    IKRot1(-50.89, 59.11, 0, sdt);
    IKRot1(53.21, 56.79, 0, sdt);
    IKRot1(-53.21, -56.79, 0, sdt);
    delay(tr2);

    IKRot1(51.44, -58.56, 0, sdt);
    IKRot1(-51.44, 58.56, 0, sdt);
    IKRot1(52.66, 57.34, 0, sdt);
    IKRot1(-52.66, -57.34, 0, sdt);
    delay(tr2);

    IKRot1(52.05, -57.95, 0, sdt);
    IKRot1(-52.05, 57.95, 0, sdt);
    IKRot1(52.05, 57.95, 0, sdt);
    IKRot1(-52.05, -57.95, 0, sdt);
    delay(tr2);

    IKRot1(52.66, -57.34, 0, sdt);
    IKRot1(-52.66, 57.34, 0, sdt);
    IKRot1(51.44, 58.56, 0, sdt);
    IKRot1(-51.44, -58.56, 0, sdt);
    delay(tr2);

    IKRot1(53.21, -56.79, 0, sdt);
    IKRot1(-53.21, 56.79, 0, sdt);
    IKRot1(50.89, 59.11, 0, sdt);
    IKRot1(-50.89, -59.11, 0, sdt);
    delay(tr2);

    IKRot1(53.67, -56.33, 0, sdt);
    IKRot1(-53.67, 56.33, 0, sdt);
    IKRot1(50.43, 59.57, 0, sdt);
    IKRot1(-50.43, -59.57, 0, sdt);
    delay(tr2);

    IKRot1(53.99, -56.01, 0, sdt);
    IKRot1(-53.99, 56.01, 0, sdt);
    IKRot1(50.11, 59.89, 0, sdt);
    IKRot1(-50.11, -59.89, 0, sdt);
    delay(tr2);

    IKRot1(54.1, -55.9, 0, sdt);
    IKRot1(-54.1, 55.9, 0, sdt);
    IKRot1(50, 60, 0, sdt);
    IKRot1(-50, -60, 0, sdt);
    delay(tr2);

    IKRot1(54.40, -55.60, 0, sdt);
    IKRot1(-54.40, 55.60, 0, sdt);
    IKRot1(50.74, 59.26, 8.33, sdt);
    IKRot1(-50.74, -59.26, 8.33, sdt);
    delay(tr2);

    IKRot1(54.7, -55.3, 0, sdt);
    IKRot1(-54.7, 55.3, 0, sdt);
    IKRot1(52.59, 57.41, 13.33, sdt);
    IKRot1(-52.59, -57.41, 13.33, sdt);
    delay(tr2);
    movecounter = 0;
  }
}

void majubatu(float lbr) { //Gerakan lambat naik 3.5 cm
  arahgerak = true;
  height = -75;
  height2 = -75;
  movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 23, lbr);
    BL(-55, -55, 23, lbr);
    FL(-55, 55, 0, lbr);
    BR(55, -55, 0, lbr);
    delay(tbk);

    FR(69.44, 55, 15, lbr);
    BL(-40.56, -55, 15, lbr);
    FL(-52.11, 55, 0, lbr);
    BR(57.89, -55, 0, lbr);
    delay(tbk);

    FR(80.56, 55, 5, lbr);
    BL(-29.44, -55, 5, lbr);
    FL(-49.89, 55, 0, lbr);
    BR(60.11, -55, 0, lbr);
    delay(tbk);
    ////////////////////////////////////////////////////////
    FR(85.00, 55.00, 0.00, lbr);
    BL(-25.00, -55.00, 0.00, lbr);
    FL(-49.00, 55.00, 0.00, lbr);
    BR(61.00, -55.00, 0.00, lbr);
    delay(tbk);


    FR(84.53, 55.00, 0.00, lbr);
    BL(-25.47, -55.00, 0.00, lbr);
    FL(-48.53, 55.00, 0.00, lbr);
    BR(61.47, -55.00, 0.00, lbr);
    delay(tbk);


    FR(83.22, 55.00, 0.00, lbr);
    BL(-26.78, -55.00, 0.00, lbr);
    FL(-47.22, 55.00, 0.00, lbr);
    BR(62.78, -55.00, 0.00, lbr);
    delay(tbk);


    FR(81.25, 55.00, 0.00, lbr);
    BL(-28.75, -55.00, 0.00, lbr);
    FL(-45.25, 55.00, 0.00, lbr);
    BR(64.75, -55.00, 0.00, lbr);
    delay(tbk);


    FR(78.78, 55.00, 0.00, lbr);
    BL(-31.22, -55.00, 0.00, lbr);
    FL(-42.78, 55.00, 0.00, lbr);
    BR(67.22, -55.00, 0.00, lbr);
    delay(tbk);


    FR(75.97, 55.00, 0.00, lbr);
    BL(-34.03, -55.00, 0.00, lbr);
    FL(-39.97, 55.00, 0.00, lbr);
    BR(70.03, -55.00, 0.00, lbr);
    delay(tbk);


    FR(73.00, 55.00, 0.00, lbr);
    BL(-37.00, -55.00, 0.00, lbr);
    FL(-37.00, 55.00, 0.00, lbr);
    BR(73.00, -55.00, 0.00, lbr);
    delay(tbk);


    FR(70.03, 55.00, 0.00, lbr);
    BL(-39.97, -55.00, 0.00, lbr);
    FL(-34.03, 55.00, 0.00, lbr);
    BR(75.97, -55.00, 0.00, lbr);
    delay(tbk);


    FR(67.22, 55.00, 0.00, lbr);
    BL(-42.78, -55.00, 0.00, lbr);
    FL(-31.22, 55.00, 0.00, lbr);
    BR(78.78, -55.00, 0.00, lbr);
    delay(tbk);


    FR(64.75, 55.00, 0.00, lbr);
    BL(-45.25, -55.00, 0.00, lbr);
    FL(-28.75, 55.00, 0.00, lbr);
    BR(81.25, -55.00, 0.00, lbr);
    delay(tbk);


    FR(62.78, 55.00, 0.00, lbr);
    BL(-47.22, -55.00, 0.00, lbr);
    FL(-26.78, 55.00, 0.00, lbr);
    BR(83.22, -55.00, 0.00, lbr);
    delay(tbk);


    FR(61.47, 55.00, 0.00, lbr);
    BL(-48.53, -55.00, 0.00, lbr);
    FL(-25.47, 55.00, 0.00, lbr);
    BR(84.53, -55.00, 0.00, lbr);
    delay(tbk);


    FR(61.00, 55.00, 0.00, lbr);
    BL(-49.00, -55.00, 0.00, lbr);
    FL(-25.00, 55.00, 0.00, lbr);
    BR(85.00, -55.00, 0.00, lbr);
    delay(tbk);
    /////////////////////////////////////////////
    FR(60.11, 55, 0, lbr);
    BL(-49.89, -55, 0, lbr);
    FL(-29.44, 55, 5, lbr);
    BR(80.56, -55, 5, lbr);
    delay(tbk);

    FR(57.89, 55, 0, lbr);
    BL(-52.11, -55, 0, lbr);
    FL(-40.56, 55, 15, lbr);
    BR(69.44, -55, 15, lbr);
    delay(tbk);
  }
  else if (movecounter == 2) {
    FR(55, 55, 0, lbr);
    BL(-55, -55, 0, lbr);
    FL(-55, 55, 23, lbr);
    BR(55, -55, 23, lbr);
    delay(tbk);

    FR(52.11, 55, 0, lbr);
    BL(-57.89, -55, 0, lbr);
    FL(-69.44, 55, 15, lbr);
    BR(40.56, -55, 15, lbr);
    delay(tbk);

    FR(49.89, 55, 0, lbr);
    BL(-60.11, -55, 0, lbr);
    FL(-80.56, 55, 5, lbr);
    BR(29.44, -55, 5, lbr);
    delay(tbk);
    //////////////////////////////////////////////
    FR(49.00, 55.00, 0.00, lbr);
    BL(-61.00, -55.00, 0.00, lbr);
    FL(-85.00, 55.00, 0.00, lbr);
    BR(25.00, -55.00, 0.00, lbr);
    delay(tbk);


    FR(48.53, 55.00, 0.00, lbr);
    BL(-61.47, -55.00, 0.00, lbr);
    FL(-84.53, 55.00, 0.00, lbr);
    BR(25.47, -55.00, 0.00, lbr);
    delay(tbk);


    FR(47.22, 55.00, 0.00, lbr);
    BL(-62.78, -55.00, 0.00, lbr);
    FL(-83.22, 55.00, 0.00, lbr);
    BR(26.78, -55.00, 0.00, lbr);
    delay(tbk);


    FR(45.25, 55.00, 0.00, lbr);
    BL(-64.75, -55.00, 0.00, lbr);
    FL(-81.25, 55.00, 0.00, lbr);
    BR(28.75, -55.00, 0.00, lbr);
    delay(tbk);


    FR(42.78, 55.00, 0.00, lbr);
    BL(-67.22, -55.00, 0.00, lbr);
    FL(-78.78, 55.00, 0.00, lbr);
    BR(31.22, -55.00, 0.00, lbr);
    delay(tbk);


    FR(39.97, 55.00, 0.00, lbr);
    BL(-70.03, -55.00, 0.00, lbr);
    FL(-75.97, 55.00, 0.00, lbr);
    BR(34.03, -55.00, 0.00, lbr);
    delay(tbk);


    FR(37.00, 55.00, 0.00, lbr);
    BL(-73.00, -55.00, 0.00, lbr);
    FL(-73.00, 55.00, 0.00, lbr);
    BR(37.00, -55.00, 0.00, lbr);
    delay(tbk);


    FR(34.03, 55.00, 0.00, lbr);
    BL(-75.97, -55.00, 0.00, lbr);
    FL(-70.03, 55.00, 0.00, lbr);
    BR(39.97, -55.00, 0.00, lbr);
    delay(tbk);


    FR(31.22, 55.00, 0.00, lbr);
    BL(-78.78, -55.00, 0.00, lbr);
    FL(-67.22, 55.00, 0.00, lbr);
    BR(42.78, -55.00, 0.00, lbr);
    delay(tbk);


    FR(28.75, 55.00, 0.00, lbr);
    BL(-81.25, -55.00, 0.00, lbr);
    FL(-64.75, 55.00, 0.00, lbr);
    BR(45.25, -55.00, 0.00, lbr);
    delay(tbk);


    FR(26.78, 55.00, 0.00, lbr);
    BL(-83.22, -55.00, 0.00, lbr);
    FL(-62.78, 55.00, 0.00, lbr);
    BR(47.22, -55.00, 0.00, lbr);
    delay(tbk);


    FR(25.47, 55.00, 0.00, lbr);
    BL(-84.53, -55.00, 0.00, lbr);
    FL(-61.47, 55.00, 0.00, lbr);
    BR(48.53, -55.00, 0.00, lbr);
    delay(tbk);


    FR(25.00, 55.00, 0.00, lbr);
    BL(-85.00, -55.00, 0.00, lbr);
    FL(-61.00, 55.00, 0.00, lbr);
    BR(49.00, -55.00, 0.00, lbr);
    delay(tbk);
    /////////////////////////////////////////////
    FR(29.44, 55, 5, lbr);
    BL(-80.56, -55, 5, lbr);
    FL(-60.11, 55, 0, lbr);
    BR(49.89, -55, 0, lbr);
    delay(tbk);

    FR(40.56, 55, 15, lbr);
    BL(-69.44, -55, 15, lbr);
    FL(-57.89, 55, 0, lbr);
    BR(52.11, -55, 0, lbr);
    delay(tbk);
    movecounter = 0;
  }
}

void mundurpecahV2(float lbr) {
  arahgerak = false;
  height = -80;
  height2 = -80;
  movecounter++;
  if (movecounter == 1) {
    FR(55.00, 55.00, 30.00, lbr);
    BL(-55.00, -55.00, 30.00, lbr);
    FL(-55.00, 55.00, 0.00, lbr);
    BR(55.00, -55.00, 0.00, lbr);
    delay(tp);


    FR(42.96, 55.00, 26.67, lbr);
    BL(-67.04, -55.00, 26.67, lbr);
    FL(-57.89, 55.00, 0.00, lbr);
    BR(52.11, -55.00, 0.00, lbr);
    delay(tp);


    FR(33.70, 55.00, 16.67, lbr);
    BL(-76.30, -55.00, 16.67, lbr);
    FL(-60.11, 55.00, 0.00, lbr);
    BR(49.89, -55.00, 0.00, lbr);
    delay(tp);
    ////////////////////////////////////////
    FR(30.00, 55.00, 0.00, lbr);
    BL(-80.00, -55.00, 0.00, lbr);
    FL(-61.00, 55.00, 0.00, lbr);
    BR(49.00, -55.00, 0.00, lbr);
    delay(tp);


    FR(30.37, 55.00, 0.00, lbr);
    BL(-79.63, -55.00, 0.00, lbr);
    FL(-61.37, 55.00, 0.00, lbr);
    BR(48.63, -55.00, 0.00, lbr);
    delay(tp);


    FR(31.41, 55.00, 0.00, lbr);
    BL(-78.59, -55.00, 0.00, lbr);
    FL(-62.41, 55.00, 0.00, lbr);
    BR(47.59, -55.00, 0.00, lbr);
    delay(tp);


    FR(32.97, 55.00, 0.00, lbr);
    BL(-77.03, -55.00, 0.00, lbr);
    FL(-63.97, 55.00, 0.00, lbr);
    BR(46.03, -55.00, 0.00, lbr);
    delay(tp);


    FR(34.93, 55.00, 0.00, lbr);
    BL(-75.07, -55.00, 0.00, lbr);
    FL(-65.93, 55.00, 0.00, lbr);
    BR(44.07, -55.00, 0.00, lbr);
    delay(tp);


    FR(37.15, 55.00, 0.00, lbr);
    BL(-72.85, -55.00, 0.00, lbr);
    FL(-68.15, 55.00, 0.00, lbr);
    BR(41.85, -55.00, 0.00, lbr);
    delay(tp);


    FR(39.50, 55.00, 0.00, lbr);
    BL(-70.50, -55.00, 0.00, lbr);
    FL(-70.50, 55.00, 0.00, lbr);
    BR(39.50, -55.00, 0.00, lbr);
    delay(tp);


    FR(41.85, 55.00, 0.00, lbr);
    BL(-68.15, -55.00, 0.00, lbr);
    FL(-72.85, 55.00, 0.00, lbr);
    BR(37.15, -55.00, 0.00, lbr);
    delay(tp);


    FR(44.07, 55.00, 0.00, lbr);
    BL(-65.93, -55.00, 0.00, lbr);
    FL(-75.07, 55.00, 0.00, lbr);
    BR(34.93, -55.00, 0.00, lbr);
    delay(tp);


    FR(46.03, 55.00, 0.00, lbr);
    BL(-63.97, -55.00, 0.00, lbr);
    FL(-77.03, 55.00, 0.00, lbr);
    BR(32.97, -55.00, 0.00, lbr);
    delay(tp);


    FR(47.59, 55.00, 0.00, lbr);
    BL(-62.41, -55.00, 0.00, lbr);
    FL(-78.59, 55.00, 0.00, lbr);
    BR(31.41, -55.00, 0.00, lbr);
    delay(tp);


    FR(48.63, 55.00, 0.00, lbr);
    BL(-61.37, -55.00, 0.00, lbr);
    FL(-79.63, 55.00, 0.00, lbr);
    BR(30.37, -55.00, 0.00, lbr);
    delay(tp);


    FR(49.00, 55.00, 0.00, lbr);
    BL(-61.00, -55.00, 0.00, lbr);
    FL(-80.00, 55.00, 0.00, lbr);
    BR(30.00, -55.00, 0.00, lbr);
    delay(tp);
    //////////////////////////////////////////////

    FR(49.89, 55.00, 0.00, lbr);
    BL(-60.11, -55.00, 0.00, lbr);
    FL(-76.30, 55.00, 16.67, lbr);
    BR(33.70, -55.00, 16.67, lbr);
    delay(tp);


    FR(52.11, 55.00, 0.00, lbr);
    BL(-57.89, -55.00, 0.00, lbr);
    FL(-67.04, 55.00, 26.67, lbr);
    BR(42.96, -55.00, 26.67, lbr);
    delay(tp);
  }
  else if (movecounter == 2) {
    FR(55.00, 55.00, 0.00, lbr);
    BL(-55.00, -55.00, 0.00, lbr);
    FL(-55.00, 55.00, 30.00, lbr);
    BR(55.00, -55.00, 30.00, lbr);
    delay(tp);


    FR(57.89, 55.00, 0.00, lbr);
    BL(-52.11, -55.00, 0.00, lbr);
    FL(-42.96, 55.00, 26.67, lbr);
    BR(67.04, -55.00, 26.67, lbr);
    delay(tp);


    FR(60.11, 55.00, 0.00, lbr);
    BL(-49.89, -55.00, 0.00, lbr);
    FL(-33.70, 55.00, 16.67, lbr);
    BR(76.30, -55.00, 16.67, lbr);
    delay(tp);

    ///////////////////////////////////////
    FR(61.00, 55.00, 0.00, lbr);
    BL(-49.00, -55.00, 0.00, lbr);
    FL(-30.00, 55.00, 0.00, lbr);
    BR(80.00, -55.00, 0.00, lbr);
    delay(tp);


    FR(61.37, 55.00, 0.00, lbr);
    BL(-48.63, -55.00, 0.00, lbr);
    FL(-30.37, 55.00, 0.00, lbr);
    BR(79.63, -55.00, 0.00, lbr);
    delay(tp);


    FR(62.41, 55.00, 0.00, lbr);
    BL(-47.59, -55.00, 0.00, lbr);
    FL(-31.41, 55.00, 0.00, lbr);
    BR(78.59, -55.00, 0.00, lbr);
    delay(tp);


    FR(63.97, 55.00, 0.00, lbr);
    BL(-46.03, -55.00, 0.00, lbr);
    FL(-32.97, 55.00, 0.00, lbr);
    BR(77.03, -55.00, 0.00, lbr);
    delay(tp);


    FR(65.93, 55.00, 0.00, lbr);
    BL(-44.07, -55.00, 0.00, lbr);
    FL(-34.93, 55.00, 0.00, lbr);
    BR(75.07, -55.00, 0.00, lbr);
    delay(tp);


    FR(68.15, 55.00, 0.00, lbr);
    BL(-41.85, -55.00, 0.00, lbr);
    FL(-37.15, 55.00, 0.00, lbr);
    BR(72.85, -55.00, 0.00, lbr);
    delay(tp);


    FR(70.50, 55.00, 0.00, lbr);
    BL(-39.50, -55.00, 0.00, lbr);
    FL(-39.50, 55.00, 0.00, lbr);
    BR(70.50, -55.00, 0.00, lbr);
    delay(tp);


    FR(72.85, 55.00, 0.00, lbr);
    BL(-37.15, -55.00, 0.00, lbr);
    FL(-41.85, 55.00, 0.00, lbr);
    BR(68.15, -55.00, 0.00, lbr);
    delay(tp);


    FR(75.07, 55.00, 0.00, lbr);
    BL(-34.93, -55.00, 0.00, lbr);
    FL(-44.07, 55.00, 0.00, lbr);
    BR(65.93, -55.00, 0.00, lbr);
    delay(tp);


    FR(77.03, 55.00, 0.00, lbr);
    BL(-32.97, -55.00, 0.00, lbr);
    FL(-46.03, 55.00, 0.00, lbr);
    BR(63.97, -55.00, 0.00, lbr);
    delay(tp);


    FR(78.59, 55.00, 0.00, lbr);
    BL(-31.41, -55.00, 0.00, lbr);
    FL(-47.59, 55.00, 0.00, lbr);
    BR(62.41, -55.00, 0.00, lbr);
    delay(tp);


    FR(79.63, 55.00, 0.00, lbr);
    BL(-30.37, -55.00, 0.00, lbr);
    FL(-48.63, 55.00, 0.00, lbr);
    BR(61.37, -55.00, 0.00, lbr);
    delay(tp);


    FR(80.00, 55.00, 0.00, lbr);
    BL(-30.00, -55.00, 0.00, lbr);
    FL(-49.00, 55.00, 0.00, lbr);
    BR(61.00, -55.00, 0.00, lbr);
    delay(tp);
    /////////////////////////////////////////////////
    FR(76.30, 55.00, 16.67, lbr);
    BL(-33.70, -55.00, 16.67, lbr);
    FL(-49.89, 55.00, 0.00, lbr);
    BR(60.11, -55.00, 0.00, lbr);
    delay(tp);


    FR(67.04, 55.00, 26.67, lbr);
    BL(-42.96, -55.00, 26.67, lbr);
    FL(-52.11, 55.00, 0.00, lbr);
    BR(57.89, -55.00, 0.00, lbr);
    delay(tp);
    movecounter = 0;
  }
}
