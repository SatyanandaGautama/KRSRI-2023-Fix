void kananpecah1(float lbr = 0) { //Gerakan lambat, Sudut Belok = 5
  FR(55, 75, 0, 0);
  BL(-55, -35, 0, 0);
  FL(-55, 64.63, 0, 0);
  BR(55, -45.37, 0, 0);
  delay(tp);

  FR(55, 74.64, 0, lbr);
  BL(-55, -35.36, 0, lbr);
  FL(-55, 67.46, 0, lbr);
  BR(55, -42.54, 0, lbr);
  delay(tp);

  FR(55, 73.63, 0, lbr);
  BL(-55, -36.37, 0, lbr);
  FL(-55, 69.95, 0, lbr);
  BR(55, -40.05, 0, lbr);
  delay(tp);

  FR(55, 72.04, 0, lbr);
  BL(-55, -37.96, 0, lbr);
  FL(-55, 72.04, 0, lbr);
  BR(55, -37.96, 0, lbr);
  delay(tp);

  /////////////////////////////////////
  FR(55, 69.95, 0, lbr);
  BL(-55, -40.05, 0, lbr);
  FL(-55, 73.63, 0, lbr);
  BR(55, -36.37, 0, lbr);
  delay(tp);

  FR(55, 67.46, 0, lbr);
  BL(-55, -42.54, 0, lbr);
  FL(-55, 74.64, 0, lbr);
  BR(55, -35.36, 0, lbr);
  delay(tp);

  FR(55, 64.63, 0, lbr);
  BL(-55, -45.37, 0, lbr);
  FL(-55, 75, 0, lbr);
  BR(55, -35, 0, lbr);
  delay(tp);

  FR(55, 61.56, 0, lbr);
  BL(-55, -48.44, 0, lbr);
  FL(-55, 72.04, 19.44, lbr);
  BR(55, -37.96, 19.44, lbr);
  delay(tp);

  FR(55, 58.32, 0, lbr);
  BL(-55, -51.68, 0, lbr);
  FL(-55, 64.63, 31.11, lbr);
  BR(55, -45.37, 31.11, lbr);
  delay(tp);

  FR(55, 55, 0, lbr);
  BL(-55, -55, 0, lbr);
  FL(-55, 55, 35, lbr);
  BR(55, -55, 35, lbr);
  delay(tp);

  FR(55, 51.68, 0, lbr);
  BL(-55, -58.32, 0, lbr);
  FL(-55, 45.37, 31.11, lbr);
  BR(55, -64.63, 31.11, lbr);
  delay(tp);

  FR(55, 48.44, 0, 0);
  BL(-55, -61.56, 0, lbr);
  FL(-55, 37.96, 19.44, lbr);
  BR(55, -72.04, 19.44, lbr);
  delay(tp);

  FR(55, 45.37, 0, lbr);
  BL(-55, -64.63, 0, lbr);
  FL(-55, 35, 0, lbr);
  BR(55, -75, 0, lbr);
  delay(tp);

  FR(55, 42.54, 0, lbr);
  BL(-55, -67.46, 0, lbr);
  FL(-55, 35.36, 0, lbr);
  BR(55, -74.64, 0, lbr);
  delay(tp);

  FR(55, 40.05, 0, lbr);
  BL(-55, -69.95, 0, lbr);
  FL(-55, 36.37, 0, lbr);
  BR(55, -73.63, 0, lbr);
  delay(tp);

  FR(55, 37.96, 0, lbr);
  BL(-55, -72.04, 0, lbr);
  FL(-55, 37.96, 0, lbr);
  BR(55, -72.04, 0, lbr);
  delay(tp);

  FR(55, 36.37, 0, lbr);
  BL(-55, -73.63, 0, lbr);
  FL(-55, 40.05, 0, lbr);
  BR(55, -69.95, 0, lbr);
  delay(tp);

  FR(55, 35.36, 0, lbr);
  BL(-55, -74.64, 0, lbr);
  FL(-55, 42.54, 0, lbr);
  BR(55, -67.46, 0, lbr);
  delay(tp);

  FR(55, 35, 0, lbr);
  BL(-55, -75, 0, lbr);
  FL(-55, 45.37, 0, lbr);
  BR(55, -64.63, 0, lbr);
  delay(tp);

  FR(55, 37.96, 19.44, lbr);
  BL(-55, -72.04, 19.44, lbr);
  FL(-55, 48.44, 0, lbr);
  BR(55, -61.56, 0, lbr);
  delay(tp);

  FR(55, 45.37, 31.11, lbr);
  BL(-55, -64.63, 31.11, lbr);
  FL(-55, 51.68, 0, lbr);
  BR(55, -58.32, 0, lbr);
  delay(tp);

  FR(55, 55, 35, lbr);
  BL(-55, -55, 35, lbr);
  FL(-55, 55, 0, lbr);
  BR(55, -55, 0, lbr);
  delay(tp);

  FR(55, 64.43, 31.11, lbr);
  BL(-55, -45.37, 31.11, lbr);
  FL(-55, 58.32, 0, lbr);
  BR(55, -51.68, 0, lbr);
  delay(tp);

  FR(55, 72.04, 19.44, lbr);
  BL(-55, -37.96, 19.44, lbr);
  FL(-55, 61.56, 0, lbr);
  BR(55, -48.44, 0, lbr);
  delay(tp);
}

void kananStart(float lbr) {
  arahgerak = false;
  movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 15, lbr);
    BL(-55, -55, 15, lbr);
    FL(-55, 55, 0, lbr);
    BR(55, -55, 0, lbr);
    delay(tp);

    FR(55, 69.44, 13.33, lbr);
    BL(-55, -40.56, 13.33, lbr);
    FL(-55, 59.98, 0, lbr);
    BR(55, -50, 0, lbr);
    delay(tp);

    FR(55, 80.56, 8.3, lbr);
    BL(-55, -29.44, 8.3, lbr);
    FL(-55, 64.84, 0, lbr);
    BR(55, -45.16, 0, lbr);
    delay(tp);

    FR(55, 85, 0, lbr);
    BL(-55, -25, 0, lbr);
    FL(-55, 69.44, 0, lbr);
    BR(55, -40.56, 0, lbr);
    delay(tp);

    FR(55, 84.47, 0, lbr);
    BL(-55, -25.53, 0, lbr);
    FL(-55, 73.68, 0, lbr);
    BR(55, -36.32, 0, lbr);
    delay(tp);

    FR(55, 82.84, 0, lbr);
    BL(-55, -27.06, 0, lbr);
    FL(-55, 77.43, 0, lbr);
    BR(55, -32.57, 0, lbr);
    delay(tp);

    FR(55, 80.56, 0, lbr);
    BL(-55, -29.44, 0, lbr);
    FL(-55, 80.56, 0, lbr);
    BR(55, -29.44, 0, lbr);
    delay(tp);

    FR(55, 77.43, 0, lbr);
    BL(-55, -32.57, 0, lbr);
    FL(-55, 82.94, 0, lbr);
    BR(55, -27.06, 0, lbr);
    delay(tp);

    FR(55, 73.68, 0, lbr);
    BL(-55, -36.32, 0, lbr);
    FL(-55, 84.47, 0, lbr);
    BR(55, -25.53, 0, lbr);
    delay(tp);

    FR(55, 69.44, 0, lbr);
    BL(-55, -40.56, 0, lbr);
    FL(-55, 85, 0, lbr);
    BR(55, -25, 0, lbr);
    delay(tp);

    FR(55, 64.84, 0,  lbr);
    BL(-55, -45.16, 0, lbr);
    FL(-55, 80.56, 8.33, lbr);
    BR(55, -29.44, 8.33, lbr);
    delay(tp);

    FR(55, 59.98, 0, lbr);
    BL(-55, -50, 0, lbr);
    FL(-55, 69.44, 13.33, lbr);
    BR(55, -40.56, 13.33, lbr);
    delay(tp);
  }
  else if (movecounter == 2) {
    FR(55, 55, 0, lbr);
    BL(-55, -55, 0, lbr);
    FL(-55, 55, 15, lbr);
    BR(55, -55, 15, lbr);
    delay(tp);

    FR(55, 50, 0, lbr);
    BL(-55, -59.98, 0, lbr);
    FL(-55, 40.56, 13.33, lbr);
    BR(55, -69.44, 13.33, lbr);
    delay(tp);

    FR(55, 45.16, 0, lbr);
    BL(-55, -64.84, 0, lbr);
    FL(-55, 29.44, 8.33, lbr);
    BR(55, -80.56, 8.33, lbr);
    delay(tp);

    FR(55, 40.56, 0, lbr);
    BL(-55, -69.44, 0, lbr);
    FL(-55, 25, 0, lbr);
    BR(55, -85, 0, lbr);
    delay(tp);

    FR(55, 36.32, 0, lbr);
    BL(-55, -73.68, 0, lbr);
    FL(-55, 25.53, 0, lbr);
    BR(55, -84.47, 0, lbr);
    delay(tp);

    FR(55, 32.57, 0, lbr);
    BL(-55, -77.43, 0, lbr);
    FL(-55, 27.06, 0, lbr);
    BR(55, -82.94, 0, lbr);
    delay(tp);

    FR(55, 29.44, 0, lbr);
    BL(-55, -80.56, 0, lbr);
    FL(-55, 29.44, 0, lbr);
    BR(55, -80.56, 0, lbr);
    delay(tp);

    FR(55, 27.06, 0, lbr);
    BL(-55, -82.94, 0, lbr);
    FL(-55, 32.57, 0, lbr);
    BR(55, -77.43, 0, lbr);
    delay(tp);

    FR(55, 25.53, 0, lbr);
    BL(-55, -84.47, 0, lbr);
    FL(-55, 36.32, 0, lbr);
    BR(55, -73.68, 0, lbr);
    delay(tp);

    FR(55, 25, 0, lbr);
    BL(-55, -85, 0, lbr);
    FL(-55, 40.56, 0, lbr);
    BR(55, -69.44, 0, lbr);
    delay(tp);

    FR(55, 29.44, 8.33, lbr);
    BL(-55, -80.56, 8.33, lbr);
    FL(-55, 45.16, 0, lbr);
    BR(55, -64.48, 0, lbr);
    delay(tp);

    FR(55, 40.56, 13.33, lbr);
    BL(-55, -69.44, 13.33, lbr);
    FL(-55, 50, 0, lbr);
    BR(55, -59.98, 0, lbr);
    delay(tp);
    movecounter = 0;
  }
}

void kanandikitK3() {
  movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 35, 0);
    BL(-55, -55, 35, 0);
    FL(-55, 55, 0, 0);
    BR(55, -55, 0, 0);
    delay(tk2);

    FR(55, 62.22, 31.11, 0);
    BL(-55, -47.78, 31.11, 0);
    FL(-55, 55.45, 0, 0);
    BR(55, -54.55, 0, 0);
    delay(tk2);

    FR(55, 67.78, 19.44, 0);
    BL(-55, -42.22, 19.44, 0);
    FL(-55, 55.9, 0, 0);
    BR(55, -54.1, 0, 0);
    delay(tk2);

    FR(55, 68.97, 11.85, 0);
    BL(-55, -41.03, 11.85, 0);
    FL(-55, 56.15, 0, 0);
    BR(55, -53.85, 0, 0);
    delay(tk2);

    FR(55, 69.73, 7.3, 0);
    BL(-55, -40.27, 7.3, 0);
    FL(-55, 56.25, 0, 0);
    BR(55, -53.75, 0, 0);
    delay(tk2);


    FR(55, 70, 0, 0);
    BL(-55, -40, 0, 0);
    FL(-55, 56.35, 0, 0);
    BR(55, -53.65, 0, 0);
    delay(tk2);

///////////////////////////////////////////////

    FR(55, 69.66, 0, 0);
    BL(-55, -40.34, 0, 0);
    FL(-55, 58.03, 0, 0);
    BR(55, -51.97, 0, 0);
    delay(tk2);

    FR(55, 68.72, 0, 0);
    BL(-55, -41.28, 0, 0);
    FL(-55, 58.97, 0, 0);
    BR(55, -51.03, 0, 0);
    delay(tk2);

    FR(55, 67.34, 0, 0);
    BL(-55, -42.66, 0, 0);
    FL(-55, 60.35, 0, 0);
    BR(55, -49.65, 0, 0);
    delay(tk2);
/////
    FR(55, 65.67, 0, 0);
    BL(-55, -44.33, 0, 0);
    FL(-55, 62.02, 0, 0);
    BR(55, -47.98, 0, 0);
    delay(tk2);

    FR(55, 63.84, 0, 0);
    BL(-55, -46.16, 0, 0);
    FL(-55, 63.84, 0, 0);
    BR(55, -46.16, 0, 0);
    delay(tk2);

    FR(55, 62.02, 0, 0);
    BL(-55, -47.98, 0, 0);
    FL(-55, 65.67, 0, 0);
    BR(55, -44.33, 0, 0);
    delay(tk2);

    FR(55, 60.35, 0, 0);
    BL(-55, -49.65, 0, 0);
    FL(-55, 67.34, 0, 0);
    BR(55, -42.66, 0, 0);
    delay(tk2);

    FR(55, 58.97, 0, 0);
    BL(-55, -51.03, 0, 0);
    FL(-55, 68.72, 0, 0);
    BR(55, -41.28, 0, 0);
    delay(tk2);

    FR(55, 57.35, 0, 0);
    BL(-55, -52.65, 0, 0);
    FL(-55, 69.66, 0, 0);
    BR(55, -40.34, 0, 0);
    delay(tk2);
    
///////////////////////////////////////////////
    FR(55, 56.35, 0, 0);
    BL(-55, -53.65, 0, 0);
    FL(-55, 70, 0, 0);
    BR(55, -40, 0, 0);
    delay(tk2);
//////////////////////////////////////////////

    FR(55, 55.9, 0, 0);
    BL(-55, -54.1, 0, 0);
    FL(-55, 67.78, 19.44, 0);
    BR(55, -42.22, 19.44, 0);
    delay(tk2);

    FR(55, 55.45, 0, 0);
    BL(-55, -54.55, 0, 0);
    FL(-55, 62.22, 31.11, 0);
    BR(55, -47.78, 31.11, 0);
    delay(tk2);
  }
  else if (movecounter == 2) {
    FR(55,  55, 0, 0);
    BL(-55, -55, 0, 0);
    FL(-55, 55, 35, 0);
    BR(55, -55, 35, 0);
    delay(tk2);

    FR(55, 54.55, 0, 0);
    BL(-55, -55.45, 0, 0);
    FL(-55, 47.78, 31.11, 0);
    BR(55, -62.22, 31.11, 0);
    delay(tk2);

    FR(55, 54.1, 0, 0);
    BL(-55, -55.9, 0, 0);
    FL(-55, 42.22, 19.44, 0);
    BR(55, -67.78, 19.44, 0);
    delay(tk2);

    FR(55, 53.85, 0, 0);
    BL(-55, -56.15, 0, 0);
    FL(-55, 41.03, 11.85, 0);
    BR(55, -68.97, 11.85, 0);
    delay(tk2);

    FR(55, 53.75, 0, 0);
    BL(-55, -56.25, 0, 0);
    FL(-55, 40.27, 7.3, 0);
    BR(55, -69.73, 7.3, 0);
    delay(tk2);

    FR(55, 53.65, 0, 0);
    BL(-55, -56.35, 0, 0);
    FL(-55, 40, 0, 0);
    BR(55, -70, 0, 0);
    delay(tk2);

///////////////////////////////////////////
    FR(55, 51.97, 0, 0);
    BL(-55, -58.03, 0, 0);
    FL(-55, 40.34, 0, 0);
    BR(55, -69.66, 0, 0);
    delay(tk2);

    FR(55, 51.03, 0, 0);
    BL(-55, -58.97, 0, 0);
    FL(-55, 41.28, 0, 0);
    BR(55, -68.72, 0, 0);
    delay(tk2);

    FR(55, 49.65, 0, 0);
    BL(-55, -60.35, 0, 0);
    FL(-55, 42.66, 0, 0);
    BR(55, -67.34, 0, 0);
    delay(tk2);

    FR(55, 47.98, 0, 0);
    BL(-55, -62.02, 0, 0);
    FL(-55, 44.33, 0, 0);
    BR(55, -65.67, 0, 0);
    delay(tk2);

    FR(55, 46.16, 0, 0);
    BL(-55, -63.84, 0, 0);
    FL(-55, 46.16, 0, 0);
    BR(55, -63.84, 0, 0);
    delay(tk2);

    FR(55, 44.33, 0, 0);
    BL(-55, -65.67, 0, 0);
    FL(-55, 47.98, 0, 0);
    BR(55, -62.02, 0, 0);
    delay(tk2);

    FR(55, 42.66, 0, 0);
    BL(-55, -67.34, 0, 0);
    FL(-55, 49.65, 0, 0);
    BR(55, -60.35, 0, 0);
    delay(tk2);

    FR(55, 41.28, 0, 0);
    BL(-55, -68.72, 0, 0);
    FL(-55, 51.03, 0, 0);
    BR(55, -58.97, 0, 0);
    delay(tk2);

    FR(55, 40.34, 0, 0);
    BL(-55, -69.66, 0, 0);
    FL(-55, 52.65, 0, 0);
    BR(55, -57.35, 0, 0);
    delay(tk2);

//////////////////////////////////////////

    FR(55, 40, 0, 0);
    BL(-55, -70, 0, 0);
    FL(-55, 53.65, 0, 0);
    BR(55, -56.35, 0, 0);
    delay(tk2);

    FR(55, 42.22, 19.44, 0);
    BL(-55, -67.78, 19.44, 0);
    FL(-55, 54.1, 0, 0);
    BR(55, -55.9, 0, 0);
    delay(tk2);

    FR(55, 47.78, 31.11, 0);
    BL(-55, -62.22, 31.11, 0);
    FL(-55, 54.55, 0, 0);
    BR(55, -55.45, 0, 0);
    delay(tk2);
    movecounter = 0;
  }
}

void kiribatu(float lbr) {
//  arahgerak = false;
  movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 35, lbr);
    BL(-55, -55, 35, lbr);
    FL(-55, 55, 0, lbr);
    BR(55, -55, 0, lbr);
    delay(tp);

    FR(55, 40.56, 31.11, lbr);
    BL(-55, -69.44, 31.11, lbr);
    FL(-55, 50, 0, lbr);
    BR(55, -59.98, 0, lbr);
    delay(tp);

    FR(55, 29.44, 19.44, lbr);
    BL(-55, -80.56, 19.44, lbr);
    FL(-55, 45.16, 0, lbr);
    BR(55, -64.84, 0, lbr);
    delay(tp);

    FR(55, 25, 0, lbr);
    BL(-55, -85, 0, lbr);
    FL(-55, 40.56, 0, lbr);
    BR(55, -69.44, 0, lbr);
    delay(tp);

    FR(55, 25.53, 0, lbr);
    BL(-55, -84.47, 0, lbr);
    FL(-55, 36.32, 0, lbr);
    BR(55, -73.68, 0, lbr);
    delay(tp);

    FR(55, 27.06, 0, lbr);
    BL(-55, -82.84, 0, lbr);
    FL(-55, 32.57, 0, lbr);
    BR(55, -77.43, 0, lbr);
    delay(tp);

    FR(55, 29.44, 0, lbr);
    BL(-55, -80.56, 0, lbr);
    FL(-55, 29.44, 0, lbr);
    BR(55, -80.56, 0, lbr);
    delay(tp);

    FR(55, 32.57, 0, lbr);
    BL(-55, -77.43, 0, lbr);
    FL(-55, 27.06, 0, lbr);
    BR(55, -82.94, 0, lbr);
    delay(tp);

    FR(55, 36.32, 0, lbr);
    BL(-55, -73.68, 0, lbr);
    FL(-55, 25.53, 0, lbr);
    BR(55, -84.47, 0, lbr);
    delay(tp);

    FR(55, 40.56, 0, lbr);
    BL(-55, -69.44, 0, lbr);
    FL(-55, 25, 0, lbr);
    BR(55, -85, 0, lbr);
    delay(tp);

    FR(55, 45.16, 0, lbr);
    BL(-55, -64.84, 0,  lbr);
    FL(-55, 29.44, 19.44, lbr);
    BR(55, -80.56, 19.44, lbr);
    delay(tp);

    FR(55, 50, 0, lbr);
    BL(-55, -59.98, 0, lbr);
    FL(-55, 40.56, 31.11, lbr);
    BR(55, -69.44, 31.11, lbr);
    delay(tp);
  }
  else if (movecounter == 2) {
    FR(55, 55, 0, lbr);
    BL(-55, -55, 0, lbr);
    FL(-55, 55, 35, lbr);
    BR(55, -55, 35, lbr);
    delay(tp);

    FR(55, 59.98, 0, lbr);
    BL(-55, -50, 0, lbr);
    FL(-55, 69.44, 31.11, lbr);
    BR(55, -40.56, 31.11, lbr);
    delay(tp);

    FR(55, 64.84, 0, lbr);
    BL(-55, -45.16, 0, lbr);
    FL(-55, 80.56, 19.44, lbr);
    BR(55, -29.44, 19.44, lbr);
    delay(tp);

    FR(55, 69.44, 0, lbr);
    BL(-55, -40.56, 0, lbr);
    FL(-55, 85, 0, lbr);
    BR(55, -25, 0, lbr);
    delay(tp);

    FR(55, 73.68, 0, lbr);
    BL(-55, -36.32, 0, lbr);
    FL(-55, 84.47, 0, lbr);
    BR(55, -25.53, 0, lbr);
    delay(tp);

    FR(55, 77.43, 0, lbr);
    BL(-55, -32.57, 0, lbr);
    FL(-55, 82.94, 0, lbr);
    BR(55, -27.06, 0, lbr);
    delay(tp);

    FR(55, 80.56, 0, lbr);
    BL(-55, -29.44, 0, lbr);
    FL(-55, 80.56, 0, lbr);
    BR(55, -29.44, 0, lbr);
    delay(tp);

    FR(55, 82.94, 0, lbr);
    BL(-55, -27.06, 0, lbr);
    FL(-55, 77.43, 0, lbr);
    BR(55, -32.57, 0, lbr);
    delay(tp);

    FR(55, 84.47, 0, lbr);
    BL(-55, -25.53, 0, lbr);
    FL(-55, 73.68, 0, lbr);
    BR(55, -36.32, 0, lbr);
    delay(tp);

    FR(55, 85, 0, lbr);
    BL(-55, -25, 0, lbr);
    FL(-55, 69.44, 0, lbr);
    BR(55, -40.56, 0, lbr);
    delay(tp);

    FR(55, 80.56, 19.44, lbr);
    BL(-55, -29.44, 19.44, lbr);
    FL(-55, 64.48, 0, lbr);
    BR(55, -45.16, 0, lbr);
    delay(tp);

    FR(55, 69.44, 31.11, lbr);
    BL(-55, -40.56, 31.11, lbr);
    FL(-55, 59.98, 0, lbr);
    BR(55, -50, 0, lbr);
    delay(tp);
    movecounter = 0;
  }
}

void kiridikitK3() {
movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 35, 0);
    BL(-55, -55, 35, 0);
    FL(-55, 55, 0, 0);
    BR(55, -55, 0, 0);
    delay(tk2);

    FR(55, 47.78, 31.11, 0);
    BL(-55, -62.22, 31.11, 0);
    FL(-55, 54.55, 0, 0);
    BR(55, -55.45, 0, 0);
    delay(tk2);

    FR(55, 42.22, 19.44, 0);
    BL(-55, -67.78, 19.44, 0);
    FL(-55, 54.1, 0, 0);
    BR(55, -55.9, 0, 0);
    delay(tk2);

    FR(55, 41.03, 11.85, 0);
    BL(-55, -68.97, 11.85, 0);
    FL(-55, 53.85, 0, 0);
    BR(55, -56.15, 0, 0);
    delay(tk2);

    FR(55, 40.27, 7.3, 0);
    BL(-55, -69.73,7.3, 0);
    FL(-55, 53.75, 0, 0);
    BR(55, -56.25, 0, 0);
    delay(tk2);

    FR(55, 40, 0, 0);
    BL(-55, -70, 0, 0);
    FL(-55, 53.65, 0, 0);
    BR(55, -56.35, 0, 0);
    delay(tk2);

///////////////////////////////////////////////

    FR(55, 40.34, 0, 0);
    BL(-55, -69.66, 0, 0);
    FL(-55, 51.97, 0, 0);
    BR(55, -58.03, 0, 0);
    delay(tk2);

    FR(55, 41.28, 0, 0);
    BL(-55, -68.72, 0, 0);
    FL(-55, 51.03, 0, 0);
    BR(55, -58.97, 0, 0);
    delay(tk2);

    FR(55, 42.66, 0, 0);
    BL(-55, -67.34, 0, 0);
    FL(-55, 49.65, 0, 0);
    BR(55, -60.35, 0, 0);
    delay(tk2);

    FR(55, 44.33, 0, 0);
    BL(-55, -65.67, 0, 0);
    FL(-55, 47.98, 0, 0);
    BR(55, -62.02, 0, 0);
    delay(tk2);

    FR(55, 46.16, 0, 0);
    BL(-55, -63.84, 0, 0);
    FL(-55, 46.16, 0, 0);
    BR(55, -63.84, 0, 0);
    delay(tk2);

    FR(55, 47.98, 0, 0);
    BL(-55, -62.02, 0, 0);
    FL(-55, 44.33, 0, 0);
    BR(55, -65.67, 0, 0);
    delay(tk2);

    FR(55, 49.65, 0, 0);
    BL(-55, -60.35, 0, 0);
    FL(-55, 42.66, 0, 0);
    BR(55, -67.34, 0, 0);
    delay(tk2);

    FR(55, 51.03, 0, 0);
    BL(-55, -58.97, 0, 0);
    FL(-55, 41.28, 0, 0);
    BR(55, -68.72, 0, 0);
    delay(tk2);

    FR(55, 52.65, 0, 0);
    BL(-55, -57.35, 0, 0);
    FL(-55, 40.34, 0, 0);
    BR(55, -69.66, 0, 0);
    delay(tk2);
    
///////////////////////////////////////////////
    FR(55, 53.65, 0, 0);
    BL(-55, -56.35, 0, 0);
    FL(-55, 40, 0, 0);
    BR(55, -70, 0, 0);
    delay(tk2);
//////////////////////////////////////////////

    FR(55, 54.1, 0, 0);
    BL(-55, -55.9, 0, 0);
    FL(-55, 42.22, 19.44, 0);
    BR(55, -67.78, 19.44, 0);
    delay(tk2);

    FR(55, 54.55, 0, 0);
    BL(-55, -55.45, 0, 0);
    FL(-55, 47.78, 31.11, 0);
    BR(55, -62.22, 31.11, 0);
    delay(tk2);
  }
  else if (movecounter == 2) {
    FR(55,  55, 0, 0);
    BL(-55, -55, 0, 0);
    FL(-55, 55, 35, 0);
    BR(55, -55, 35, 0);
    delay(tk2);

    FR(55, 55.45, 0, 0);
    BL(-55, -54.55, 0, 0);
    FL(-55, 62.22, 31.11, 0);
    BR(55, -47.78, 31.11, 0);
    delay(tk2);

    FR(55, 55.9, 0, 0);
    BL(-55, -54.1, 0, 0);
    FL(-55, 67.78, 19.44, 0);
    BR(55, -42.22, 19.44, 0);
    delay(tk2);

    FR(55, 56.15, 0, 0);
    BL(-55, -53.85, 0, 0);
    FL(-55, 68.97, 11.85, 0);
    BR(55, -41.03, 11.85, 0);
    delay(tk2);

    FR(55, 56.25, 0, 0);
    BL(-55, -53.75, 0, 0);
    FL(-55, 69.73, 7.3, 0);
    BR(55, -40.27, 7.3, 0);
    delay(tk2);

    FR(55, 56.35, 0, 0);
    BL(-55, -53.65, 0, 0);
    FL(-55, 70, 0, 0);
    BR(55, -40, 0, 0);
    delay(tk2);

///////////////////////////////////////////
    FR(55, 58.03, 0, 0);
    BL(-55, -51.97, 0, 0);
    FL(-55, 69.66, 0, 0);
    BR(55, -40.34, 0, 0);
    delay(tk2);

    FR(55, 58.97, 0, 0);
    BL(-55, -51.03, 0, 0);
    FL(-55, 68.72, 0, 0);
    BR(55, -41.28, 0, 0);
    delay(tk2);

    FR(55, 60.35, 0, 0);
    BL(-55, -49.65, 0, 0);
    FL(-55, 67.34, 0, 0);
    BR(55, -42.66, 0, 0);
    delay(tk2);

    FR(55, 62.02, 0, 0);
    BL(-55, -47.98, 0, 0);
    FL(-55, 65.67, 0, 0);
    BR(55, -44.33, 0, 0);
    delay(tk2);

    FR(55, 63.84, 0, 0);
    BL(-55, -46.16, 0, 0);
    FL(-55, 63.84, 0, 0);
    BR(55, -46.16, 0, 0);
    delay(tk2);

    FR(55, 65.67, 0, 0);
    BL(-55, -44.33, 0, 0);
    FL(-55, 62.02, 0, 0);
    BR(55, -47.98, 0, 0);
    delay(tk2);

    FR(55, 67.34, 0, 0);
    BL(-55, -42.66, 0, 0);
    FL(-55, 60.35, 0, 0);
    BR(55, -49.65, 0, 0);
    delay(tk2);

    FR(55, 68.72, 0, 0);
    BL(-55, -41.28, 0, 0);
    FL(-55, 58.97, 0, 0);
    BR(55, -51.03, 0, 0);
    delay(tk2);

    FR(55, 69.66, 0, 0);
    BL(-55, -40.34, 0, 0);
    FL(-55, 57.35, 0, 0);
    BR(55, -52.65, 0, 0);
    delay(tk2);

    FR(55, 70, 0, 0);
    BL(-55, -40, 0, 0);
    FL(-55, 56.35, 0, 0);
    BR(55, -53.65, 0, 0);
    delay(tk2);

    FR(55, 67.78, 19.44, 0);
    BL(-55, -42.22, 19.44, 0);
    FL(-55, 55.9, 0, 0);
    BR(55, -54.1, 0, 0);
    delay(tk2);

    FR(55, 62.22, 31.11, 0);
    BL(-55, -47.78, 31.11, 0);
    FL(-55, 55.45, 0, 0);
    BR(55, -54.55, 0, 0);
    delay(tk2);
    movecounter = 0;
  }
}
void kiridikitK2Fix3() {
  //  arahgerak = false;
  movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 30, 0);
    BL(-55, -55, 30, 0);
    FL(-55, 55, 0, 0);
    BR(55, -55, 0, 0);
    delay(tk2);

    FR(55, 47.78, 26.67, 0);
    BL(-55, -62.22, 26.67, 0);
    FL(-55, 54.1, 0, 0);
    BR(55, -55.9, 0, 0);
    delay(tk2);

    FR(55, 42.22, 16.67, 0);
    BL(-55, -67.78, 16.67, 0);
    FL(-55, 53.2, 0, 0);
    BR(55, -56.8, 0, 0);
    delay(tk2);

    FR(55, 41.03, 11.85, 0);
    BL(-55, -68.97, 11.85, 0);
    FL(-55, 52.97, 0, 0);
    BR(55, -57.03, 0, 0);
    delay(tk2);

    FR(55, 40.27, 6.3, 0);
    BL(-55, -69.73, 6.3, 0);
    FL(-55, 52.54, 0, 0);
    BR(55, -57.46, 0, 0);
    delay(tk2);

    FR(55, 40, 0, 0);
    BL(-55, -70, 0, 0);
    FL(-55, 52.31, 0, 0);
    BR(55, -57.69, 0, 0);
    delay(tk2);

///////////////////////////////////////////////

    FR(55, 40.34, 0, 0);
    BL(-55, -69.66, 0, 0);
    FL(-55, 51.97, 0, 0);
    BR(55, -58.03, 0, 0);
    delay(tk2);

    FR(55, 41.28, 0, 0);
    BL(-55, -68.72, 0, 0);
    FL(-55, 51.03, 0, 0);
    BR(55, -58.97, 0, 0);
    delay(tk2);

    FR(55, 42.66, 0, 0);
    BL(-55, -67.34, 0, 0);
    FL(-55, 49.65, 0, 0);
    BR(55, -60.35, 0, 0);
    delay(tk2);

    FR(55, 44.33, 0, 0);
    BL(-55, -65.67, 0, 0);
    FL(-55, 47.98, 0, 0);
    BR(55, -62.02, 0, 0);
    delay(tk2);

    FR(55, 46.16, 0, 0);
    BL(-55, -63.84, 0, 0);
    FL(-55, 46.16, 0, 0);
    BR(55, -63.84, 0, 0);
    delay(tk2);

    FR(55, 47.98, 0, 0);
    BL(-55, -62.02, 0, 0);
    FL(-55, 44.33, 0, 0);
    BR(55, -65.67, 0, 0);
    delay(tk2);

    FR(55, 49.65, 0, 0);
    BL(-55, -60.35, 0, 0);
    FL(-55, 42.66, 0, 0);
    BR(55, -67.34, 0, 0);
    delay(tk2);

    FR(55, 51.03, 0, 0);
    BL(-55, -58.97, 0, 0);
    FL(-55, 41.28, 0, 0);
    BR(55, -68.72, 0, 0);
    delay(tk2);

    FR(55, 51.97, 0, 0);
    BL(-55, -58.03, 0, 0);
    FL(-55, 40.34, 0, 0);
    BR(55, -69.66, 0, 0);
    delay(tk2);
    
///////////////////////////////////////////////
    FR(55, 52.31, 0, 0);
    BL(-55, -57.69, 0, 0);
    FL(-55, 40, 0, 0);
    BR(55, -70, 0, 0);
    delay(tk2);
//////////////////////////////////////////////

    FR(55, 53.2, 0, 0);
    BL(-55, -56.8, 0, 0);
    FL(-55, 42.22, 20.56, 0);
    BR(55, -67.78, 16.67, 0);
    delay(tk2);

    FR(55, 54.10, 0, 0);
    BL(-55, -55.9, 0, 0);
    FL(-55, 47.78, 32.89, 0);
    BR(55, -62.22, 26.67, 0);
    delay(tk2);
  }
  else if (movecounter == 2) {
    FR(55,  55, 0, 0);
    BL(-55, -55, 0, 0);
    FL(-55, 55, 37, 0);
    BR(55, -55, 30, 0);
    delay(tk2);

    FR(55, 55.9, 0, 0);
    BL(-55, -54.1, 0, 0);
    FL(-55, 62.22, 32.89, 0);
    BR(55, -47.78, 26.67, 0);
    delay(tk2);

    FR(55, 56.8, 0, 0);
    BL(-55, -53.2, 0, 0);
    FL(-55, 67.78, 20.56, 0);
    BR(55, -42.22, 16.67, 0);
    delay(tk2);

    FR(55, 57.03, 0, 0);
    BL(-55, -52.97, 0, 0);
    FL(-55, 68.97, 14.62, 0);
    BR(55, -41.03, 11.85, 0);
    delay(tk2);

    FR(55, 57.46, 0, 0);
    BL(-55, -52.54, 0, 0);
    FL(-55, 69.73, 7.77, 0);
    BR(55, -40.27, 6.3, 0);
    delay(tk2);

    FR(55, 57.69, 0, 0);
    BL(-55, -52.31, 0, 0);
    FL(-55, 70, 0, 0);
    BR(55, -40, 0, 0);
    delay(tk2);

///////////////////////////////////////////
    FR(55, 58.03, 0, 0);
    BL(-55, -51.97, 0, 0);
    FL(-55, 69.66, 0, 0);
    BR(55, -40.34, 0, 0);
    delay(tk2);

    FR(55, 58.97, 0, 0);
    BL(-55, -51.03, 0, 0);
    FL(-55, 68.72, 0, 0);
    BR(55, -41.28, 0, 0);
    delay(tk2);

    FR(55, 60.35, 0, 0);
    BL(-55, -49.65, 0, 0);
    FL(-55, 67.34, 0, 0);
    BR(55, -42.66, 0, 0);
    delay(tk2);

    FR(55, 62.02, 0, 0);
    BL(-55, -47.98, 0, 0);
    FL(-55, 65.67, 0, 0);
    BR(55, -44.33, 0, 0);
    delay(tk2);

    FR(55, 63.84, 0, 0);
    BL(-55, -46.16, 0, 0);
    FL(-55, 63.84, 0, 0);
    BR(55, -46.16, 0, 0);
    delay(tk2);

    FR(55, 65.67, 0, 0);
    BL(-55, -44.33, 0, 0);
    FL(-55, 62.02, 0, 0);
    BR(55, -47.98, 0, 0);
    delay(tk2);

    FR(55, 67.34, 0, 0);
    BL(-55, -42.66, 0, 0);
    FL(-55, 60.35, 0, 0);
    BR(55, -49.65, 0, 0);
    delay(tk2);

    FR(55, 68.72, 0, 0);
    BL(-55, -41.28, 0, 0);
    FL(-55, 58.97, 0, 0);
    BR(55, -51.03, 0, 0);
    delay(tk2);

    FR(55, 69.66, 0, 0);
    BL(-55, -40.34, 0, 0);
    FL(-55, 58.03, 0, 0);
    BR(55, -51.97, 0, 0);
    delay(tk2);

//////////////////////////////////////////

    FR(55, 70, 0, 0);
    BL(-55, -40, 0, 0);
    FL(-55, 57.69, 0, 0);
    BR(55, -52.31, 0, 0);
    delay(tk2);

    FR(55, 67.78, 16.67, 0);
    BL(-55, -42.22, 16.67, 0);
    FL(-55, 56.8, 0, 0);
    BR(55, -53.2, 0, 0);
    delay(tk2);

    FR(55, 62.22, 26.67, 0);
    BL(-55, -47.78, 26.67, 0);
    FL(-55, 55.9, 0, 0);
    BR(55, -54.1, 0, 0);
    delay(tk2);
    movecounter = 0;
  }
}

void kanandikitK2Fix() {
  //  arahgerak = false;
  movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 30, 0);
    BL(-55, -55, 30, 0);
    FL(-55, 55, 0, 0);
    BR(55, -55, 0, 0);
    delay(tk2);

    FR(55, 62.22, 26.67, 0);
    BL(-55, -47.78, 26.67, 0);
    FL(-55, 55.9, 0, 0);
    BR(55, -54.1, 0, 0);
    delay(tk2);

    FR(55, 67.78, 16.67, 0);
    BL(-55, -42.22, 16.67, 0);
    FL(-55, 56.8, 0, 0);
    BR(55, -53.2, 0, 0);
    delay(tk2);

    FR(55, 68.97, 11.85, 0);
    BL(-55, -41.03, 11.85, 0);
    FL(-55, 57.03, 0, 0);
    BR(55, -52.97, 0, 0);
    delay(tk2);

    FR(55, 69.73, 6.3, 0);
    BL(-55, -40.27, 6.3, 0);
    FL(-55, 57.46, 0, 0);
    BR(55, -52.54, 0, 0);
    delay(tk2);


    FR(55, 70, 0, 0);
    BL(-55, -40, 0, 0);
    FL(-55, 57.69, 0, 0);
    BR(55, -52.31, 0, 0);
    delay(tk2);

///////////////////////////////////////////////

    FR(55, 69.66, 0, 0);
    BL(-55, -40.34, 0, 0);
    FL(-55, 58.03, 0, 0);
    BR(55, -51.97, 0, 0);
    delay(tk2);

    FR(55, 68.72, 0, 0);
    BL(-55, -41.28, 0, 0);
    FL(-55, 58.97, 0, 0);
    BR(55, -51.03, 0, 0);
    delay(tk2);

    FR(55, 67.34, 0, 0);
    BL(-55, -42.66, 0, 0);
    FL(-55, 60.35, 0, 0);
    BR(55, -49.65, 0, 0);
    delay(tk2);
/////
    FR(55, 65.67, 0, 0);
    BL(-55, -44.33, 0, 0);
    FL(-55, 62.02, 0, 0);
    BR(55, -47.98, 0, 0);
    delay(tk2);

    FR(55, 63.84, 0, 0);
    BL(-55, -46.16, 0, 0);
    FL(-55, 63.84, 0, 0);
    BR(55, -46.16, 0, 0);
    delay(tk2);

    FR(55, 62.02, 0, 0);
    BL(-55, -47.98, 0, 0);
    FL(-55, 65.67, 0, 0);
    BR(55, -44.33, 0, 0);
    delay(tk2);

    FR(55, 60.35, 0, 0);
    BL(-55, -49.65, 0, 0);
    FL(-55, 67.34, 0, 0);
    BR(55, -42.66, 0, 0);
    delay(tk2);

    FR(55, 58.97, 0, 0);
    BL(-55, -51.03, 0, 0);
    FL(-55, 68.72, 0, 0);
    BR(55, -41.28, 0, 0);
    delay(tk2);

    FR(55, 58.03, 0, 0);
    BL(-55, -51.97, 0, 0);
    FL(-55, 69.66, 0, 0);
    BR(55, -40.34, 0, 0);
    delay(tk2);
    
///////////////////////////////////////////////
    FR(55, 57.69, 0, 0);
    BL(-55, -52.31, 0, 0);
    FL(-55, 70, 0, 0);
    BR(55, -40, 0, 0);
    delay(tk2);
//////////////////////////////////////////////

    FR(55, 56.8, 0, 0);
    BL(-55, -53.2, 0, 0);
    FL(-55, 67.78, 16.67, 0);
    BR(55, -42.22, 16.67, 0);
    delay(tk2);

    FR(55, 55.9, 0, 0);
    BL(-55, -54.10, 0, 0);
    FL(-55, 62.22, 26.67, 0);
    BR(55, -47.78, 26.67, 0);
    delay(tk2);
  }
  else if (movecounter == 2) {
    FR(55,  55, 0, 0);
    BL(-55, -55, 0, 0);
    FL(-55, 55, 30, 0);
    BR(55, -55, 30, 0);
    delay(tk2);

    FR(55, 54.1, 0, 0);
    BL(-55, -55.9, 0, 0);
    FL(-55, 47.78, 26.67, 0);
    BR(55, -62.22, 26.67, 0);
    delay(tk2);

    FR(55, 53.2, 0, 0);
    BL(-55, -56.8, 0, 0);
    FL(-55, 42.22, 16.67, 0);
    BR(55, -67.78, 16.67, 0);
    delay(tk2);

    FR(55, 52.97, 0, 0);
    BL(-55, -57.03, 0, 0);
    FL(-55, 41.03, 11.85, 0);
    BR(55, -68.97, 11.85, 0);
    delay(tk2);

    FR(55, 52.54, 0, 0);
    BL(-55, -57.46, 0, 0);
    FL(-55, 40.27, 6.3, 0);
    BR(55, -69.73, 6.3, 0);
    delay(tk2);

    FR(55, 52.31, 0, 0);
    BL(-55, -57.69, 0, 0);
    FL(-55, 40, 0, 0);
    BR(55, -70, 0, 0);
    delay(tk2);

///////////////////////////////////////////
    FR(55, 51.97, 0, 0);
    BL(-55, -58.03, 0, 0);
    FL(-55, 40.34, 0, 0);
    BR(55, -69.66, 0, 0);
    delay(tk2);

    FR(55, 51.03, 0, 0);
    BL(-55, -58.97, 0, 0);
    FL(-55, 41.28, 0, 0);
    BR(55, -68.72, 0, 0);
    delay(tk2);

    FR(55, 49.65, 0, 0);
    BL(-55, -60.35, 0, 0);
    FL(-55, 42.66, 0, 0);
    BR(55, -67.34, 0, 0);
    delay(tk2);

    FR(55, 47.98, 0, 0);
    BL(-55, -62.02, 0, 0);
    FL(-55, 44.33, 0, 0);
    BR(55, -65.67, 0, 0);
    delay(tk2);

    FR(55, 46.16, 0, 0);
    BL(-55, -63.84, 0, 0);
    FL(-55, 46.16, 0, 0);
    BR(55, -63.84, 0, 0);
    delay(tk2);

    FR(55, 44.33, 0, 0);
    BL(-55, -65.67, 0, 0);
    FL(-55, 47.98, 0, 0);
    BR(55, -62.02, 0, 0);
    delay(tk2);

    FR(55, 42.66, 0, 0);
    BL(-55, -67.34, 0, 0);
    FL(-55, 49.65, 0, 0);
    BR(55, -60.35, 0, 0);
    delay(tk2);

    FR(55, 41.28, 0, 0);
    BL(-55, -68.72, 0, 0);
    FL(-55, 51.03, 0, 0);
    BR(55, -58.97, 0, 0);
    delay(tk2);

    FR(55, 40.34, 0, 0);
    BL(-55, -69.66, 0, 0);
    FL(-55, 51.97, 0, 0);
    BR(55, -58.03, 0, 0);
    delay(tk2);

//////////////////////////////////////////

    FR(55, 40, 0, 0);
    BL(-55, -70, 0, 0);
    FL(-55, 52.31, 0, 0);
    BR(55, -57.69, 0, 0);
    delay(tk2);

    FR(55, 42.22, 16.67, 0);
    BL(-55, -67.78, 16.67, 0);
    FL(-55, 53.2, 0, 0);
    BR(55, -56.8, 0, 0);
    delay(tk2);

    FR(55, 47.78, 26.67, 0);
    BL(-55, -62.22, 26.67, 0);
    FL(-55, 54.1, 0, 0);
    BR(55, -55.9, 0, 0);
    delay(tk2);
    movecounter = 0;
  }
}

void majudikitK2Fix1() {
  //  arahgerak = false;
  movecounter++;
  if (movecounter == 1) {
    FR(55, 55, 30, 0);
    BL(-55, -55, 30, 0);
    FL(-55, 55, 0, 0);
    BR(55, -55, 0, 0);
    delay(tk2);

    FR(62.22, 55, 26.67, 0);
    BL(-47.78, -55, 26.67, 0);
    FL(-54.1, 55, 0, 0);
    BR(55.9, -55, 0, 0);
    delay(tk2);

    FR(67.78, 55, 16.67, 0);
    BL(-42.22, -55, 16.67, 0);
    FL(-53.2, 55, 0, 0);
    BR(56.8, -55, 0, 0);
    delay(tk2);

    FR(68.97, 55, 11.85, 0);
    BL(-41.03, -55, 11.85, 0);
    FL(-52.97, 55, 0, 0);
    BR(57.03, -55, 0, 0);
    delay(tk2);

    FR(69.73, 55, 6.3, 0);
    BL(-40.27, -55, 6.3, 0);
    FL(-52.54, 55, 0, 0);
    BR(57.46, -55, 0, 0);
    delay(tk2);

    FR(70, 55, 0, 0);
    BL(-40, -55, 0, 0);
    FL(-52.31, 55, 0, 0);
    BR(57.69, -55, 0, 0);
    delay(tk2);

///////////////////////////////////////////////

    FR(69.66, 55, 0, 0);
    BL(-40.34, -55, 0, 0);
    FL(-51.97, 55, 0, 0);
    BR(58.03, -55, 0, 0);
    delay(tk2);

    FR(68.72, 55, 0, 0);
    BL(-41.28, -55, 0, 0);
    FL(-51.03, 55, 0, 0);
    BR(58.97, -55, 0, 0);
    delay(tk2);

    FR(67.34, 55, 0, 0);
    BL(-42.66, -55, 0, 0);
    FL(-49.65, 55, 0, 0);
    BR(60.35, -55, 0, 0);
    delay(tk2);

    FR(65.67, 55, 0, 0);
    BL(-44.33, -55, 0, 0);
    FL(-47.98, 55, 0, 0);
    BR(62.02, -55, 0, 0);
    delay(tk2);

    FR(63.84, 55, 0, 0);
    BL(-46.16, -55, 0, 0);
    FL(-46.16, 55, 0, 0);
    BR(63.84, -55, 0, 0);
    delay(tk2);

    FR(62.02, 55, 0, 0);
    BL(-47.98, -55, 0, 0);
    FL(-44.33, 55, 0, 0);
    BR(65.67, -55, 0, 0);
    delay(tk2);

    FR(60.35, 55, 0, 0);
    BL(-49.65, -55, 0, 0);
    FL(-42.66, 55, 0, 0);
    BR(67.34, -55, 0, 0);
    delay(tk2);

    FR(58.97, 55, 0, 0);
    BL(-51.03, -55, 0, 0);
    FL(-41.28, 55, 0, 0);
    BR(68.72, -55, 0, 0);
    delay(tk2);

    FR(58.03, 55, 0, 0);
    BL(-51.97, -55, 0, 0);
    FL(-40.34, 55, 0, 0);
    BR(69.66, -55, 0, 0);
    delay(tk2);
    
///////////////////////////////////////////////
    FR(57.69, 55, 0, 0);
    BL(-52.31, -55, 0, 0);
    FL(-40, 55, 0, 0);
    BR(70, -55, 0, 0);
    delay(tk2);
//////////////////////////////////////////////

    FR(56.8, 55, 0, 0);
    BL(-53.2, -55, 0, 0);
    FL(-42.22, 55, 16.67, 0);
    BR(67.78, -55, 16.67, 0);
    delay(tk2);

    FR(55.9, 55, 0, 0);
    BL(-54.10, -55, 0, 0);
    FL(-47.78, 55, 26.67, 0);
    BR(62.22, -55, 26.67, 0);
    delay(tk2);
  }
  else if (movecounter == 2) {
    FR(55,  55, 0, 0);
    BL(-55, -55, 0, 0);
    FL(-55, 55, 30, 0);
    BR(55, -55, 30, 0);
    delay(tk2);

    FR(54.1, 55, 0, 0);
    BL(-55.9, -55, 0, 0);
    FL(-62.22, 55, 26.67, 0);
    BR(47.78, -55, 26.67, 0);
    delay(tk2);

    FR(53.2, 55, 0, 0);
    BL(-56.8, -55, 0, 0);
    FL(-67.78, 55, 16.67, 0);
    BR(42.22, -55, 16.67, 0);
    delay(tk2);

    FR(52.97, 55, 0, 0);
    BL(-57.03, -55, 0, 0);
    FL(-68.97, 55, 11.85, 0);
    BR(41.03, -55, 11.85, 0);
    delay(tk2);

    FR(52.54, 55, 0, 0);
    BL(-57.46, -55, 0, 0);
    FL(-69.73, 55, 6.3, 0);
    BR(40.27, -55, 6.3, 0);
    delay(tk2);

    FR(52.31, 55, 0, 0);
    BL(-57.69, -55, 0, 0);
    FL(-70, 55, 0, 0);
    BR(40, -55, 0, 0);
    delay(tk2);

///////////////////////////////////////////
    FR(51.97, 55, 0, 0);
    BL(-58.03, -55, 0, 0);
    FL(-69.66, 55, 0, 0);
    BR(40.34, -55, 0, 0);
    delay(tk2);

    FR(51.03, 55, 0, 0);
    BL(-58.97, -55, 0, 0);
    FL(-68.72, 55, 0, 0);
    BR(41.28, -55, 0, 0);
    delay(tk2);

    FR(49.65, 55, 0, 0);
    BL(-60.35, -55, 0, 0);
    FL(-67.34, 55, 0, 0);
    BR(42.66, -55, 0, 0);
    delay(tk2);

    FR(47.98, 55, 0, 0);
    BL(-62.02, -55, 0, 0);
    FL(-65.67, 55, 0, 0);
    BR(44.33, -55, 0, 0);
    delay(tk2);

    FR(46.16, 55, 0, 0);
    BL(-63.84, -55, 0, 0);
    FL(-63.84, 55, 0, 0);
    BR(46.16, -55, 0, 0);
    delay(tk2);

    FR(44.33, 55, 0, 0);
    BL(-65.67, -55, 0, 0);
    FL(-62.02, 55, 0, 0);
    BR(47.98, -55, 0, 0);
    delay(tk2);

    FR(42.66, 55, 0, 0);
    BL(-67.34, -55, 0, 0);
    FL(-60.35, 55, 0, 0);
    BR(49.65, -55, 0, 0);
    delay(tk2);

    FR(41.28, 55, 0, 0);
    BL(-68.72, -55, 0, 0);
    FL(-58.97, 55, 0, 0);
    BR(51.03, -55, 0, 0);
    delay(tk2);

    FR(40.34, 55, 0, 0);
    BL(-69.66, -55, 0, 0);
    FL(-58.03, 55, 0, 0);
    BR(51.97, -55, 0, 0);
    delay(tk2);

//////////////////////////////////////////

    FR(40, 55, 0, 0);
    BL(-70, -55, 0, 0);
    FL(-57.69, 55, 0, 0);
    BR(52.31, -55, 0, 0);
    delay(tk2);

    FR(42.22, 55, 16.67, 0);
    BL(-67.78, -55, 16.67, 0);
    FL(-56.8, 55, 0, 0);
    BR(53.2, -55, 0, 0);
    delay(tk2);

    FR(47.78, 55, 26.67, 0);
    BL(-62.22, -55, 26.67, 0);
    FL(-55.9, 55, 0, 0);
    BR(54.1, -55, 0, 0);
    delay(tk2);
    movecounter = 0;
  }
}



void kananpecah(float lbr){ //Gerakan lambat, Sudut Belok = 5
arahgerak = false;
        FR(55, 75, 0,lbr);
        BL(-55, -35, 0, lbr);
        FL(-55, 64.63, 0, lbr);
        BR(55, -45.37, 0,lbr);
        delay(td);

        FR(55, 74.64, 0,lbr);
        BL(-55, -35.36, 0, lbr);
        FL(-55, 67.46, 0, lbr);
        BR(55, -42.54, 0,lbr);
        delay(td);

        FR(55, 73.63, 0,lbr);
        BL(-55, -36.37, 0, lbr);
        FL(-55, 69.95, 0, lbr);
        BR(55, -40.05, 0,lbr);  
        delay(td);

        FR(55, 72.04, 0,lbr);
        BL(-55, -37.96, 0, lbr);
        FL(-55, 72.04, 0, lbr);
        BR(55, -37.96, 0,lbr);
        delay(td);
        
/////////////////////////////////////
        FR(55, 69.95, 0,lbr);
        BL(-55, -40.05, 0, lbr);
        FL(-55, 73.63, 0, lbr);
        BR(55, -36.37, 0, lbr);
        delay(td);

        FR(55, 67.46, 0,lbr);
        BL(-55, -42.54, 0, lbr);
        FL(-55, 74.64, 0, lbr);
        BR(55, -35.36, 0, lbr);
        delay(td);

        FR(55, 64.63, 0,lbr);
        BL(-55, -45.37, 0, lbr);
        FL(-55, 75, 35, lbr);
        BR(55, -35, 35, lbr);
        delay(td);

        FR(55, 61.56, 0,lbr);
        BL(-55, -48.44, 0, lbr);
        FL(-55, 72.04, 5, lbr);
        BR(55, -37.96, 5, lbr);
        delay(td);

        FR(55, 58.32, 0,lbr);
        BL(-55, -51.68, 0, lbr);
        FL(-55, 64.63, 7, lbr);
        BR(55, -45.37, 7, lbr);
        delay(td);

        FR(55, 55, 0, lbr);
        BL(-55, -55, 0,lbr);
        FL(-55, 55, 10, lbr);
        BR(55, -55, 10, lbr);
        delay(td);

        FR(55, 51.68, 0,lbr);
        BL(-55, -58.32, 0, lbr);
        FL(-55, 45.37, 7, lbr);
        BR(55, -64.63, 7, lbr);
        delay(td);

        FR(55, 48.44, 0,0);
        BL(-55, -61.56, 0, lbr);
        FL(-55, 37.96, 5, lbr);
        BR(55, -72.04, 5,lbr);
        delay(td);

        FR(55, 45.37, 0,lbr);
        BL(-55, -64.63, 0, lbr);
        FL(-55, 35, 0, lbr);
        BR(55, -75, 0,lbr);
        delay(td);

        FR(55, 42.54, 0,lbr);
        BL(-55, -67.46, 0, lbr);
        FL(-55, 35.36, 0, lbr);
        BR(55, -74.64, 0,lbr);
        delay(td);

        FR(55, 40.05, 0,lbr);
        BL(-55, -69.95, 0, lbr);
        FL(-55, 36.37, 0, lbr);
        BR(55, -73.63, 0,lbr);
        delay(td);

        FR(55, 37.96, 0,lbr);
        BL(-55, -72.04, 0, lbr);
        FL(-55, 37.96, 0, lbr);
        BR(55, -72.04, 0,lbr);  
        delay(td);

        FR(55, 36.37, 0,lbr);
        BL(-55, -73.63, 0, lbr);
        FL(-55, 40.05, 0, lbr);
        BR(55, -69.95, 0,lbr);
        delay(td);

        FR(55, 35.36, 0,lbr);
        BL(-55, -74.64, 0, lbr);
        FL(-55, 42.54, 0, lbr);
        BR(55, -67.46, 0, lbr);
        delay(td1);

        FR(55, 35, 0,lbr);
        BL(-55, -75, 0, lbr);
        FL(-55, 45.37, 0, lbr);
        BR(55, -64.63, 0, lbr);
        delay(td);

        FR(55, 37.96, 5,lbr);
        BL(-55, -72.04, 5, lbr);
        FL(-55, 48.44, 0, lbr);
        BR(55, -61.56, 0, lbr);
        delay(td);

        FR(55, 45.37, 7,lbr);
        BL(-55, -64.63, 7, lbr);
        FL(-55, 51.68, 0, lbr);
        BR(55, -58.32, 0, lbr);
        delay(td);

        FR(55, 55, 10, lbr);
        BL(-55, -55, 10,lbr);
        FL(-55, 55, 0, lbr);
        BR(55, -55, 0, lbr);
        delay(td);

        FR(55, 64.43, 7,lbr);
        BL(-55, -45.37, 7, lbr);
        FL(-55, 58.32, 0, lbr);
        BR(55, -51.68, 0, lbr);
        delay(td);

        FR(55, 72.04, 5,lbr);
        BL(-55, -37.96, 5, lbr);
        FL(-55, 61.56, 0, lbr);
        BR(55, -48.44, 0, lbr);
        delay(td);
}

void kananlambat(){ //Gerakan lambat
//Maju 3cm &  angkat 3cm
  /////delay 30 atau 25
  static int steps = 0;
      switch (steps)
    {
//FR & BL Seret, FL & BR Swing      
      case 0:
        FR(55, 85, 0, 0);
        BL(-55, -25, 0,0);
        FL(-55, 45, 0,0);
        BR(55, -65, 0, 0);
        delay(td1);
        break;
      case 1:
        FR(55, 80, 0, 0);
        BL(-55, -30, 0,0);
        FL(-55, 40, 0,0);
        BR(55, -70, 0, 0);
        delay(td1);
        break;
      case 2:
        FR(55, 75, 0, 0);
        BL(-55, -35, 0,0);
        FL(-55, 35, 0,0);
        BR(55, -75, 0, 0);  
        delay(td1);
        break;  
      case 3:
        FR(55, 70, 0, 0);
        BL(-55, -40, 0,0);
        FL(-55, 30, 0,0);
        BR(55, -80, 0, 0);
        delay(td1);
        break;
      case 4:
        FR(55, 65, 0, 0);
        BL(-55, -45, 0,0);
        FL(-55, 25, 0, 0);
        BR(55, -85, 0, 0);
        delay(td1);
        break;
      case 5:
        FR(55, 60, 0, 0);
        BL(-55, -50, 0,0);
        FL(-55, 40, 7, 0);
        BR(55, -70, 7, 0);
        delay(td1);
        break;
      case 6:
        FR(55, 55, 0, 0);
        BL(-55, -55, 0,0);
        FL(-55, 55, 10, 0);
        BR(55, -55, 10, 0);
        delay(td2);
        break;   
      case 7:
        FR(55, 50, 0, 0);
        BL(-55, -60, 0,0);
        FL(-55, 70, 7, 0);
        BR(55, -40, 7, 0);
        delay(td2);
        break;  
      case 8:
        FR(55, 45, 0, 0);
        BL(-55, -65, 0,0);
        FL(-55, 85, 0, 0);
        BR(55, -25, 0, 0);
        delay(td2);
        break;
      case 9:
        FR(55, 40, 0, 0);
        BL(-55, -70, 0,0);
        FL(-55, 80, 0, 0);
        BR(55, -30, 0, 0);
        delay(td2);
        break;
      case 10:
        FR(55, 35, 0, 0);
        BL(-55, -75, 0,0);
        FL(-55, 75, 0, 0);
        BR(55, -35, 0, 0);
        delay(td2);
        break;
      case 11:
        FR(55, 30, 0, 0);
        BL(-55, -80, 0,0);
        FL(-55, 70, 0,0);
        BR(55, -40, 0, 0);
        delay(td2);
        break;
        case 12:
        FR(55, 25, 0, 0);
        BL(-55, -85, 0,0);
        FL(-55, 65, 0,0);
        BR(55, -45, 0, 0);
        delay(td2);
        break;
        ///////    
        case 13:
        FR(55, 40, 7, 0);
        BL(-55, -70, 7,0);
        FL(-55, 60, 0,0);
        BR(55, -50, 0, 0);
        delay(td2);
        break;
        case 14:
        FR(55, 55, 10, 0);
        BL(-55, -55, 10,0);
        FL(-55, 55, 0,0);
        BR(55, -55, 0, 0);
        delay(td2);
        break;
        case 15:
        FR(55, 70, 7, 0);
        BL(-55, -40, 7,0);
        FL(-55, 50, 0,0);
        BR(55, -60, 0, 0);
        delay(td2);
        break;
}
    steps++;
if (steps > 15)steps = 0;
}


void kirilambat(){ //Gerakan lambat
//Maju 3cm &  angkat 3cm
  /////delay 30 atau 25
  static int steps = 0;
      switch (steps)
    {
//FR & BL Seret, FL & BR Swing      
      case 0:
        FR(55, 25, 0, 0);
        BL(-55, -85, 0,0);
        FL(-55, 65, 0,0);
        BR(55, -45, 0, 0);
        delay(td1);
        break;
      case 1:
        FR(55, 30, 0, 0);
        BL(-55, -80, 0,0);
        FL(-55, 70, 0,0);
        BR(55, -40, 0, 0);
        delay(td1);
        break;
      case 2:
        FR(55, 35, 0, 0);
        BL(-55, -75, 0,0);
        FL(-55, 75, 0,0);
        BR(55, -35, 0, 0);  
        delay(td1);
        break;  
      case 3:
        FR(55, 40, 0, 0);
        BL(-55, -70, 0,0);
        FL(-55, 80, 0,0);
        BR(55, -30, 0, 0);
        delay(td1);
        break;
      case 4:
        FR(55, 45, 0, 0);
        BL(-55, -65, 0,0);
        FL(-55, 85, 0, 0);
        BR(55, -25, 0, 0);
        delay(td1);
        break;
      case 5:
        FR(55, 50, 0, 0);
        BL(-55, -60, 0,0);
        FL(-55, 70, 24.74, 0);
        BR(55, -40, 24.74, 0);
        delay(td1);
        break;
      case 6:
        FR(55, 55, 0, 0);
        BL(-55, -55, 0,0);
        FL(-55, 55, 35, 0);
        BR(55, -55, 35, 0);
        delay(td2);
        break;   
      case 7:
        FR(55, 60, 0, 0);
        BL(-55, -50, 0,0);
        FL(-55, 40, 24.74, 0);
        BR(55, -70, 24.74, 0);
        delay(td2);
        break;  
      case 8:
        FR(55, 65, 0, 0);
        BL(-55, -45, 0,0);
        FL(-55, 25, 0, 0);
        BR(55, -85, 0, 0);
        delay(td2);
        break;
      case 9:
        FR(55, 70, 0, 0);
        BL(-55, -40, 0,0);
        FL(-55, 30, 0, 0);
        BR(55, -80, 0, 0);
        delay(td2);
        break;
      case 10:
        FR(55, 75, 0, 0);
        BL(-55, -35, 0,0);
        FL(-55, 35, 0, 0);
        BR(55, -75, 0, 0);
        delay(td2);
        break;
      case 11:
        FR(55, 80, 0, 0);
        BL(-55, -30, 0,0);
        FL(-55, 40, 0,0);
        BR(55, -70, 0, 0);
        delay(td2);
        break;
        case 12:
        FR(55, 85, 0, 0);
        BL(-55, -25, 0,0);
        FL(-55, 45, 0,0);
        BR(55, -65, 0, 0);
        delay(td2);
        break;
        ///////    
        case 13:
        FR(55, 70, 24.74, 0);
        BL(-55, -40, 24.74,0);
        FL(-55, 50, 0,0);
        BR(55, -60, 0, 0);
        delay(td2);
        break;
        case 14:
        FR(55, 55, 35, 0);
        BL(-55, -55, 35,0);
        FL(-55, 55, 0,0);
        BR(55, -55, 0, 0);
        delay(td2);
        break;
        case 15:
        FR(55, 40, 24.74, 0);
        BL(-55, -70, 24.74,0);
        FL(-55, 60, 0,0);
        BR(55, -50, 0, 0);
        delay(td2);
        break;
}
    steps++;
if (steps > 15)steps = 0;
}

void geserkanancepat(float lbr){

        FR(55, 85, 0, lbr);
        BL(-55, -25, 0,lbr);
        FL(-55, 70, 0,lbr);
        BR(55, -40, 0, lbr);
        delay(td1);

        FR(55, 77.5, 0, lbr);
        BL(-55, -32.5, 0,lbr);
        FL(-55, 77.5, 0,lbr);
        BR(55, -32.5, 0, lbr);
        delay(td1);

        FR(55, 70, 0, lbr);
        BL(-55, -40, 0,lbr);
        FL(-55, 85, 0,lbr);
        BR(55, -25, 0, lbr);  
        delay(td1);

        FR(55, 62.5, 0, lbr);
        BL(-55, -47.5, 0,lbr);
        FL(-55, 70, 7,  lbr);
        BR(55, -40, 7,  lbr);
        delay(td1);

        FR(55, 55, 0, lbr);
        BL(-55, -55, 0,lbr);
        FL(-55, 55, 10, lbr);
        BR(55, -55, 10, lbr);
        delay(td1);

        FR(55, 47.5, 0, lbr);
        BL(-55, -62.5, 0,lbr);
        FL(-55, 40, 7, lbr);
        BR(55, -70, 7, lbr);
        delay(td1);

        FR(55, 40, 0, lbr);
        BL(-55, -70, 0,lbr);
        FL(-55, 25, 0, lbr);
        BR(55, -85, 0,lbr);
        delay(td2);

        FR(55, 32.5, 0, lbr);
        BL(-55, -77.5, 0,lbr);
        FL(-55, 32.55, 0, lbr);
        BR(55, -77.5, 0, lbr);
        delay(td2);

        FR(55, 25, 0, lbr);
        BL(-55, -85, 0,lbr);
        FL(-55, 40, 0, lbr);
        BR(55, -70, 0,lbr);
        delay(td2);

        FR(55, 40, 7, lbr);
        BL(-55, -70, 7,lbr);
        FL(-55, 47.5, 0, lbr);
        BR(55, -62.5, 0, lbr);
        delay(td2);

        FR(55, 55, 10, lbr);
        BL(-55, -55, 10,lbr);
        FL(-55, 55, 0, lbr);
        BR(55, -55, 0, lbr);
        delay(td2);

        FR(55, 70, 7, lbr);
        BL(-55, -40, 7,lbr);
        FL(-55, 62.5, 0,lbr);
        BR(55, -47.5, 0, lbr);
        delay(td2);
}

void geserkiri(){
  static int steps = 0;
      switch (steps)
    {
//FR & BL Seret, FL & BR Swing      
      case 0:
        FR(55, 25, 0, 0);
        BL(-55, -85, 0,0);
        FL(-55, 40, 0,0);
        BR(55, -70, 0, 0);
        delay(td1);
        break;
      case 1:
        FR(55, 32.5, 0, 0);
        BL(-55, -77.5, 0,0);
        FL(-55, 32.5, 0,0);
        BR(55, -77.5, 0, 0);
        delay(td1);
        break;
      case 2:
        FR(55, 40, 0, 0);
        BL(-55, -70, 0,0);
        FL(-55, 25, 0,0);
        BR(55, -85, 0, 0);  
        delay(td1);
        break;  
      case 3:
        FR(55, 47.5, 0, 0);
        BL(-55, -62.5, 0,0);
        FL(-55, 40, 7,0);
        BR(55, -70, 7, 0);
        delay(td1);
        break;
      case 4:
        FR(55, 55, 0, 0);
        BL(-55, -55, 0,0);
        FL(-55, 55, 10, 0);
        BR(55, -55, 10, 0);
        delay(td1);
        break;
      case 5:
        FR(55, 62.5, 0, 0);
        BL(-55, -47.5, 0,0);
        FL(-55, 70, 7, 0);
        BR(55, -40, 7, 0);
        delay(td1);
        break;
      case 6:
        FR(55, 70, 0, 0);
        BL(-55, -40, 0,0);
        FL(-55, 85, 0, 0);
        BR(55, -25, 0, 0);
        delay(td2);
        break;   
      case 7:
        FR(55, 77.5, 0, 0);
        BL(-55, -32.5, 0,0);
        FL(-55, 77.55, 0, 0);
        BR(55, -32.5, 0, 0);
        delay(td2);
        break;  
      case 8:
        FR(55, 85, 0, 0);
        BL(-55, -25, 0,0);
        FL(-55, 70, 0, 0);
        BR(55, -40, 0, 0);
        delay(td2);
        break;
        ////
      case 9:
        FR(55, 70, 7, 0);
        BL(-55, -40, 7,0);
        FL(-55, 62.5, 0, 0);
        BR(55, -47.5, 0, 0);
        delay(td2);
        break;
      case 10:
        FR(55, 55, 10, 0);
        BL(-55, -55, 10,0);
        FL(-55, 55, 0, 0);
        BR(55, -55, 0, 0);
        delay(td2);
        break;
        case 11:
        FR(55, 70, 7, 0);
        BL(-55, -40, 7,0);
        FL(-55, 47.5, 0,0);
        BR(55, -62.5, 0, 0);
        delay(td2);
        break;
}
    steps++;
if (steps > 11)steps = 0;
}



void geserkiri1(){
  static int steps = 0;
      switch (steps)
    {
//FR & BL Seret, FL & BR Swing      
      case 0:
        FR(55, 40, 0, 0);
        BL(-55, -70, 0,0);
        FL(-55, 47.5, 0,0);
        BR(55, -62.5, 0, 0);
        delay(td1);
        break;
      case 1:
        FR(55, 43.75, 0, 0);
        BL(-55, -66.25, 0,0);
        FL(-55, 43.75, 0,0);
        BR(55, -66.25, 0, 0);
        delay(td1);
        break;
      case 2:
        FR(55, 47.5, 0, 0);
        BL(-55, -62.5, 0,0);
        FL(-55, 40, 0,0);
        BR(55, -70, 0, 0);  
        delay(td1);
        break;  
      case 3:
        FR(55, 51.25, 0, 0);
        BL(-55, -58.75, 0,0);
        FL(-55, 47.5, 7,0);
        BR(55, -62.5, 7, 0);
        delay(td1);
        break;
      case 4:
        FR(55, 55, 0, 0);
        BL(-55, -55, 0,0);
        FL(-55, 55, 10, 0);
        BR(55, -55, 10, 0);
        delay(td1);
        break;
      case 5:
        FR(55, 58.75, 0, 0);
        BL(-55, -51.25, 0,0);
        FL(-55, 62.5, 7, 0);
        BR(55, -47.5, 7, 0);
        delay(td1);
        break;
      case 6:
        FR(55, 62.5, 0, 0);
        BL(-55, -47.5, 0,0);
        FL(-55, 70, 0, 0);
        BR(55, -40, 0, 0);
        delay(td2);
        break;   
      case 7:
        FR(55, 66.25, 0, 0);
        BL(-55, -43.75, 0,0);
        FL(-55, 66.25, 0, 0);
        BR(55, -43.75, 0, 0);
        delay(td2);
        break;  
      case 8:
        FR(55, 70, 0, 0);
        BL(-55, -40, 0,0);
        FL(-55, 62.5, 0, 0);
        BR(55, -47.5, 0, 0);
        delay(td2);
        break;
        ////
      case 9:
        FR(55, 62.5, 7, 0);
        BL(-55, -47.5, 7,0);
        FL(-55, 58.75, 0, 0);
        BR(55, -51.25, 0, 0);
        delay(td2);
        break;
      case 10:
        FR(55, 55, 10, 0);
        BL(-55, -55, 10,0);
        FL(-55, 55, 0, 0);
        BR(55, -55, 0, 0);
        delay(td2);
        break;
        case 11:
        FR(55, 47.5, 7, 0);
        BL(-55, -62.5, 7,0);
        FL(-55, 51.25, 0,0);
        BR(55, -58.75, 0, 0);
        delay(td2);
        break;
}
    steps++;
if (steps > 11)steps = 0;
}


void geserkirilambat(float lbr){
arahgerak = false;
        FR(55, 45, 0, lbr);
        BL(-55, -65, 0,lbr);
        FL(-55, 51.33, 0,lbr);
        BR(55, -58.67, 0, lbr);
        delay(td1);

        FR(55, 45.22, 0, lbr);
        BL(-55, -64.78, 0,lbr);
        FL(-55, 49.64, 0,lbr);
        BR(55, -60.36, 0, lbr);
        delay(td1);

        FR(55, 45.86, 0, lbr);
        BL(-55, -64.14, 0,lbr);
        FL(-55, 48.13, 0,lbr);
        BR(55, -61.88, 0, lbr);  
        delay(td1);

        FR(55, 46.85, 0, lbr);
        BL(-55, -63.15, 0,lbr);
        FL(-55, 46.85, 0,lbr);
        BR(55, -63.15, 0, lbr);
        delay(td1);

        FR(55, 48.13, 0, lbr);
        BL(-55, -61.88,0,lbr);
        FL(-55, 45.86, 0, lbr);
        BR(55, -64.14, 0,lbr);
        delay(td1);

        FR(55, 49.64, 0, lbr);
        BL(-55, -60.36, 0,lbr);
        FL(-55, 45.22, 0, lbr);
        BR(55, -64.78, 0, lbr);
        delay(td1);

        FR(55, 51.33, 0, lbr);
        BL(-55, -58.67, 0,lbr);
        FL(-55, 45, 0, lbr);
        BR(55, -65, 0, lbr);
        delay(td2);

        FR(55, 52.22, 0, lbr);
        BL(-55, -57.78, 0,lbr);
        FL(-55, 45.86, 8.75, lbr);
        BR(55, -64.14, 8.75, lbr);
        delay(td2);

        FR(55, 53.13, 0, lbr);
        BL(-55, -56.87, 0,lbr);
        FL(-55, 48.13, 15, lbr);
        BR(55, -61.88, 15, lbr);
        delay(td2);

        FR(55, 54.06, 0, lbr);
        BL(-55, -55.94, 0,lbr);
        FL(-55, 51.33, 18.75, lbr);
        BR(55, -58.67, 18.75, lbr);
        delay(td2);

        FR(55, 55, 0, lbr);
        BL(-55, -55, 0,lbr);
        FL(-55, 55, 20, lbr);
        BR(55, -55, 20, lbr);
        delay(td2);

        FR(55, 55.94, 0, lbr);
        BL(-55, -54.06, 0, lbr);
        FL(-55, 58.67, 18.75,lbr);
        BR(55, -51.33, 18.75, lbr);
        delay(td2);

        FR(55, 56.87, 0, lbr);
        BL(-55, -53.13, 0,lbr);
        FL(-55, 61.88, 15,lbr);
        BR(55, -48.13, 15, lbr);
        delay(td2);

        FR(55, 57.78, 0, lbr);
        BL(-55, -52.22, 0,lbr);
        FL(-55, 64.14, 8.75,lbr);
        BR(55, -45.86, 8.75, lbr);
        delay(td2);

        FR(55, 58.67, 0, lbr);
        BL(-55, -51.33, 0,lbr);
        FL(-55, 65, 0,lbr);
        BR(55, -45, 0, lbr);
        delay(td2);

        FR(55, 60.36,  0,lbr);
        BL(-55, -49.64, 0,lbr);
        FL(-55, 64.78, 0,lbr);
        BR(55, -45.22, 0,lbr);
        delay(td2);

        FR(55, 61.88, 0, lbr);
        BL(-55, -48.13, 0,lbr);
        FL(-55, 64.14, 0,lbr);
        BR(55, -45.86, 0, lbr);
        delay(td2);

        FR(55, 63.15, 0,  lbr);
        BL(-55, -46.85, 0,lbr);
        FL(-55, 63.15, 0, lbr);
        BR(55, -46.85, 0, lbr);
        delay(td2);

        FR(55, 64.14, 0, lbr);
        BL(-55, -45.86, 0,lbr);
        FL(-55, 61.88, 0,lbr);
        BR(55, -48.13, 0, lbr);
        delay(td2);

        FR(55, 64.78, 0, lbr);
        BL(-55, -45.22, 0,lbr);
        FL(-55, 60.36, 0,lbr);
        BR(55, -49.64, 0, lbr);
        delay(td2);

        FR(55, 65, 0, lbr);
        BL(-55, -45, 0,lbr);
        FL(-55, 58.67, 0,lbr);
        BR(55, -51.33, 0, lbr);
        delay(td2);

        FR(55, 64.14, 8.75, lbr);
        BL(-55, -45.86, 8.75,lbr);
        FL(-55, 57.78, 0, lbr);
        BR(55, -52.22, 0, lbr);
        delay(td2);

        FR(55, 61.88, 15, lbr);
        BL(-55, -48.13, 15,lbr);
        FL(-55, 56.87, 0, lbr);
        BR(55, -53.13, 0, lbr);
        delay(td2);

        FR(55, 58.67, 18.75, lbr);
        BL(-55, -51.33, 18.75,lbr);
        FL(-55, 55.94, 0, lbr);
        BR(55, -54.06, 0, lbr);
        delay(td2);

        FR(55, 55, 20, lbr);
        BL(-55, -55, 20,lbr);
        FL(-55, 55, 0, lbr);
        BR(55, -55, 0, lbr);
        delay(td2);

        FR(55, 51.33, 18.75, lbr);
        BL(-55, -58.67, 18.75,lbr);
        FL(-55, 54.06, 0,lbr);
        BR(55, -55.94, 0, lbr);
        delay(td2);

        FR(55, 48.13, 15, lbr);
        BL(-55, -61.88, 15,lbr);
        FL(-55, 53.13, 0,lbr);
        BR(55, -56.87, 0, lbr);
        delay(td2);

        FR(55, 45.86, 8.75, lbr);
        BL(-55, -64.14, 8.75,lbr);
        FL(-55, 52.22, 0,lbr);
        BR(55, -57.78, 0, lbr);
        delay(td2);
}




void geserkiri1(float lbr) {
arahgerak = false;
    //FR & BL Seret, FL & BR Swing
      FR(55, 40, 0, lbr);
      BL(-55, -70, 0, lbr);
      FL(-55, 47.5, 0, lbr);
      BR(55, -62.5, 0, lbr);
      delay(ts);
      FR(55, 43.75, 0, lbr);
      BL(-55, -66.25, 0, lbr);
      FL(-55, 43.75, 0, lbr);
      BR(55, -66.25, 0, lbr);
      delay(ts);
      FR(55, 47.5, 0, lbr);
      BL(-55, -62.5, 0, lbr);
      FL(-55, 40, 0, lbr);
      BR(55, -70, 0, lbr);
      delay(ts);
      FR(55, 51.25, 0, lbr);
      BL(-55, -58.75, 0, lbr);
      FL(-55, 47.5, 7, lbr);
      BR(55, -62.5, 7, lbr);
      delay(ts);
      FR(55, 55, 0, lbr);
      BL(-55, -55, 0, lbr);
      FL(-55, 55, 10, lbr);
      BR(55, -55, 10, lbr);
      delay(ts);
      FR(55, 58.75, 0, lbr);
      BL(-55, -51.25, 0, lbr);
      FL(-55, 62.5, 7, lbr);
      BR(55, -47.5, 7, lbr);
      delay(ts);
      FR(55, 62.5, 0, lbr);
      BL(-55, -47.5, 0, lbr);
      FL(-55, 70, 0, lbr);
      BR(55, -40, 0, lbr);
      delay(ts);
      FR(55, 66.25, 0, lbr);
      BL(-55, -43.75, 0, lbr);
      FL(-55, 66.25, 0, lbr);
      BR(55, -43.75, 0, lbr);
      delay(ts);
      FR(55, 70, 0, lbr);
      BL(-55, -40, 0, lbr);
      FL(-55, 62.5, 0, lbr);
      BR(55, -47.5, 0, lbr);
      delay(ts);
      FR(55, 62.5, 7, lbr);
      BL(-55, -47.5, 7, lbr);
      FL(-55, 58.75, 0, lbr);
      BR(55, -51.25, 0, lbr);
      delay(ts);
      FR(55, 55, 10, lbr);
      BL(-55, -55, 10, lbr);
      FL(-55, 55, 0, lbr);
      BR(55, -55, 0, lbr);
      delay(ts);
      FR(55, 47.5, 7, lbr);
      BL(-55, -62.5, 7, lbr);
      FL(-55, 51.25, 0, lbr);
      BR(55, -58.75, 0, lbr);
      delay(ts);
}

void geserkanan1(float lbr) {
arahgerak = false;
pidchoice = false;
    //FR & BL Seret, FL & BR Swing
      FR(55, 70, 0, lbr);
      BL(-55, -40, 0, lbr);
      FL(-55, 62.5, 0, lbr);
      BR(55, -47.5, 0, lbr);
      delay(ts);
      FR(55, 66.25, 0, lbr);
      BL(-55, -43.75, 0, lbr);
      FL(-55, 66.25, 0, lbr);
      BR(55, -43.75, 0, lbr);
      delay(ts);
      FR(55, 62.5, 0, lbr);
      BL(-55, -47.5, 0, lbr);
      FL(-55, 70, 0, lbr);
      BR(55, -40, 0, lbr);
      delay(ts);
      FR(55, 58.75, 0, lbr);
      BL(-55, -51.25, 0, lbr);
      FL(-55, 62.5, 7, lbr);
      BR(55, -47.5, 7, lbr);
      delay(ts);
      FR(55, 55, 0, lbr);
      BL(-55, -55, 0, lbr);
      FL(-55, 55, 10, lbr);
      BR(55, -55, 10, lbr);
      delay(ts);
      FR(55, 51.25, 0, lbr);
      BL(-55, -58.75, 0, lbr);
      FL(-55, 47.5, 7, lbr);
      BR(55, -62.5, 7, lbr);
      delay(ts);
      FR(55, 47.5, 0, lbr);
      BL(-55, -62.5, 0, lbr);
      FL(-55, 40, 0, lbr);
      BR(55, -70, 0, lbr);
      delay(ts);
      FR(55, 43.75, 0, lbr);
      BL(-55, -66.25, 0, lbr);
      FL(-55, 43.75, 0, lbr);
      BR(55, -66.25, 0, lbr);
      delay(ts);
      FR(55, 40, 0, lbr);
      BL(-55, -70, 0, lbr);
      FL(-55, 47.5, 0, lbr);
      BR(55, -62.5, 0, lbr);
      delay(ts);
      FR(55, 47.5, 7, lbr);
      BL(-55, -62.5, 7, lbr);
      FL(-55, 51.25, 0, lbr);
      BR(55, -58.75, 0, lbr);
      delay(ts);
      FR(55, 55, 10, lbr);
      BL(-55, -55, 10, lbr);
      FL(-55, 55, 0, lbr);
      BR(55, -55, 0, lbr);
      delay(ts);
      FR(55, 62.5, 7, lbr);
      BL(-55, -47.5, 7, lbr);
      FL(-55, 58.75, 0, lbr);
      BR(55, -51.25, 0, lbr);
      delay(ts);
}



void kiridikit1(){
arahgerak = false;
        FR(55, 45, 0, 0);
        BL(-55, -65, 0,0);
        FL(-55, 51.33, 0,0);
        BR(55, -58.67, 0, 0);
        delay(td1);
////////////////////////////////////////////////////
        FR(55, 45.06, 0, 0);
        BL(-55, -64.94, 0,0);
        FL(-55, 50.47, 0,0);
        BR(55, -59.53, 0, 0);
        delay(td1);

        FR(55, 45.22, 0, 0);
        BL(-55, -64.78, 0,0);
        FL(-55, 49.64, 0,0);
        BR(55, -60.36, 0, 0);
        delay(td1);

        FR(55, 45.49, 0, 0);
        BL(-55, -64.51, 0,0);
        FL(-55, 48.86, 0,0);
        BR(55, -61.14, 0, 0);  
        delay(td1);

        FR(55, 45.86, 0, 0);
        BL(-55, -64.14, 0,0);
        FL(-55, 48.13, 0,0);
        BR(55, -61.88, 0, 0);  
        delay(td1);

        FR(55, 46.31, 0, 0);
        BL(-55, -63.69, 0,0);
        FL(-55, 47.45, 0,0);
        BR(55, -62.55, 0, 0);
        delay(td1);

        FR(55, 46.85, 0, 0);
        BL(-55, -63.15, 0,0);
        FL(-55, 46.85, 0,0);
        BR(55, -63.15, 0, 0);
        delay(td1);

        FR(55, 47.45, 0, 0);
        BL(-55, -62.55, 0,0);
        FL(-55, 46.31, 0, 0);
        BR(55, -63.69, 0, 0);
        delay(td1);

        FR(55, 48.13, 0, 0);
        BL(-55, -61.88, 0,0);
        FL(-55, 45.86, 0, 0);
        BR(55, -64.14, 0, 0);
        delay(td1);

        FR(55, 48.86, 0, 0);
        BL(-55, -61.14, 0,0);
        FL(-55, 45.49, 0, 0);
        BR(55, -64.51, 0, 0);
        delay(td1);

        FR(55, 49.64, 0, 0);
        BL(-55, -60.36, 0,0);
        FL(-55, 45.22, 0, 0);
        BR(55, -64.78, 0, 0);
        delay(td1);

        FR(55, 50.47, 0, 0);
        BL(-55, -59.53, 0,0);
        FL(-55, 45.06, 0, 0);
        BR(55, -64.94, 0, 0);
        delay(td2);

////////////////////////////////////////////////////////
        FR(55, 51.33, 0, 0);
        BL(-55, -58.67, 0,0);
        FL(-55, 45, 0, 0);
        BR(55, -65, 0, 0);
        delay(td2);


        FR(55, 52.22, 0, 0);
        BL(-55, -57.78, 0,0);
        FL(-55, 45.86, 8.75, 0);
        BR(55, -64.14, 8.75, 0);
        delay(td2);

        FR(55, 53.13, 0, 0);
        BL(-55, -56.87, 0,0);
        FL(-55, 48.13, 15, 0);
        BR(55, -61.88, 15, 0);
        delay(td2);

        FR(55, 54.06, 0, 0);
        BL(-55, -55.94, 0,0);
        FL(-55, 51.33, 18.75, 0);
        BR(55, -58.67, 18.75, 0);
        delay(td2);

        FR(55, 55, 0, 0);
        BL(-55, -55, 0,0);
        FL(-55, 55, 20, 0);
        BR(55, -55, 20, 0);
        delay(td2);

        FR(55, 55.94, 0, 0);
        BL(-55, -54.06, 0,0);
        FL(-55, 58.67, 18.75,0);
        BR(55, -51.33, 18.75, 0);
        delay(td2);

        FR(55, 56.87, 0, 0);
        BL(-55, -53.13, 0,0);
        FL(-55, 61.88, 15,0);
        BR(55, -48.13, 15, 0);
        delay(td2);

        FR(55, 57.78, 0, 0);
        BL(-55, -52.22, 0,0);
        FL(-55, 64.14, 8.75,0);
        BR(55, -45.86, 8.75, 0);
        delay(td2);

///////////////////////////////////////////////////////////////////
        FR(55, 58.67, 0, 0);
        BL(-55, -51.33, 0,0);
        FL(-55, 65, 0,0);
        BR(55, -45, 0, 0);
        delay(td2);

        FR(55, 59.53, 0, 0);
        BL(-55, -50.47, 0,0);
        FL(-55, 64.94, 0,0);
        BR(55, -45.06, 0, 0);
        delay(td2);

        FR(55, 60.36,  0,0);
        BL(-55, -49.64, 0,0);
        FL(-55, 64.78, 0,0);
        BR(55, -45.22, 0,0);
        delay(td2);

        FR(55, 61.14, 0, 0);
        BL(-55, -48.86, 0,0);
        FL(-55, 64.51, 0,0);
        BR(55, -45.49, 0, 0);
        delay(td2);

        FR(55, 61.88, 0, 0);
        BL(-55, -48.13, 0,0);
        FL(-55, 64.14, 0,0);
        BR(55, -45.86, 0, 0);
        delay(td2);

        FR(55, 62.55, 0, 0);
        BL(-55, -47.45, 0,0);
        FL(-55, 63.69, 0,0);
        BR(55, -46.31, 0, 0);
        delay(td2);

        FR(55, 63.15, 0, 0);
        BL(-55, -46.85, 0,0);
        FL(-55, 63.15, 0,0);
        BR(55, -46.85, 0, 0);
        delay(td2);

        FR(55, 63.69, 0, 0);
        BL(-55, -46.31, 0,0);
        FL(-55, 62.55, 0,0);
        BR(55, -47.45, 0, 0);
        delay(td2);

        FR(55, 64.14, 0, 0);
        BL(-55, -45.86, 0,0);
        FL(-55, 61.88, 0,0);
        BR(55, -48.13, 0, 0);
        delay(td2);

        FR(55, 64.78, 0, 0);
        BL(-55, -45.22, 0,0);
        FL(-55, 60.36, 0,0);
        BR(55, -49.64, 0, 0);
        delay(td2);

        FR(55, 64.94, 0, 0);
        BL(-55, -45.06, 0,0);
        FL(-55, 59.53, 0,0);
        BR(55, -50.47, 0, 0);
        delay(td2);

/////////////////////////////////////////////////
        FR(55, 65, 0, 0);
        BL(-55, -45, 0,0);
        FL(-55, 58.67, 0,0);
        BR(55, -51.33, 0, 0);
        delay(td2);

        FR(55, 64.14, 8.75, 0);
        BL(-55, -45.86, 8.75,0);
        FL(-55, 57.78, 0, 0);
        BR(55, -52.22, 0, 0);
        delay(td2);

        FR(55, 61.88, 15, 0);
        BL(-55, -48.13, 15,0);
        FL(-55, 56.87, 0, 0);
        BR(55, -53.13, 0, 0);
        delay(td2);

        FR(55, 58.67, 18.75, 0);
        BL(-55, -51.33, 18.75,0);
        FL(-55, 55.94, 0, 0);
        BR(55, -54.06, 0, 0);
        delay(td2);

        FR(55, 55, 20, 0);
        BL(-55, -55,20,0);
        FL(-55, 55, 0, 0);
        BR(55, -55, 0, 0);
        delay(td2);

        FR(55, 51.33, 18.75, 0);
        BL(-55, -58.67, 18.75,0);
        FL(-55, 54.06, 0,0);
        BR(55, -55.94, 0, 0);
        delay(td2);

        FR(55, 48.13, 15, 0);
        BL(-55, -61.88, 15,0);
        FL(-55, 53.13, 0,0);
        BR(55, -56.87, 0, 0);
        delay(td2);

        FR(55, 45.86, 8.75, 0);
        BL(-55, -64.14, 8.75,0);
        FL(-55, 52.22, 0,0);
        BR(55, -57.78, 0, 0);
        delay(td2);
}



void kiripecah(){ //Gerakan lambat, Sudut Belok = 5

        FR(55, 35, 0, 0);
        BL(-55, -75, 0,0);
        FL(-55, 45.37, 0,0);
        BR(55, -64.63, 0, 0);
        delay(td1);

        FR(55, 35.36, 0, 0);
        BL(-55, -74.64, 0,0);
        FL(-55, 42.54, 0,0);
        BR(55, -67.46, 0, 0);
        delay(td1);

        FR(55, 36.37, 0, 0);
        BL(-55, -73.63, 0,0);
        FL(-55, 40.05, 0,0);
        BR(55, -69.95, 0, 0);  
        delay(td1);

        FR(55, 37.96, 0, 0);
        BL(-55, -72.04, 0,0);
        FL(-55, 37.96, 0,0);
        BR(55, -72.04, 0, 0);
        delay(td1);

        FR(55, 40.05, 0, 0);
        BL(-55, -69.95, 0,0);
        FL(-55, 36.37, 0, 0);
        BR(55, -73.63, 0, 0);
        delay(td1);

        FR(55, 42.54, 0, 0);
        BL(-55, -67.46, 0,0);
        FL(-55, 35.36, 0, 0);
        BR(55, -74.64, 0, 0);
        delay(td1);

        FR(55, 45.37, 0, 0);
        BL(-55, -64.63, 0,0);
        FL(-55, 35, 0, 0);
        BR(55, -75, 0, 0);
        delay(td2);

        FR(55, 48.44, 0, 0);
        BL(-55, -61.56, 0,0);
        FL(-55, 37.96, 19.44, 0);
        BR(55, -72.04, 19.44, 0);
        delay(td2);

        FR(55, 51.68, 0, 0);
        BL(-55, -58.32, 0,0);
        FL(-55, 45.37, 31.11, 0);
        BR(55, -64.63, 31.11, 0);
        delay(td2);

        FR(55, 55, 0, 0);
        BL(-55, -55, 0,0);
        FL(-55, 55, 35, 0);
        BR(55, -55, 35, 0);
        delay(td2);

        FR(55, 58.32, 0, 0);
        BL(-55, -51.68, 0,0);
        FL(-55, 64.63, 31.11, 0);
        BR(55, -45.37, 31.11, 0);
        delay(td2);

        FR(55, 61.56, 0, 0);
        BL(-55, -48.44, 0,0);
        FL(-55, 72.04, 19.44,0);
        BR(55, -37.96, 19.44, 0);
        delay(td2);

        FR(55, 64.63, 0, 0);
        BL(-55, -45.37, 0,0);
        FL(-55, 75, 0,0);
        BR(55, -35, 0, 0);
        delay(td2);

        FR(55, 67.46, 0, 0);
        BL(-55, -42.54, 0,0);
        FL(-55, 74.64, 0,0);
        BR(55, -35.36, 0, 0);
        delay(td1);

        FR(55, 69.95, 0, 0);
        BL(-55, -40.05, 0,0);
        FL(-55, 73.63, 0,0);
        BR(55, -36.37, 0, 0);
        delay(td1);

        FR(55, 72.04, 0, 0);
        BL(-55, -37.96, 0,0);
        FL(-55, 72.04, 0,0);
        BR(55, -37.96, 0, 0);  
        delay(td1);

        FR(55, 73.63, 0, 0);
        BL(-55, -36.37, 0,0);
        FL(-55, 69.95, 0,0);
        BR(55, -40.05, 0, 0);
        delay(td1);

        FR(55, 74.64, 0, 0);
        BL(-55, -35.36, 0,0);
        FL(-55, 67.46, 0, 0);
        BR(55, -42.54, 0, 0);
        delay(td1);

        FR(55, 75, 0, 0);
        BL(-55, -35, 0,0);
        FL(-55, 64.63, 0, 0);
        BR(55, -45.37, 0, 0);
        delay(td1);

        FR(55, 72.04, 19.44, 0);
        BL(-55, -37.96, 19.44,0);
        FL(-55, 61.56, 0, 0);
        BR(55, -48.44, 0, 0);
        delay(td2);

        FR(55, 64.63, 31.11, 0);
        BL(-55, -45.37, 31.11,0);
        FL(-55, 58.32, 0, 0);
        BR(55, -51.68, 0, 0);
        delay(td2);

        FR(55, 55, 35, 0);
        BL(-55, -55, 35,0);
        FL(-55, 55, 0, 0);
        BR(55, -55, 0, 0);
        delay(td2);

        FR(55, 45.37, 31.11, 0);
        BL(-55, -64.43, 31.11,0);
        FL(-55, 51.68, 0, 0);
        BR(55, -58.32, 0, 0);
        delay(td2);

        FR(55, 37.96, 19.44, 0);
        BL(-55, -72.04, 19.44,0);
        FL(-55, 48.44, 0, 0);
        BR(55, -61.56, 0, 0);
        delay(td2);
}





//void kananpecah(){ //Gerakan lambat, Sudut Belok = 5
//
//        FR(55, 75, 0,0);
//        BL(-55, -35, 0, 0);
//        FL(-55, 64.63, 0, 0);
//        BR(55, -45.37, 0,0);
//        delay(td1);
//
//        FR(55, 74.64, 0,0);
//        BL(-55, -35.36, 0, 0);
//        FL(-55, 67.46, 0, 0);
//        BR(55, -42.54, 0,0);
//        delay(td1);
//
//        FR(55, 73.63, 0,0);
//        BL(-55, -36.37, 0, 0);
//        FL(-55, 69.95, 0, 0);
//        BR(55, -40.05, 0,0);  
//        delay(td1);
//
//        FR(55, 72.04, 0,0);
//        BL(-55, -37.96, 0, 0);
//        FL(-55, 72.04, 0, 0);
//        BR(55, -37.96, 0,0);
//        delay(td1);
//        
///////////////////////////////////////
//        FR(55, 69.95, 0,0);
//        BL(-55, -40.05, 0, 0);
//        FL(-55, 73.63, 0, 0);
//        BR(55, -36.37, 0, 0);
//        delay(td1);
//
//        FR(55, 67.46, 0,0);
//        BL(-55, -42.54, 0, 0);
//        FL(-55, 74.64, 0, 0);
//        BR(55, -35.36, 0, 0);
//        delay(td1);
//
//        FR(55, 64.63, 0,0);
//        BL(-55, -45.37, 0, 0);
//        FL(-55, 75, 35, 0);
//        BR(55, -35, 35, 0);
//        delay(td2);
//
//        FR(55, 61.56, 0,0);
//        BL(-55, -48.44, 0, 0);
//        FL(-55, 72.04, 19.44, 0);
//        BR(55, -37.96, 19.44, 0);
//        delay(td2);
//
//        FR(55, 58.32, 0,0);
//        BL(-55, -51.68, 0, 0);
//        FL(-55, 64.63, 31.11, 0);
//        BR(55, -45.37, 31.11, 0);
//        delay(td2);
//
//        FR(55, 55, 0, 0);
//        BL(-55, -55, 0,0);
//        FL(-55, 55, 35, 0);
//        BR(55, -55, 35, 0);
//        delay(td2);
//
//        FR(55, 51.68, 0,0);
//        BL(-55, -58.32, 0, 0);
//        FL(-55, 45.37, 31.11, 0);
//        BR(55, -64.63, 31.11, 0);
//        delay(td2);
//
//        FR(55, 48.44, 0,0);
//        BL(-55, -61.56, 0, 0);
//        FL(-55, 37.96, 19.44, 0);
//        BR(55, -72.04, 19.44,0);
//        delay(td2);
//
//        FR(55, 45.37, 0,0);
//        BL(-55, -64.63, 0, 0);
//        FL(-55, 35, 0, 0);
//        BR(55, -75, 0,0);
//        delay(td2);
//
//        FR(55, 42.54, 0,0);
//        BL(-55, -67.46, 0, 0);
//        FL(-55, 35.36, 0, 0);
//        BR(55, -74.64, 0,0);
//        delay(td1);
//
//        FR(55, 40.05, 0,0);
//        BL(-55, -69.95, 0, 0);
//        FL(-55, 36.37, 0, 0);
//        BR(55, -73.63, 0,0);
//        delay(td1);
//
//        FR(55, 37.96, 0,0);
//        BL(-55, -72.04, 0, 0);
//        FL(-55, 37.96, 0, 0);
//        BR(55, -72.04, 0,0);  
//        delay(td1);
//
//        FR(55, 36.37, 0,0);
//        BL(-55, -73.63, 0, 0);
//        FL(-55, 40.05, 0, 0);
//        BR(55, -69.95, 0,0);
//        delay(td1);
//
//        FR(55, 35.36, 0,0);
//        BL(-55, -74.64, 0, 0);
//        FL(-55, 42.54, 0, 0);
//        BR(55, -67.46, 0, 0);
//        delay(td1);
//
//        FR(55, 35, 0,0);
//        BL(-55, -75, 0, 0);
//        FL(-55, 45.37, 0, 0);
//        BR(55, -64.63, 0, 0);
//        delay(td1);
//
//        FR(55, 37.96, 19.44,0);
//        BL(-55, -72.04, 19.44, 0);
//        FL(-55, 48.44, 0, 0);
//        BR(55, -61.56, 0, 0);
//        delay(td2);
//
//        FR(55, 45.37, 31.11,0);
//        BL(-55, -64.63, 31.11, 0);
//        FL(-55, 51.68, 0, 0);
//        BR(55, -58.32, 0, 0);
//        delay(td2);
//
//        FR(55, 55, 35, 0);
//        BL(-55, -55, 35,0);
//        FL(-55, 55, 0, 0);
//        BR(55, -55, 0, 0);
//        delay(td2);
//
//        FR(55, 64.43, 31.11,0);
//        BL(-55, -45.37, 31.11, 0);
//        FL(-55, 58.32, 0, 0);
//        BR(55, -51.68, 0, 0);
//        delay(td2);
//
//        FR(55, 72.04, 19.44,0);
//        BL(-55, -37.96, 19.44, 0);
//        FL(-55, 61.56, 0, 0);
//        BR(55, -48.44, 0, 0);
//        delay(td2);
//
//}

void kananstabil(float lbr){ //Gerakan lambat, Sudut Belok = 5
arahgerak = false;
        FR(85, 55, 0, lbr);
        BL(-25, -55, 0, lbr);
        FL(-69.44, 55, 0, lbr);
        BR(40.56, -55, 0,lbr);
        delay(td1);

        FR(84.47, 55, 0, lbr);
        BL(-25.53, -55, 0,lbr);
        FL(-73.68, 55, 0, lbr);
        BR(36.32, -55, 0,lbr);
        delay(td1);

        FR(82.94, 55, 0, lbr);
        BL(-27.06, -55, 0,lbr);
        FL(-77.43, 55, 0, lbr);
        BR(32.57, -55, 0,lbr);  
        delay(td1);

        FR(80.56, 55, 0, lbr);
        BL(-29.44, -55, 0,lbr);
        FL(-80.56, 55, 0, lbr);
        BR(29.44, -55, 0,lbr);
        delay(td1);

        FR(77.43, 55, 0,  lbr);
        BL(-32.57, -55, 0,lbr);
        FL(-82.94, 55, 0, lbr);
        BR(27.06, -55, 0, lbr);
        delay(td1);

        FR(73.68, 55, 0,  lbr);
        BL(-36.32, -55, 0,lbr);
        FL(-84.47, 55, 0, lbr);
        BR(25.53, -55, 0, lbr);
        delay(td1);

        FR(69.44, 55, 0,  lbr);
        BL(-40.56, -55, 0,lbr);
        FL(-85, 55, 0, lbr);
        BR(25, -55, 0, lbr);
        delay(td2);

        FR(64.84, 55, 0, lbr);
        BL(-45.16, -55, 0,lbr);
        FL(-80.56, 55, 5, lbr);
        BR(29.44, -55, 5, lbr);
        delay(td2);

        FR(59.98, 55, 0, lbr);
        BL(-50, -55, 0,lbr);
        FL(-69.44, 55, 7, lbr);
        BR(40.56, -55, 7, lbr);
        delay(td2);

        FR(55, 55, 0, lbr);
        BL(-55, -55, 0,lbr);
        FL(-55, 55, 10, lbr);
        BR(55, -55, 10, lbr);
        delay(td2);

        FR(50, 55, 0, lbr);
        BL(-59.98, -55, 0,lbr);
        FL(-40.56, 55, 7, lbr);
        BR(69.44, -55, 7, lbr);
        delay(td2);

        FR(45.16, 55, 0, lbr);
        BL(-64.84, -55, 0,lbr);
        FL(-29.44, 55, 5, lbr);
        BR(80.56, -55, 5,lbr);
        delay(td2);

        FR(40.56, 55, 0, lbr);
        BL(-69.44, -55, 0,lbr);
        FL(-25, 55, 0, lbr);
        BR(85, -55, 0,lbr);
        delay(td2);

        FR(36.32, 55, 0, lbr);
        BL(-73.68, -55, 0,lbr);
        FL(-25.53, 55, 0, lbr);
        BR(84.47, -55, 0,lbr);
        delay(td2);

        FR(32.57, 55, 0, lbr);
        BL(-77.43, -55, 0,lbr);
        FL(-27.06, 55, 0, lbr);
        BR(82.94, -55, 0,lbr);
        delay(td2);

        FR(29.44, 55, 0, lbr);
        BL(-80.56, -55, 0,lbr);
        FL(-29.44, 55, 0, lbr);
        BR(80.56, -55, 0,lbr);
        delay(td2);

        FR(27.06, 55, 0, lbr);
        BL(-82.94, -55, 0,lbr);
        FL(-32.57, 55, 0, lbr);
        BR(77.43, -55, 0,lbr);
        delay(td2);

        FR(25.53, 55, 0, lbr);
        BL(-84.47, -55, 0,lbr);
        FL(-36.32, 55, 0, lbr);
        BR(73.68, -55, 0,lbr);
        delay(td2);

        FR(25, 55, 0, lbr);
        BL(-85, -55, 0,lbr);
        FL(-40.56, 55, 0, lbr);
        BR(69.44, -55, 0,lbr);
        delay(td2);

        FR(29.44, 55, 5, lbr);
        BL(-80.56, -55, 5,lbr);
        FL(-45.16, 55, 0, lbr);
        BR(64.48, -55, 0,lbr);
        delay(td2);

        FR(40.56, 55, 7, lbr);
        BL(-69.44, -55, 7,lbr);
        FL(-50, 55, 0, lbr);
        BR(59.98, -55, 0,lbr);
        delay(td2);

        FR(55, 55, 10, lbr);
        BL(-55, -55, 10,lbr);
        FL(-55, 55, 0,lbr);
        BR(55, -55, 0, lbr);
        delay(td2);

        FR(69.44, 55, 7, lbr);
        BL(-40.56, -55, 7,lbr);
        FL(-59.98, 55, 0, lbr);
        BR(50, -55, 0,lbr);
        delay(td2);

        FR(80.56, 55, 5, lbr);
        BL(-29.44, -55, 5,lbr);
        FL(-64.84, 55, 0, lbr);
        BR(45.16, -55, 0,lbr);
        delay(td2);
}

void kananbatu1(float lbr){
  FR(55, 85, 0, lbr);
  BL(-55, -25, 0, lbr);
  FL(-55, 69.44, 0, lbr);
  BR(55, -40.56, 0, lbr);
  delay(tp);

  FR(55, 84.47, 0, lbr);
  BL(-55, -25.53, 0, lbr);
  FL(-55, 73.68, 0, lbr);
  BR(55, -36.32, 0, lbr);
  delay(tp);

  FR(55, 82.84, 0, lbr);
  BL(-55, -27.06, 0, lbr);
  FL(-55, 77.43, 0, lbr);
  BR(55, -32.57, 0, lbr);
  delay(tp);

  FR(55, 80.56, 0, lbr);
  BL(-55, -29.44, 0, lbr);
  FL(-55, 80.56, 0, lbr);
  BR(55, -29.44, 0, lbr);
  delay(tp);

  FR(55, 77.43, 0, lbr);
  BL(-55, -32.57, 0, lbr);
  FL(-55, 82.94, 0, lbr);
  BR(55, -27.06, 0, lbr);
  delay(tp);

  FR(55, 73.68, 0, lbr);
  BL(-55, -36.32, 0, lbr);
  FL(-55, 84.47, 0, lbr);
  BR(55, -25.53, 0, lbr);
  delay(tp);

  FR(55, 69.44, 0, lbr);
  BL(-55, -40.56, 0, lbr);
  FL(-55, 85, 0, lbr);
  BR(55, -25, 0, lbr);
  delay(tp);

  FR(55, 64.84, 0,  lbr);
  BL(-55, -45.16, 0, lbr);
  FL(-55, 80.56, 19.44, lbr);
  BR(55, -29.44, 19.44, lbr);
  delay(tp);

  FR(55, 59.98, 0, lbr);
  BL(-55, -50, 0, lbr);
  FL(-55, 69.44, 31.11, lbr);
  BR(55, -40.56, 31.11, lbr);
  delay(tp);

  FR(55, 55, 0, lbr);
  BL(-55, -55, 0, lbr);
  FL(-55, 55, 35, lbr);
  BR(55, -55, 35, lbr);
  delay(tp);

  FR(55, 50, 0, lbr);
  BL(-55, -59.98, 0, lbr);
  FL(-55, 40.56, 31.11, lbr);
  BR(55, -69.44, 31.11, lbr);
  delay(tp);

  FR(55, 45.16, 0, lbr);
  BL(-55, -64.84, 0, lbr);
  FL(-55, 29.44, 19.44, lbr);
  BR(55, -80.56, 19.44, lbr);
  delay(tp);

  FR(55, 40.56, 0, lbr);
  BL(-55, -69.44, 0, lbr);
  FL(-55, 25, 0, lbr);
  BR(55, -85, 0, lbr);
  delay(tp);

  FR(55, 36.32, 0, lbr);
  BL(-55, -73.68, 0, lbr);
  FL(-55, 25.53, 0, lbr);
  BR(55, -84.47, 0, lbr);
  delay(tp);

  FR(55, 32.57, 0, lbr);
  BL(-55, -77.43, 0, lbr);
  FL(-55, 27.06, 0, lbr);
  BR(55, -82.94, 0, lbr);
  delay(tp);

  FR(55, 29.44, 0, lbr);
  BL(-55, -80.56, 0, lbr);
  FL(-55, 29.44, 0, lbr);
  BR(55, -80.56, 0, lbr);
  delay(tp);

  FR(55, 27.06, 0, lbr);
  BL(-55, -82.94, 0, lbr);
  FL(-55, 32.57, 0, lbr);
  BR(55, -77.43, 0, lbr);
  delay(tp);

  FR(55, 25.53, 0, lbr);
  BL(-55, -84.47, 0, lbr);
  FL(-55, 36.32, 0, lbr);
  BR(55, -73.68, 0, lbr);
  delay(tp);

  FR(55, 25, 0, lbr);
  BL(-55, -85, 0, lbr);
  FL(-55, 40.56, 0, lbr);
  BR(55, -69.44, 0, lbr);
  delay(tp);

  FR(55, 29.44, 19.44, lbr);
  BL(-55, -80.56, 19.44, lbr);
  FL(-55, 45.16, 0, lbr);
  BR(55, -64.48, 0, lbr);
  delay(tp);

  FR(55, 40.56, 31.11, lbr);
  BL(-55, -69.44, 31.11, lbr);
  FL(-55, 50, 0, lbr);
  BR(55, -59.98, 0, lbr);
  delay(tp);

  FR(55, 55, 35, lbr);
  BL(-55, -55, 35, lbr);
  FL(-55, 55, 0, lbr);
  BR(55, -55, 0, lbr);
  delay(tp);

  FR(55, 69.44, 31.11, lbr);
  BL(-55, -40.56, 31.11, lbr);
  FL(-55, 59.98, 0, lbr);
  BR(55, -50, 0, lbr);
  delay(tp);

  FR(55, 80.56, 19.44, lbr);
  BL(-55, -29.44, 19.44, lbr);
  FL(-55, 64.84, 0, lbr);
  BR(55, -45.16, 0, lbr);
  delay(tp);
}





void kiribatu1(float lbr){
  FR(55, 25, 0, lbr);
  BL(-55, -85, 0, lbr);
  FL(-55, 40.56, 0, lbr);
  BR(55, -69.44, 0, lbr);
  delay(tp);

  FR(55, 25.53, 0, lbr);
  BL(-55, -84.47, 0, lbr);
  FL(-55, 36.32, 0, lbr);
  BR(55, -73.68, 0, lbr);
  delay(tp);

  FR(55, 27.06, 0, lbr);
  BL(-55, -82.84, 0, lbr);
  FL(-55, 32.57, 0, lbr);
  BR(55, -77.43, 0, lbr);
  delay(tp);

  FR(55, 29.44, 0, lbr);
  BL(-55, -80.56, 0, lbr);
  FL(-55, 29.44, 0, lbr);
  BR(55, -80.56, 0, lbr);
  delay(tp);

  FR(55, 32.57, 0, lbr);
  BL(-55, -77.43, 0, lbr);
  FL(-55, 27.06, 0, lbr);
  BR(55, -82.94, 0, lbr);
  delay(tp);

  FR(55, 36.32, 0, lbr);
  BL(-55, -73.68, 0, lbr);
  FL(-55, 25.53, 0, lbr);
  BR(55, -84.47, 0, lbr);
  delay(tp);

  FR(55, 40.56, 0, lbr);
  BL(-55, -69.44, 0, lbr);
  FL(-55, 25, 0, lbr);
  BR(55, -85, 0, lbr);
  delay(tp);

  FR(55, 45.16, 0, lbr);
  BL(-55, -64.84, 0,  lbr);
  FL(-55, 29.44, 19.44, lbr);
  BR(55, -80.56, 19.44, lbr);
  delay(tp);

  FR(55, 50, 0, lbr);
  BL(-55, -59.98, 0, lbr);
  FL(-55, 40.56, 31.11, lbr);
  BR(55, -69.44, 31.11, lbr);
  delay(tp);

  FR(55, 55, 0, lbr);
  BL(-55, -55, 0, lbr);
  FL(-55, 55, 35, lbr);
  BR(55, -55, 35, lbr);
  delay(tp);

  FR(55, 59.98, 0, lbr);
  BL(-55, -50, 0, lbr);
  FL(-55, 69.44, 31.11, lbr);
  BR(55, -40.56, 31.11, lbr);
  delay(tp);

  FR(55, 64.84, 0, lbr);
  BL(-55, -45.16, 0, lbr);
  FL(-55, 80.56, 19.44, lbr);
  BR(55, -29.44, 19.44, lbr);
  delay(tp);

  FR(55, 69.44, 0, lbr);
  BL(-55, -40.56, 0, lbr);
  FL(-55, 85, 0, lbr);
  BR(55, -25, 0, lbr);
  delay(tp);

  FR(55, 73.68, 0, lbr);
  BL(-55, -36.32, 0, lbr);
  FL(-55, 84.47, 0, lbr);
  BR(55, -25.53, 0, lbr);
  delay(tp);

  FR(55, 77.43, 0, lbr);
  BL(-55, -32.57, 0, lbr);
  FL(-55, 82.94, 0, lbr);
  BR(55, -27.06, 0, lbr);
  delay(tp);

  FR(55, 80.56, 0, lbr);
  BL(-55, -29.44, 0, lbr);
  FL(-55, 80.56, 0, lbr);
  BR(55, -29.44, 0, lbr);
  delay(tp);

  FR(55, 82.94, 0, lbr);
  BL(-55, -27.06, 0, lbr);
  FL(-55, 77.43, 0, lbr);
  BR(55, -32.57, 0, lbr);
  delay(tp);

  FR(55, 84.47, 0, lbr);
  BL(-55, -25.53, 0, lbr);
  FL(-55, 73.68, 0, lbr);
  BR(55, -36.32, 0, lbr);
  delay(tp);

  FR(55, 85, 0, lbr);
  BL(-55, -25, 0, lbr);
  FL(-55, 69.44, 0, lbr);
  BR(55, -40.56, 0, lbr);
  delay(tp);

  FR(55, 80.56, 19.44, lbr);
  BL(-55, -29.44, 19.44, lbr);
  FL(-55, 64.48, 0, lbr);
  BR(55, -45.16, 0, lbr);
  delay(tp);

  FR(55, 69.44, 31.11, lbr);
  BL(-55, -40.56, 31.11, lbr);
  FL(-55, 59.98, 0, lbr);
  BR(55, -50, 0, lbr);
  delay(tp);

  FR(55, 55, 35, lbr);
  BL(-55, -55, 35, lbr);
  FL(-55, 55, 0, lbr);
  BR(55, -55, 0, lbr);
  delay(tp);

  FR(55, 40.56, 31.11, lbr);
  BL(-55, -69.44, 31.11, lbr);
  FL(-55, 50, 0, lbr);
  BR(55, -59.98, 0, lbr);
  delay(tp);

  FR(55, 29.44, 19.44, lbr);
  BL(-55, -80.56, 19.44, lbr);
  FL(-55, 45.16, 0, lbr);
  BR(55, -64.84, 0, lbr);
  delay(tp);
}


void kanandikitK2(){
  FR(55, 70, 0, 0);
  BL(-55, -40, 0, 0);
  FL(-55, 62.22, 0, 0);
  BR(55, -47.78, 0, 0);
  delay(tk2);

  FR(55, 68.97, 0, 0);
  BL(-55, -41.03, 0, 0);
  FL(-55, 66.21, 0, 0);
  BR(55, -43.79, 0, 0);
  delay(tk2);

  FR(55, 66.21, 0, 0);
  BL(-55, -43.79, 0, 0);
  FL(-55, 68.97, 0, 0);
  BR(55, -41.03, 0, 0);
  delay(tk2);

  FR(55, 62.22, 0, 0);
  BL(-55, -47.78, 0, 0);
  FL(-55, 70, 0, 0);
  BR(55, -40, 0, 0);
  delay(tk2);

  FR(55, 59.92, 0, 0);
  BL(-55, -50.08, 0, 0);
  FL(-55, 67.78, 19.44, 0);
  BR(55, -42.22, 16.67, 0);
  delay(tk2);

  FR(55, 57.49, 0, 0);
  BL(-55, -52.51, 0, 0);
  FL(-55, 62.22, 31.11, 0);
  BR(55, -47.78, 26.67, 0);
  delay(tk2);

  FR(55, 55, 0, 0);
  BL(-55, -55, 0, 0);
  FL(-55, 55, 35, 0);
  BR(55, -55, 30, 0);
  delay(tk2);

  FR(55, 52.51, 0, 0);
  BL(-55, -57.49, 0, 0);
  FL(-55, 47.78, 31.11, 0);
  BR(55, -62.22, 26.67, 0);
  delay(tk2);

  FR(55, 50.08, 0, 0);
  BL(-55, -59.92, 0, 0);
  FL(-55, 42.22, 19.44, 0);
  BR(55, -67.78, 16.67, 0);
  delay(tk2);

  FR(55, 49.48, 0, 0);
  BL(-55, -60.52, 0, 0);
  FL(-55, 41.03, 13.83, 0);
  BR(55, -68.97, 11.85, 0);
  delay(tk2);

  FR(55, 48.38, 0, 0);
  BL(-55, -61.62, 0, 0);
  FL(-55, 40.27, 7.35, 0);
  BR(55, -69.73, 6.3, 0);
  delay(tk2);

  FR(55, 47.78, 0, 0);
  BL(-55, -62.22, 0, 0);
  FL(-55, 40, 0, 0);
  BR(55, -70, 0, 0);
  delay(tk2);

///////////////////////////////////////////
  FR(55, 43.79, 0, 0);
  BL(-55, -66.21, 0, 0);
  FL(-55, 41.03, 0, 0);
  BR(55, -68.97, 0, 0);
  delay(tk2);

  FR(55, 41.03, 0, 0);
  BL(-55, -68.97, 0, 0);
  FL(-55, 43.79, 0, 0);
  BR(55, -66.21, 0, 0);
  delay(tk2);

  FR(55, 40, 0, 0);
  BL(-55, -70, 0, 0);
  FL(-55, 47.78, 0, 0);
  BR(55, -62.22, 0, 0);
  delay(tk2);

  FR(55, 42.22, 16.67, 0);
  BL(-55, -67.78, 16.67, 0);
  FL(-55, 50.08, 0, 0);
  BR(55, -59.92, 0, 0);
  delay(tk2);

  FR(55, 47.78, 26.67, 0);
  BL(-55, -62.22, 26.67, 0);
  FL(-55, 52.51, 0, 0);
  BR(55, -57.49, 0, 0);
  delay(tk2);

  FR(55, 55, 30, 0);
  BL(-55, -55, 30, 0);
  FL(-55, 55, 0, 0);
  BR(55, -55, 0, 0);
  delay(tk2);

  FR(55, 62.22, 26.67, 0);
  BL(-55, -47.78, 26.67, 0);
  FL(-55, 57.49, 0, 0);
  BR(55, -52.51, 0, 0);
  delay(tk2);

  FR(55, 67.78, 16.67, 0);
  BL(-55, -42.22, 16.67, 0);
  FL(-55, 59.92, 0, 0);
  BR(55, -50.08, 0, 0);
  delay(tk2);

  FR(55, 68.97, 11.85, 0);
  BL(-55, -41.03, 11.85, 0);
  FL(-55, 60.52, 0, 0);
  BR(55, -49.48, 0, 0);
  delay(tk2);

  FR(55, 69.73, 6.3, 0);
  BL(-55, -40.27, 6.3, 0);
  FL(-55, 61.62, 0, 0);
  BR(55, -48.38, 0, 0);
  delay(tk2);
}


 void kiridikitK2(){
  FR(55, 40, 0, 0);
  BL(-55, -70, 0, 0);
  FL(-55, 47.78, 0, 0);
  BR(55, -62.22, 0, 0);
  delay(tk2);

  FR(55, 41.03, 0, 0);
  BL(-55, -68.97, 0, 0);
  FL(-55, 43.79, 0, 0);
  BR(55, -66.21, 0, 0);
  delay(tk2);

  FR(55, 43.79, 0, 0);
  BL(-55, -66.21, 0, 0);
  FL(-55, 41.03, 0, 0);
  BR(55, -68.97, 0, 0);
  delay(tk2);

  FR(55, 47.78, 0, 0);
  BL(-55, -62.22, 0, 0);
  FL(-55, 40, 0, 0);
  BR(55, -70, 0, 0);
  delay(tk2);

  FR(55, 50.08, 0, 0);
  BL(-55, -59.92, 0, 0);
  FL(-55, 42.22, 16.67, 0);
  BR(55, -67.78, 16.67, 0);
  delay(tk2);

  FR(55, 52.51, 0, 0);
  BL(-55, -57.49, 0, 0);
  FL(-55, 47.78, 26.67, 0);
  BR(55, -62.22, 26.67, 0);
  delay(tk2);

  FR(55, 55, 0, 0);
  BL(-55, -55, 0, 0);
  FL(-55, 55, 30, 0);
  BR(55, -55, 30, 0);
  delay(tk2);

  FR(55, 57.49, 0, 0);
  BL(-55, -52.51, 0, 0);
  FL(-55, 62.22, 26.67, 0);
  BR(55, -47.78, 26.67, 0);
  delay(tk2);

  FR(55, 59.92, 0, 0);
  BL(-55, -50.08, 0, 0);
  FL(-55, 67.78, 16.67, 0);
  BR(55, -42.22, 16.67, 0);
  delay(tk2);

  FR(55, 60.52, 0, 0);
  BL(-55, -49.48, 0, 0);
  FL(-55, 68.97, 11.85, 0);
  BR(55, -41.03, 11.85, 0);
  delay(tk2);

  FR(55, 61.62, 0, 0);
  BL(-55, -48.38, 0, 0);
  FL(-55, 69.73, 6.3, 0);
  BR(55, -40.27, 6.3, 0);
  delay(tk2);

  FR(55, 62.22, 0, 0);
  BL(-55, -47.78, 0, 0);
  FL(-55, 70, 0, 0);
  BR(55, -40, 0, 0);
  delay(tk2);

///////////////////////////////////////////
  FR(55, 66.21, 0, 0);
  BL(-55, -43.79, 0, 0);
  FL(-55, 68.97, 0, 0);
  BR(55, -41.03, 0, 0);
  delay(tk2);

  FR(55, 68.97, 0, 0);
  BL(-55, -41.03, 0, 0);
  FL(-55, 66.21, 0, 0);
  BR(55, -43.79, 0, 0);
  delay(tk2);

  FR(55, 70, 0, 0);
  BL(-55, -40, 0, 0);
  FL(-55, 62.22, 0, 0);
  BR(55, -47.78, 0, 0);
  delay(tk2);

  FR(55, 67.78, 19.44, 0);
  BL(-55, -42.22, 16.67, 0);
  FL(-55, 59.92, 0, 0);
  BR(55, -50.08, 0, 0);
  delay(tk2);

  FR(55, 62.22, 31.11, 0);
  BL(-55, -47.78, 26.67, 0);
  FL(-55, 57.49, 0, 0);
  BR(55, -52.51, 0, 0);
  delay(tk2);

  FR(55, 55, 35, 0);
  BL(-55, -55, 30, 0);
  FL(-55, 55, 0, 0);
  BR(55, -55, 0, 0);
  delay(tk2);

  FR(55, 47.78, 31.11, 0);
  BL(-55, -62.22, 26.67, 0);
  FL(-55, 52.51, 0, 0);
  BR(55, -57.49, 0, 0);
  delay(tk2);

  FR(55, 42.22, 19.44, 0);
  BL(-55, -67.78, 16.67, 0);
  FL(-55, 50.08, 0, 0);
  BR(55, -59.92, 0, 0);
  delay(tk2);

  FR(55, 41.03, 13.83, 0);
  BL(-55, -68.97, 11.85, 0);
  FL(-55, 49.48, 0, 0);
  BR(55, -60.52, 0, 0);
  delay(tk2);

  FR(55, 40.27, 7.35, 0);
  BL(-55, -69.73, 6.3, 0);
  FL(-55, 48.38, 0, 0);
  BR(55, -61.62, 0, 0);
  delay(tk2);
 }


 void kiridikitK2Fix() {
movecounter++;
if (movecounter == 1){
  FR(55, 55, 30, 0);
  BL(-55, -55, 30, 0);
  FL(-55, 55, 0, 0);
  BR(55, -55, 0, 0);
  delay(tk2);

  FR(55, 47.78, 26.67, 0);
  BL(-55, -62.22, 26.67, 0);
  FL(-55, 52.51, 0, 0);
  BR(55, -57.49, 0, 0);
  delay(tk2);

  FR(55, 42.22, 16.67, 0);
  BL(-55, -67.78, 16.67, 0);
  FL(-55, 50.08, 0, 0);
  BR(55, -59.92, 0, 0);
  delay(tk2);

  FR(55, 41.03, 11.85, 0);
  BL(-55, -68.97, 11.85, 0);
  FL(-55, 49.48, 0, 0);
  BR(55, -60.52, 0, 0);
  delay(tk2);

  FR(55, 40.27, 6.3, 0);
  BL(-55, -69.73, 6.3, 0);
  FL(-55, 48.38, 0, 0);
  BR(55, -61.62, 0, 0);
  delay(tk2);
  
  FR(55, 40, 0, 0);
  BL(-55, -70, 0, 0);
  FL(-55, 47.78, 0, 0);
  BR(55, -62.22, 0, 0);
  delay(tk2);

  FR(55, 41.03, 0, 0);
  BL(-55, -68.97, 0, 0);
  FL(-55, 43.79, 0, 0);
  BR(55, -66.21, 0, 0);
  delay(tk2);

  FR(55, 43.79, 0, 0);
  BL(-55, -66.21, 0, 0);
  FL(-55, 41.03, 0, 0);
  BR(55, -68.97, 0, 0);
  delay(tk2);

  FR(55, 47.78, 0, 0);
  BL(-55, -62.22, 0, 0);
  FL(-55, 40, 0, 0);
  BR(55, -70, 0, 0);
  delay(tk2);

  FR(55, 50.08, 0, 0);
  BL(-55, -59.92, 0, 0);
  FL(-55, 42.22, 20.56, 0);
  BR(55, -67.78, 16.67, 0);
  delay(tk2);

  FR(55, 52.51, 0, 0);
  BL(-55, -57.49, 0, 0);
  FL(-55, 47.78, 32.89, 0);
  BR(55, -62.22, 26.67, 0);
  delay(tk2);
}
else if (movecounter == 2){
  FR(55, 55, 0, 0);
  BL(-55, -55, 0, 0);
  FL(-55, 55, 37, 0);
  BR(55, -55, 30, 0);
  delay(tk2);

  FR(55, 57.49, 0, 0);
  BL(-55, -52.51, 0, 0);
  FL(-55, 62.22, 32.89, 0);
  BR(55, -47.78, 26.67, 0);
  delay(tk2);

  FR(55, 59.92, 0, 0);
  BL(-55, -50.08, 0, 0);
  FL(-55, 67.78, 20.56, 0);
  BR(55, -42.22, 16.67, 0);
  delay(tk2);

  FR(55, 60.52, 0, 0);
  BL(-55, -49.48, 0, 0);
  FL(-55, 68.97, 14.62, 0);
  BR(55, -41.03, 11.85, 0);
  delay(tk2);

  FR(55, 61.62, 0, 0);
  BL(-55, -48.38, 0, 0);
  FL(-55, 69.73, 7.77, 0);
  BR(55, -40.27, 6.3, 0);
  delay(tk2);

  FR(55, 62.22, 0, 0);
  BL(-55, -47.78, 0, 0);
  FL(-55, 70, 0, 0);
  BR(55, -40, 0, 0);
  delay(tk2);

///////////////////////////////////////////
  FR(55, 66.21, 0, 0);
  BL(-55, -43.79, 0, 0);
  FL(-55, 68.97, 0, 0);
  BR(55, -41.03, 0, 0);
  delay(tk2);

  FR(55, 68.97, 0, 0);
  BL(-55, -41.03, 0, 0);
  FL(-55, 66.21, 0, 0);
  BR(55, -43.79, 0, 0);
  delay(tk2);

  FR(55, 70, 0, 0);
  BL(-55, -40, 0, 0);
  FL(-55, 62.22, 0, 0);
  BR(55, -47.78, 0, 0);
  delay(tk2);

  FR(55, 67.78, 19.44, 0);
  BL(-55, -42.22, 16.67, 0);
  FL(-55, 59.92, 0, 0);
  BR(55, -50.08, 0, 0);
  delay(tk2);

  FR(55, 62.22, 31.11, 0);
  BL(-55, -47.78, 26.67, 0);
  FL(-55, 57.49, 0, 0);
  BR(55, -52.51, 0, 0);
  delay(tk2);
  movecounter = 0;
}
}


void kiridikitK2Fix1() {
movecounter++;
if (movecounter == 1){
  FR(55, 55, 30, 0);
  BL(-55, -55, 30, 0);
  FL(-55, 55, 0, 0);
  BR(55, -55, 0, 0);
  delay(tk2);

  FR(55, 47.78, 26.67, 0);
  BL(-55, -62.22, 26.67, 0);
  FL(-55, 52.75, 0, 0);
  BR(55, -57.25, 0, 0);
  delay(tk2);

  FR(55, 42.22, 16.67, 0);
  BL(-55, -67.78, 16.67, 0);
  FL(-55, 50.51, 0, 0);
  BR(55, -59.48, 0, 0);
  delay(tk2);

  FR(55, 41.03, 11.85, 0);
  BL(-55, -68.97, 11.85, 0);
  FL(-55, 49.8, 0, 0);
  BR(55, -60.3, 0, 0);
  delay(tk2);

  FR(55, 40.27, 6.3, 0);
  BL(-55, -69.73, 6.3, 0);
  FL(-55, 49, 0, 0);
  BR(55, -61, 0, 0);
  delay(tk2);
  
  FR(55, 40, 0, 0);
  BL(-55, -70, 0, 0);
  FL(-55, 48.3, 0, 0);
  BR(55, -61.7, 0, 0);
  delay(tk2);
///////////////////////////////////////////////
  FR(55, 41.3, 0, 0);
  BL(-55, -68.7, 0, 0);
  FL(-55, 47, 0, 0);
  BR(55, -63, 0, 0);
  delay(tk2);

  FR(55, 44.15, 0, 0);
  BL(-55, -65.85, 0, 0);
  FL(-55, 44.15, 0, 0);
  BR(55, -65.85, 0, 0);
  delay(tk2);

  FR(55, 47, 0, 0);
  BL(-55, -63, 0, 0);
  FL(-55, 41.3, 0, 0);
  BR(55, -68.7, 0, 0);
  delay(tk2);
  
///////////////////////////////////////////////
  FR(55, 48.3, 0, 0);
  BL(-55, -61.7, 0, 0);
  FL(-55, 40, 0, 0);
  BR(55, -70, 0, 0);
  delay(tk2);

  FR(55, 50.51, 0, 0);
  BL(-55, -59.92, 0, 0);
  FL(-55, 42.22, 20.56, 0);
  BR(55, -67.78, 16.67, 0);
  delay(tk2);

  FR(55, 52.75, 0, 0);
  BL(-55, -57.49, 0, 0);
  FL(-55, 47.78, 32.89, 0);
  BR(55, -62.22, 26.67, 0);
  delay(tk2);
}
else if (movecounter == 2){
  FR(55, 55, 0, 0);
  BL(-55, -55, 0, 0);
  FL(-55, 55, 37, 0);
  BR(55, -55, 30, 0);
  delay(tk2);

  FR(55, 57.25, 0, 0);
  BL(-55, -52.75, 0, 0);
  FL(-55, 62.22, 32.89, 0);
  BR(55, -47.78, 26.67, 0);
  delay(tk2);

  FR(55, 59.48, 0, 0);
  BL(-55, -50.51, 0, 0);
  FL(-55, 67.78, 20.56, 0);
  BR(55, -42.22, 16.67, 0);
  delay(tk2);

  FR(55, 60.3, 0, 0);
  BL(-55, -49.8, 0, 0);
  FL(-55, 68.97, 14.62, 0);
  BR(55, -41.03, 11.85, 0);
  delay(tk2);

  FR(55, 61, 0, 0);
  BL(-55, -49, 0, 0);
  FL(-55, 69.73, 7.77, 0);
  BR(55, -40.27, 6.3, 0);
  delay(tk2);

  FR(55, 61.7, 0, 0);
  BL(-55, -48.3, 0, 0);
  FL(-55, 70, 0, 0);
  BR(55, -40, 0, 0);
  delay(tk2);

///////////////////////////////////////////
  FR(55, 63, 0, 0);
  BL(-55, -47, 0, 0);
  FL(-55, 68.7, 0, 0);
  BR(55, -41.3, 0, 0);
  delay(tk2);

  FR(55, 65.85, 0, 0);
  BL(-55, -44.15, 0, 0);
  FL(-55, 65.85, 0, 0);
  BR(55, -44.15, 0, 0);
  delay(tk2);

  FR(55, 68.7, 0, 0);
  BL(-55, -41.3, 0, 0);
  FL(-55, 63, 0, 0);
  BR(55, -47, 0, 0);
  delay(tk2);
//////////////////////////////////////////

  FR(55, 70, 0, 0);
  BL(-55, -40, 0, 0);
  FL(-55, 61.7, 0, 0);
  BR(55, -48.3, 0, 0);
  delay(tk2);

  FR(55, 67.78, 19.44, 0);
  BL(-55, -42.22, 16.67, 0);
  FL(-55, 59.48, 0, 0);
  BR(55, -50.51, 0, 0);
  delay(tk2);

  FR(55, 62.22, 31.11, 0);
  BL(-55, -47.78, 26.67, 0);
  FL(-55, 57.25, 0, 0);
  BR(55, -52.75, 0, 0);
  delay(tk2);
  movecounter = 0;
}
}


void kiridikitK2Fix2() {
//  arahgerak = false;
movecounter++;
if (movecounter == 1){
  FR(55, 55, 30, 0);
  BL(-55, -55, 30, 0);
  FL(-55, 55, 0, 0);
  BR(55, -55, 0, 0);
  delay(tk2);

  FR(55, 47.78, 26.67, 0);
  BL(-55, -62.22, 26.67, 0);
  FL(-55, 53.88, 0, 0);
  BR(55, -56.12, 0, 0);
  delay(tk2);

  FR(55, 42.22, 16.67, 0);
  BL(-55, -67.78, 16.67, 0);
  FL(-55, 52.76, 0, 0);
  BR(55, -57.24, 0, 0);
  delay(tk2);

  FR(55, 41.03, 11.85, 0);
  BL(-55, -68.97, 11.85, 0);
  FL(-55, 52.47, 0, 0);
  BR(55, -57.53, 0, 0);
  delay(tk2);

  FR(55, 40.27, 6.3, 0);
  BL(-55, -69.73, 6.3, 0);
  FL(-55, 51.94, 0, 0);
  BR(55, -58.06, 0, 0);
  delay(tk2);
  
  FR(55, 40, 0, 0);
  BL(-55, -70, 0, 0);
  FL(-55, 51.65, 0, 0);
  BR(55, -58.35, 0, 0);
  delay(tk2);
  
///////////////////////////////////////////////
  FR(55, 40.86, 0, 0);
  BL(-55, -69.14, 0, 0);
  FL(-55, 50.79, 0, 0);
  BR(55, -59.21, 0, 0);
  delay(tk2);

  FR(55, 43.02, 0, 0);
  BL(-55, -66.98, 0, 0);
  FL(-55, 48.63, 0, 0);
  BR(55, -61.37, 0, 0);
  delay(tk2);

  FR(55, 45.82, 0, 0);
  BL(-55, -64.18, 0, 0);
  FL(-55, 45.82, 0, 0);
  BR(55, -64.18, 0, 0);
  delay(tk2);

  FR(55, 48.63, 0, 0);
  BL(-55, -61.37, 0, 0);
  FL(-55, 43.02, 0, 0);
  BR(55, -66.98, 0, 0);
  delay(tk2);

  FR(55, 50.79, 0, 0);
  BL(-55, -59.21, 0, 0);
  FL(-55, 40.86, 0, 0);
  BR(55, -69.14, 0, 0);
  delay(tk2);
  
///////////////////////////////////////////////
  FR(55, 51.65, 0, 0);
  BL(-55, -58.35, 0, 0);
  FL(-55, 40, 0, 0);
  BR(55, -70, 0, 0);
  delay(tk2);
//////////////////////////////////////////////

  FR(55, 52.76, 0, 0);
  BL(-55, -57.24, 0, 0);
  FL(-55, 42.22, 20.56, 0);
  BR(55, -67.78, 16.67, 0);
  delay(tk2);

  FR(55, 53.88, 0, 0);
  BL(-55, -56.12, 0, 0);
  FL(-55, 47.78, 32.89, 0);
  BR(55, -62.22, 26.67, 0);
  delay(tk2);
}
else if (movecounter == 2){
  FR(55,  55, 0, 0);
  BL(-55,-55, 0, 0);
  FL(-55, 55, 37, 0);
  BR(55, -55, 30, 0);
  delay(tk2);

  FR(55, 56.12, 0, 0);
  BL(-55, -53.88, 0, 0);
  FL(-55, 62.22, 32.89, 0);
  BR(55, -47.78, 26.67, 0);
  delay(tk2);

  FR(55, 57.24, 0, 0);
  BL(-55, -52.76, 0, 0);
  FL(-55, 67.78, 20.56, 0);
  BR(55, -42.22, 16.67, 0);
  delay(tk2);

  FR(55, 57.53, 0, 0);
  BL(-55, -52.47, 0, 0);
  FL(-55, 68.97, 14.62, 0);
  BR(55, -41.03, 11.85, 0);
  delay(tk2);

  FR(55, 58.06, 0, 0);
  BL(-55, -51.94, 0, 0);
  FL(-55, 69.73, 7.77, 0);
  BR(55, -40.27, 6.3, 0);
  delay(tk2);

  FR(55, 58.35, 0, 0);
  BL(-55, -51.65, 0, 0);
  FL(-55, 70, 0, 0);
  BR(55, -40, 0, 0);
  delay(tk2);
  
///////////////////////////////////////////

  FR(55, 59.21, 0, 0);
  BL(-55, -50.79, 0, 0);
  FL(-55, 69.14, 0, 0);
  BR(55, -40.86, 0, 0);
  delay(tk2);

  FR(55, 61.37, 0, 0);
  BL(-55, -48.63, 0, 0);
  FL(-55, 66.98, 0, 0);
  BR(55, -43.02, 0, 0);
  delay(tk2);

  FR(55, 64.18, 0, 0);
  BL(-55, -45.82, 0, 0);
  FL(-55, 64.18, 0, 0);
  BR(55, -45.82, 0, 0);
  delay(tk2);

  FR(55, 66.98, 0, 0);
  BL(-55, -43.02, 0, 0);
  FL(-55, 61.37, 0, 0);
  BR(55, -48.63, 0, 0);
  delay(tk2);

  FR(55, 69.14, 0, 0);
  BL(-55, -40.86, 0, 0);
  FL(-55, 59.21, 0, 0);
  BR(55, -50.79, 0, 0);
  delay(tk2);
  
//////////////////////////////////////////

  FR(55, 70, 0, 0);
  BL(-55, -40, 0, 0);
  FL(-55, 58.35, 0, 0);
  BR(55, -51.65, 0, 0);
  delay(tk2);

  FR(55, 67.78, 19.44, 0);
  BL(-55, -42.22, 16.67, 0);
  FL(-55, 57.24, 0, 0);
  BR(55, -52.76, 0, 0);
  delay(tk2);

  FR(55, 62.22, 0, 0);
  BL(-55, -47.78, 0, 0);
  FL(-55, 56.12, 0, 0);
  BR(55, -53.88, 0, 0);
  delay(tk2);
  movecounter = 0;
}
}
